

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Sep 04 18:46:53 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    47  0000                     
    48                           ; Version 2.20
    49                           ; Generated 12/02/2020 GMT
    50                           ; 
    51                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F4550 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     _SPBRGH	set	4016
    83  0000                     _SPBRG	set	4015
    84  0000                     _BAUDCON	set	4024
    85  0000                     _RCSTA	set	4011
    86  0000                     _TXSTA	set	4012
    87  0000                     _TRISCbits	set	3988
    88  0000                     _TXSTAbits	set	4012
    89  0000                     _TXREG	set	4013
    90  0000                     _SSPBUF	set	4041
    91  0000                     _SSPCON2bits	set	4037
    92  0000                     _SSPADD	set	4040
    93  0000                     _SSPCON1bits	set	4038
    94  0000                     _SSPSTATbits	set	4039
    95  0000                     _TRISB	set	3987
    96  0000                     _OSCCONbits	set	4051
    97                           
    98                           	psect	smallconst
    99  000800                     __psmallconst:
   100                           	callstack 0
   101  000800  00                 	db	0
   102  000801                     STR_2:
   103  000801  41                 	db	65	;'A'
   104  000802  3A                 	db	58	;':'
   105  000803  25                 	db	37
   106  000804  30                 	db	48	;'0'
   107  000805  32                 	db	50	;'2'
   108  000806  75                 	db	117	;'u'
   109  000807  20                 	db	32
   110  000808  4D                 	db	77	;'M'
   111  000809  3A                 	db	58	;':'
   112  00080A  25                 	db	37
   113  00080B  30                 	db	48	;'0'
   114  00080C  32                 	db	50	;'2'
   115  00080D  75                 	db	117	;'u'
   116  00080E  20                 	db	32
   117  00080F  44                 	db	68	;'D'
   118  000810  5F                 	db	95	;'_'
   119  000811  4D                 	db	77	;'M'
   120  000812  3A                 	db	58	;':'
   121  000813  25                 	db	37
   122  000814  30                 	db	48	;'0'
   123  000815  32                 	db	50	;'2'
   124  000816  75                 	db	117	;'u'
   125  000817  20                 	db	32
   126  000818  44                 	db	68	;'D'
   127  000819  5F                 	db	95	;'_'
   128  00081A  53                 	db	83	;'S'
   129  00081B  3A                 	db	58	;':'
   130  00081C  25                 	db	37
   131  00081D  30                 	db	48	;'0'
   132  00081E  32                 	db	50	;'2'
   133  00081F  75                 	db	117	;'u'
   134  000820  20                 	db	32
   135  000821  0A                 	db	10
   136  000822  0D                 	db	13
   137  000823  00                 	db	0
   138  000824                     STR_1:
   139  000824  48                 	db	72	;'H'
   140  000825  3A                 	db	58	;':'
   141  000826  25                 	db	37
   142  000827  30                 	db	48	;'0'
   143  000828  32                 	db	50	;'2'
   144  000829  75                 	db	117	;'u'
   145  00082A  20                 	db	32
   146  00082B  4D                 	db	77	;'M'
   147  00082C  3A                 	db	58	;':'
   148  00082D  25                 	db	37
   149  00082E  30                 	db	48	;'0'
   150  00082F  32                 	db	50	;'2'
   151  000830  75                 	db	117	;'u'
   152  000831  20                 	db	32
   153  000832  53                 	db	83	;'S'
   154  000833  3A                 	db	58	;':'
   155  000834  25                 	db	37
   156  000835  30                 	db	48	;'0'
   157  000836  32                 	db	50	;'2'
   158  000837  75                 	db	117	;'u'
   159  000838  20                 	db	32
   160  000839  0A                 	db	10
   161  00083A  0D                 	db	13
   162  00083B  00                 	db	0
   163  00083C  00                 	db	0	; dummy byte at the end
   164  0000                     
   165                           ; #config settings
   166                           
   167                           	psect	cinit
   168  001BBA                     __pcinit:
   169                           	callstack 0
   170  001BBA                     start_initialization:
   171                           	callstack 0
   172  001BBA                     __initialization:
   173                           	callstack 0
   174                           
   175                           ; Clear objects allocated to BANK0 (53 bytes)
   176  001BBA  EE00  F060         	lfsr	0,__pbssBANK0
   177  001BBE  0E35               	movlw	53
   178  001BC0                     clear_0:
   179  001BC0  6AEE               	clrf	postinc0,c
   180  001BC2  06E8               	decf	wreg,f,c
   181  001BC4  E1FD               	bnz	clear_0
   182                           
   183                           ; Clear objects allocated to COMRAM (1 bytes)
   184  001BC6  6A5F               	clrf	__pbssCOMRAM& (0+255),c
   185  001BC8                     end_of_initialization:
   186                           	callstack 0
   187  001BC8                     __end_of__initialization:
   188                           	callstack 0
   189  001BC8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   190  001BCA  6EF8               	movwf	tblptru,c
   191  001BCC  0100               	movlb	0
   192  001BCE  EF1E  F009         	goto	_main	;jump to C main() function
   193                           
   194                           	psect	bssCOMRAM
   195  00005F                     __pbssCOMRAM:
   196                           	callstack 0
   197  00005F                     _Val_H:
   198                           	callstack 0
   199  00005F                     	ds	1
   200                           
   201                           	psect	bssBANK0
   202  000060                     __pbssBANK0:
   203                           	callstack 0
   204  000060                     _nout:
   205                           	callstack 0
   206  000060                     	ds	2
   207  000062                     _width:
   208                           	callstack 0
   209  000062                     	ds	2
   210  000064                     _prec:
   211                           	callstack 0
   212  000064                     	ds	2
   213  000066                     _flags:
   214                           	callstack 0
   215  000066                     	ds	2
   216  000068                     _i:
   217                           	callstack 0
   218  000068                     	ds	2
   219  00006A                     _unidades:
   220                           	callstack 0
   221  00006A                     	ds	1
   222  00006B                     _centenas:
   223                           	callstack 0
   224  00006B                     	ds	1
   225  00006C                     _decenas:
   226                           	callstack 0
   227  00006C                     	ds	1
   228  00006D                     _Val_L:
   229                           	callstack 0
   230  00006D                     	ds	1
   231  00006E                     _dbuf:
   232                           	callstack 0
   233  00006E                     	ds	32
   234  00008E                     _DIA_SEMANA:
   235                           	callstack 0
   236  00008E                     	ds	1
   237  00008F                     _DIA_MES:
   238                           	callstack 0
   239  00008F                     	ds	1
   240  000090                     _MES:
   241                           	callstack 0
   242  000090                     	ds	1
   243  000091                     _YEAR:
   244                           	callstack 0
   245  000091                     	ds	1
   246  000092                     _SEGUNDO:
   247                           	callstack 0
   248  000092                     	ds	1
   249  000093                     _MINUTO:
   250                           	callstack 0
   251  000093                     	ds	1
   252  000094                     _HORA:
   253                           	callstack 0
   254  000094                     	ds	1
   255                           
   256                           	psect	cstackBANK0
   257  000095                     __pcstackBANK0:
   258                           	callstack 0
   259  000095                     ?_printf:
   260                           	callstack 0
   261  000095                     printf@fmt:
   262                           	callstack 0
   263                           
   264                           ; 2 bytes @ 0x0
   265  000095                     	ds	10
   266  00009F                     
   267                           ; 2 bytes @ 0xA
   268  00009F                     	ds	2
   269  0000A1                     
   270                           ; 3 bytes @ 0xC
   271  0000A1                     	ds	3
   272                           
   273                           	psect	cstackCOMRAM
   274  000001                     __pcstackCOMRAM:
   275                           	callstack 0
   276  000001                     ?_strlen:
   277                           	callstack 0
   278  000001                     ?_isdigit:
   279                           	callstack 0
   280  000001                     ?_isspace:
   281                           	callstack 0
   282  000001                     ?___wmul:
   283                           	callstack 0
   284  000001                     ?___awdiv:
   285                           	callstack 0
   286  000001                     ?___awmod:
   287                           	callstack 0
   288  000001                     ?___lldiv:
   289                           	callstack 0
   290  000001                     ?___lodiv:
   291                           	callstack 0
   292  000001                     ?___lomod:
   293                           	callstack 0
   294  000001                     I2C_Write_Slave@data:
   295                           	callstack 0
   296  000001                     putch@c:
   297                           	callstack 0
   298  000001                     I2C_ReadData@Ptr_data:
   299                           	callstack 0
   300  000001                     ___wmul@multiplier:
   301                           	callstack 0
   302  000001                     ___awdiv@dividend:
   303                           	callstack 0
   304  000001                     ___awmod@dividend:
   305                           	callstack 0
   306  000001                     isdigit@c:
   307                           	callstack 0
   308  000001                     isspace@c:
   309                           	callstack 0
   310  000001                     strlen@s:
   311                           	callstack 0
   312  000001                     ___lldiv@dividend:
   313                           	callstack 0
   314  000001                     ___lodiv@dividend:
   315                           	callstack 0
   316  000001                     ___lomod@dividend:
   317                           	callstack 0
   318                           
   319                           ; 8 bytes @ 0x0
   320  000001                     	ds	1
   321  000002                     fputc@c:
   322                           	callstack 0
   323                           
   324                           ; 2 bytes @ 0x1
   325  000002                     	ds	1
   326  000003                     ??_isdigit:
   327  000003                     ??_isspace:
   328  000003                     I2C_ReadData@var_Ack_nAck:
   329                           	callstack 0
   330  000003                     ___wmul@multiplicand:
   331                           	callstack 0
   332  000003                     ___awdiv@divisor:
   333                           	callstack 0
   334  000003                     ___awmod@divisor:
   335                           	callstack 0
   336  000003                     strlen@a:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0x2
   340  000003                     	ds	1
   341  000004                     DS1307_Read_H_24@horas:
   342                           	callstack 0
   343  000004                     DS1307_Read_Date@year:
   344                           	callstack 0
   345  000004                     fputc@fp:
   346                           	callstack 0
   347                           
   348                           ; 2 bytes @ 0x3
   349  000004                     	ds	1
   350  000005                     ___awdiv@counter:
   351                           	callstack 0
   352  000005                     ___awmod@counter:
   353                           	callstack 0
   354  000005                     ___wmul@product:
   355                           	callstack 0
   356  000005                     ___lldiv@divisor:
   357                           	callstack 0
   358                           
   359                           ; 4 bytes @ 0x4
   360  000005                     	ds	1
   361  000006                     ??_fputc:
   362  000006                     ___awdiv@sign:
   363                           	callstack 0
   364  000006                     ___awmod@sign:
   365                           	callstack 0
   366  000006                     DS1307_Read_H_24@minutos:
   367                           	callstack 0
   368  000006                     DS1307_Read_Date@mes:
   369                           	callstack 0
   370                           
   371                           ; 2 bytes @ 0x5
   372  000006                     	ds	1
   373  000007                     _isspace$1074:
   374                           	callstack 0
   375  000007                     ___awdiv@quotient:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0x6
   379  000007                     	ds	1
   380  000008                     ?_atoi:
   381                           	callstack 0
   382  000008                     DS1307_Read_H_24@segundos:
   383                           	callstack 0
   384  000008                     DS1307_Read_Date@dia_mes:
   385                           	callstack 0
   386  000008                     atoi@s:
   387                           	callstack 0
   388                           
   389                           ; 2 bytes @ 0x7
   390  000008                     	ds	1
   391  000009                     DS1307_Write_Hours_24@minutos:
   392                           	callstack 0
   393  000009                     DS1307_Write_Date@mes:
   394                           	callstack 0
   395  000009                     ___lldiv@quotient:
   396                           	callstack 0
   397  000009                     ___lodiv@divisor:
   398                           	callstack 0
   399  000009                     ___lomod@divisor:
   400                           	callstack 0
   401                           
   402                           ; 8 bytes @ 0x8
   403  000009                     	ds	1
   404  00000A                     ??_DS1307_Read_H_24:
   405  00000A                     ??_atoi:
   406  00000A                     DS1307_Write_Hours_24@segundos:
   407                           	callstack 0
   408  00000A                     DS1307_Write_Date@year:
   409                           	callstack 0
   410  00000A                     DS1307_Read_Date@dia_semana:
   411                           	callstack 0
   412                           
   413                           ; 2 bytes @ 0x9
   414  00000A                     	ds	1
   415  00000B                     ??_DS1307_Write_Hours_24:
   416  00000B                     DS1307_Write_Date@dia_semana:
   417                           	callstack 0
   418  00000B                     fputs@s:
   419                           	callstack 0
   420                           
   421                           ; 2 bytes @ 0xA
   422  00000B                     	ds	1
   423  00000C                     ??_DS1307_Write_Date:
   424  00000C                     ??_DS1307_Read_Date:
   425                           
   426                           ; 1 bytes @ 0xB
   427  00000C                     	ds	1
   428  00000D                     DS1307_Write_Hours_24@Seg_ds:
   429                           	callstack 0
   430  00000D                     ___lldiv@counter:
   431                           	callstack 0
   432  00000D                     fputs@fp:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0xC
   436  00000D                     	ds	1
   437  00000E                     DS1307_Write_Hours_24@Min_ds:
   438                           	callstack 0
   439  00000E                     DS1307_Write_Date@dia_mes:
   440                           	callstack 0
   441  00000E                     atoi@neg:
   442                           	callstack 0
   443  00000E                     Serial_begin@baudios:
   444                           	callstack 0
   445                           
   446                           ; 4 bytes @ 0xD
   447  00000E                     	ds	1
   448  00000F                     DS1307_Write_Hours_24@Hor_ds:
   449                           	callstack 0
   450  00000F                     fputs@c:
   451                           	callstack 0
   452                           
   453                           ; 1 bytes @ 0xE
   454  00000F                     	ds	1
   455  000010                     DS1307_Write_Hours_24@horas:
   456                           	callstack 0
   457  000010                     _atoi$1056:
   458                           	callstack 0
   459  000010                     fputs@i:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0xF
   463  000010                     	ds	1
   464  000011                     ___lomod@counter:
   465                           	callstack 0
   466  000011                     ___lodiv@quotient:
   467                           	callstack 0
   468                           
   469                           ; 8 bytes @ 0x10
   470  000011                     	ds	1
   471  000012                     ?_pad:
   472                           	callstack 0
   473  000012                     Serial_begin@n:
   474                           	callstack 0
   475  000012                     pad@fp:
   476                           	callstack 0
   477  000012                     _atoi$1058:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0x11
   481  000012                     	ds	2
   482  000014                     _atoi$1057:
   483                           	callstack 0
   484  000014                     pad@buf:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x13
   488  000014                     	ds	1
   489  000015                     atoi@n:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x14
   493  000015                     	ds	1
   494  000016                     pad@p:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x15
   498  000016                     	ds	2
   499  000018                     ??_pad:
   500                           
   501                           ; 1 bytes @ 0x17
   502  000018                     	ds	1
   503  000019                     ___lodiv@counter:
   504                           	callstack 0
   505  000019                     pad@i:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x18
   509  000019                     	ds	2
   510  00001B                     pad@w:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x1A
   514  00001B                     	ds	2
   515  00001D                     ?_utoa:
   516                           	callstack 0
   517  00001D                     utoa@fp:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x1C
   521  00001D                     	ds	2
   522  00001F                     utoa@d:
   523                           	callstack 0
   524                           
   525                           ; 8 bytes @ 0x1E
   526  00001F                     	ds	8
   527  000027                     ??_utoa:
   528                           
   529                           ; 1 bytes @ 0x26
   530  000027                     	ds	8
   531  00002F                     utoa@p:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x2E
   535  00002F                     	ds	2
   536  000031                     utoa@w:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x30
   540  000031                     	ds	2
   541  000033                     utoa@n:
   542                           	callstack 0
   543                           
   544                           ; 8 bytes @ 0x32
   545  000033                     	ds	8
   546  00003B                     utoa@i:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0x3A
   550  00003B                     	ds	2
   551  00003D                     ?_vfpfcnvrt:
   552                           	callstack 0
   553  00003D                     vfpfcnvrt@fp:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x3C
   557  00003D                     	ds	2
   558  00003F                     vfpfcnvrt@fmt:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x3E
   562  00003F                     	ds	2
   563  000041                     vfpfcnvrt@ap:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x40
   567  000041                     	ds	2
   568  000043                     ??_vfpfcnvrt:
   569                           
   570                           ; 1 bytes @ 0x42
   571  000043                     	ds	4
   572  000047                     vfpfcnvrt@llu:
   573                           	callstack 0
   574                           
   575                           ; 8 bytes @ 0x46
   576  000047                     	ds	8
   577  00004F                     vfpfcnvrt@done:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x4E
   581  00004F                     	ds	2
   582  000051                     _vfpfcnvrt$1038:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x50
   586  000051                     	ds	2
   587  000053                     ?_vfprintf:
   588                           	callstack 0
   589  000053                     vfprintf@fp:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x52
   593  000053                     	ds	2
   594  000055                     vfprintf@fmt:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x54
   598  000055                     	ds	2
   599  000057                     vfprintf@ap:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x56
   603  000057                     	ds	2
   604  000059                     vfprintf@cfmt:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x58
   608  000059                     	ds	2
   609  00005B                     printf@ap:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x5A
   613  00005B                     	ds	2
   614  00005D                     ??_main:
   615                           
   616                           ; 1 bytes @ 0x5C
   617  00005D                     	ds	2
   618                           
   619 ;;
   620 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   621 ;;
   622 ;; *************** function _main *****************
   623 ;; Defined at:
   624 ;;		line 36 in file "main.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;  argc            2   10[BANK0 ] int 
   627 ;;  argv            3   12[BANK0 ] PTR PTR unsigned char 
   628 ;; Auto vars:     Size  Location     Type
   629 ;;		None
   630 ;; Return value:  Size  Location     Type
   631 ;;                  2   10[BANK0 ] int 
   632 ;; Registers used:
   633 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   634 ;; Tracked objects:
   635 ;;		On entry : 0/0
   636 ;;		On exit  : 0/0
   637 ;;		Unchanged: 0/0
   638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   639 ;;      Params:         0       5       0       0       0       0       0       0       0
   640 ;;      Locals:         0       0       0       0       0       0       0       0       0
   641 ;;      Temps:          2       0       0       0       0       0       0       0       0
   642 ;;      Totals:         2       5       0       0       0       0       0       0       0
   643 ;;Total ram usage:        7 bytes
   644 ;; Hardware stack levels required when called: 8
   645 ;; This function calls:
   646 ;;		_ConfigClock
   647 ;;		_DS1307_Config
   648 ;;		_DS1307_Read_Date
   649 ;;		_DS1307_Read_H_24
   650 ;;		_DS1307_Write_Date
   651 ;;		_DS1307_Write_Hours_24
   652 ;;		_I2C_Init
   653 ;;		_Serial_begin
   654 ;;		_printf
   655 ;; This function is called by:
   656 ;;		Startup code after reset
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660                           	psect	text0
   661  00123C                     __ptext0:
   662                           	callstack 0
   663  00123C                     _main:
   664                           	callstack 23
   665  00123C                     
   666                           ;main.c: 38:     ConfigClock();
   667  00123C  EC20  F00E         	call	_ConfigClock	;wreg free
   668  001240                     
   669                           ;main.c: 39:     I2C_Init();
   670  001240  ECF4  F00D         	call	_I2C_Init	;wreg free
   671  001244                     
   672                           ;main.c: 40:     Serial_begin(9600);
   673  001244  0E80               	movlw	128
   674  001246  6E0E               	movwf	Serial_begin@baudios^0,c
   675  001248  0E25               	movlw	37
   676  00124A  6E0F               	movwf	(Serial_begin@baudios+1)^0,c
   677  00124C  0E00               	movlw	0
   678  00124E  6E10               	movwf	(Serial_begin@baudios+2)^0,c
   679  001250  0E00               	movlw	0
   680  001252  6E11               	movwf	(Serial_begin@baudios+3)^0,c
   681  001254  ECF3  F00C         	call	_Serial_begin	;wreg free
   682  001258                     
   683                           ;main.c: 41:     DS1307_Config();
   684  001258  EC1A  F00E         	call	_DS1307_Config	;wreg free
   685  00125C                     
   686                           ;main.c: 42:     DS1307_Write_Hours_24(18,30,0);
   687  00125C  0E1E               	movlw	30
   688  00125E  6E09               	movwf	DS1307_Write_Hours_24@minutos^0,c
   689  001260  0E00               	movlw	0
   690  001262  6E0A               	movwf	DS1307_Write_Hours_24@segundos^0,c
   691  001264  0E12               	movlw	18
   692  001266  EC31  F00B         	call	_DS1307_Write_Hours_24
   693  00126A                     
   694                           ;main.c: 43:     DS1307_Write_Date(4,9,22,7);
   695  00126A  0E09               	movlw	9
   696  00126C  6E09               	movwf	DS1307_Write_Date@mes^0,c
   697  00126E  0E16               	movlw	22
   698  001270  6E0A               	movwf	DS1307_Write_Date@year^0,c
   699  001272  0E07               	movlw	7
   700  001274  6E0B               	movwf	DS1307_Write_Date@dia_semana^0,c
   701  001276  0E04               	movlw	4
   702  001278  EC26  F008         	call	_DS1307_Write_Date
   703  00127C                     l2198:
   704                           
   705                           ;main.c: 48:         DS1307_Read_H_24(&HORA,&MINUTO,&SEGUNDO);
   706  00127C  0E94               	movlw	low _HORA
   707  00127E  6E04               	movwf	DS1307_Read_H_24@horas^0,c
   708  001280  0E00               	movlw	high _HORA
   709  001282  6E05               	movwf	(DS1307_Read_H_24@horas+1)^0,c
   710  001284  0E93               	movlw	low _MINUTO
   711  001286  6E06               	movwf	DS1307_Read_H_24@minutos^0,c
   712  001288  0E00               	movlw	high _MINUTO
   713  00128A  6E07               	movwf	(DS1307_Read_H_24@minutos+1)^0,c
   714  00128C  0E92               	movlw	low _SEGUNDO
   715  00128E  6E08               	movwf	DS1307_Read_H_24@segundos^0,c
   716  001290  0E00               	movlw	high _SEGUNDO
   717  001292  6E09               	movwf	(DS1307_Read_H_24@segundos+1)^0,c
   718  001294  EC91  F009         	call	_DS1307_Read_H_24	;wreg free
   719  001298                     
   720                           ;main.c: 49:         DS1307_Read_Date(&YEAR,&MES,&DIA_MES,&DIA_SEMANA);
   721  001298  0E91               	movlw	low _YEAR
   722  00129A  6E04               	movwf	DS1307_Read_Date@year^0,c
   723  00129C  0E00               	movlw	high _YEAR
   724  00129E  6E05               	movwf	(DS1307_Read_Date@year+1)^0,c
   725  0012A0  0E90               	movlw	low _MES
   726  0012A2  6E06               	movwf	DS1307_Read_Date@mes^0,c
   727  0012A4  0E00               	movlw	high _MES
   728  0012A6  6E07               	movwf	(DS1307_Read_Date@mes+1)^0,c
   729  0012A8  0E8F               	movlw	low _DIA_MES
   730  0012AA  6E08               	movwf	DS1307_Read_Date@dia_mes^0,c
   731  0012AC  0E00               	movlw	high _DIA_MES
   732  0012AE  6E09               	movwf	(DS1307_Read_Date@dia_mes+1)^0,c
   733  0012B0  0E8E               	movlw	low _DIA_SEMANA
   734  0012B2  6E0A               	movwf	DS1307_Read_Date@dia_semana^0,c
   735  0012B4  0E00               	movlw	high _DIA_SEMANA
   736  0012B6  6E0B               	movwf	(DS1307_Read_Date@dia_semana+1)^0,c
   737  0012B8  EC92  F007         	call	_DS1307_Read_Date	;wreg free
   738  0012BC                     
   739                           ;main.c: 51:         printf("H:%02u M:%02u S:%02u \n\r",HORA,MINUTO,SEGUNDO);
   740  0012BC  0E24               	movlw	low STR_1
   741  0012BE  0100               	movlb	0	; () banked
   742  0012C0  6F95               	movwf	printf@fmt& (0+255),b
   743  0012C2  0E08               	movlw	high STR_1
   744  0012C4  6F96               	movwf	(printf@fmt+1)& (0+255),b
   745  0012C6  C094  F097         	movff	_HORA,?_printf+2
   746  0012CA  6B98               	clrf	(?_printf+3)& (0+255),b
   747  0012CC  C093  F099         	movff	_MINUTO,?_printf+4
   748  0012D0  6B9A               	clrf	(?_printf+5)& (0+255),b
   749  0012D2  C092  F09B         	movff	_SEGUNDO,?_printf+6
   750  0012D6  6B9C               	clrf	(?_printf+7)& (0+255),b
   751  0012D8  ECA5  F00D         	call	_printf	;wreg free
   752  0012DC                     
   753                           ;main.c: 52:         printf("A:%02u M:%02u D_M:%02u D_S:%02u \n\r",YEAR,MES,DIA_MES,DIA_
      +                          SEMANA);
   754  0012DC  0E01               	movlw	low STR_2
   755  0012DE  0100               	movlb	0	; () banked
   756  0012E0  6F95               	movwf	printf@fmt& (0+255),b
   757  0012E2  0E08               	movlw	high STR_2
   758  0012E4  6F96               	movwf	(printf@fmt+1)& (0+255),b
   759  0012E6  C091  F097         	movff	_YEAR,?_printf+2
   760  0012EA  6B98               	clrf	(?_printf+3)& (0+255),b
   761  0012EC  C090  F099         	movff	_MES,?_printf+4
   762  0012F0  6B9A               	clrf	(?_printf+5)& (0+255),b
   763  0012F2  C08F  F09B         	movff	_DIA_MES,?_printf+6
   764  0012F6  6B9C               	clrf	(?_printf+7)& (0+255),b
   765  0012F8  C08E  F09D         	movff	_DIA_SEMANA,?_printf+8
   766  0012FC  6B9E               	clrf	(?_printf+9)& (0+255),b
   767  0012FE  ECA5  F00D         	call	_printf	;wreg free
   768  001302                     
   769                           ;main.c: 53:         _delay((unsigned long)((200)*(8000000UL/4000.0)));
   770  001302  0E03               	movlw	3
   771  001304  6E5E               	movwf	(??_main+1)^0,c
   772  001306  0E08               	movlw	8
   773  001308  6E5D               	movwf	??_main^0,c
   774  00130A  0E77               	movlw	119
   775  00130C                     u1557:
   776  00130C  2EE8               	decfsz	wreg,f,c
   777  00130E  D7FE               	bra	u1557
   778  001310  2E5D               	decfsz	??_main^0,f,c
   779  001312  D7FC               	bra	u1557
   780  001314  2E5E               	decfsz	(??_main+1)^0,f,c
   781  001316  D7FA               	bra	u1557
   782  001318  F000               	nop	
   783                           
   784                           ;main.c: 56:     }
   785  00131A  EF3E  F009         	goto	l2198
   786  00131E  EF00  F000         	goto	start
   787  001322                     __end_of_main:
   788                           	callstack 0
   789                           
   790 ;; *************** function _printf *****************
   791 ;; Defined at:
   792 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
   793 ;; Parameters:    Size  Location     Type
   794 ;;  fmt             2    0[BANK0 ] PTR const unsigned char 
   795 ;;		 -> STR_2(35), STR_1(24), 
   796 ;; Auto vars:     Size  Location     Type
   797 ;;  ap              2   90[COMRAM] PTR void [1]
   798 ;;		 -> ?_printf(2), 
   799 ;;  ret             2    0        int 
   800 ;; Return value:  Size  Location     Type
   801 ;;                  2    0[BANK0 ] int 
   802 ;; Registers used:
   803 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   804 ;; Tracked objects:
   805 ;;		On entry : 0/0
   806 ;;		On exit  : 0/0
   807 ;;		Unchanged: 0/0
   808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   809 ;;      Params:         0      10       0       0       0       0       0       0       0
   810 ;;      Locals:         2       0       0       0       0       0       0       0       0
   811 ;;      Temps:          0       0       0       0       0       0       0       0       0
   812 ;;      Totals:         2      10       0       0       0       0       0       0       0
   813 ;;Total ram usage:       12 bytes
   814 ;; Hardware stack levels used: 1
   815 ;; Hardware stack levels required when called: 7
   816 ;; This function calls:
   817 ;;		_vfprintf
   818 ;; This function is called by:
   819 ;;		_main
   820 ;; This function uses a non-reentrant model
   821 ;;
   822                           
   823                           	psect	text1
   824  001B4A                     __ptext1:
   825                           	callstack 0
   826  001B4A                     _printf:
   827                           	callstack 23
   828  001B4A  0E97               	movlw	low (?_printf+2)
   829  001B4C  6E5B               	movwf	printf@ap^0,c
   830  001B4E  0E00               	movlw	high (?_printf+2)
   831  001B50  6E5C               	movwf	(printf@ap+1)^0,c
   832  001B52  0E00               	movlw	0
   833  001B54  6E53               	movwf	vfprintf@fp^0,c
   834  001B56  0E00               	movlw	0
   835  001B58  6E54               	movwf	(vfprintf@fp+1)^0,c
   836  001B5A  C095  F055         	movff	printf@fmt,vfprintf@fmt
   837  001B5E  C096  F056         	movff	printf@fmt+1,vfprintf@fmt+1
   838  001B62  0E5B               	movlw	low printf@ap
   839  001B64  6E57               	movwf	vfprintf@ap^0,c
   840  001B66  0E00               	movlw	high printf@ap
   841  001B68  6E58               	movwf	(vfprintf@ap+1)^0,c
   842  001B6A  ECC2  F00C         	call	_vfprintf	;wreg free
   843  001B6E  0012               	return		;funcret
   844  001B70                     __end_of_printf:
   845                           	callstack 0
   846                           
   847 ;; *************** function _vfprintf *****************
   848 ;; Defined at:
   849 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;  fp              2   82[COMRAM] PTR struct _IO_FILE
   852 ;;		 -> NULL(0), 
   853 ;;  fmt             2   84[COMRAM] PTR const unsigned char 
   854 ;;		 -> STR_2(35), STR_1(24), 
   855 ;;  ap              2   86[COMRAM] PTR PTR void 
   856 ;;		 -> printf@ap(2), 
   857 ;; Auto vars:     Size  Location     Type
   858 ;;  cfmt            2   88[COMRAM] PTR unsigned char 
   859 ;;		 -> STR_2(35), STR_1(24), 
   860 ;; Return value:  Size  Location     Type
   861 ;;                  2   82[COMRAM] int 
   862 ;; Registers used:
   863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   864 ;; Tracked objects:
   865 ;;		On entry : 0/0
   866 ;;		On exit  : 0/0
   867 ;;		Unchanged: 0/0
   868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   869 ;;      Params:         6       0       0       0       0       0       0       0       0
   870 ;;      Locals:         2       0       0       0       0       0       0       0       0
   871 ;;      Temps:          0       0       0       0       0       0       0       0       0
   872 ;;      Totals:         8       0       0       0       0       0       0       0       0
   873 ;;Total ram usage:        8 bytes
   874 ;; Hardware stack levels used: 1
   875 ;; Hardware stack levels required when called: 6
   876 ;; This function calls:
   877 ;;		_vfpfcnvrt
   878 ;; This function is called by:
   879 ;;		_printf
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883                           	psect	text2
   884  001984                     __ptext2:
   885                           	callstack 0
   886  001984                     _vfprintf:
   887                           	callstack 23
   888  001984                     
   889                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
   890  001984  C055  F059         	movff	vfprintf@fmt,vfprintf@cfmt
   891  001988  C056  F05A         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   892  00198C                     
   893                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
   894  00198C  0E00               	movlw	0
   895  00198E  0100               	movlb	0	; () banked
   896  001990  6F61               	movwf	(_nout+1)& (0+255),b
   897  001992  0E00               	movlw	0
   898  001994  6F60               	movwf	_nout& (0+255),b
   899                           
   900                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   901  001996  EFE0  F00C         	goto	l2066
   902  00199A                     l2064:
   903                           
   904                           ; BSR set to: 0
   905                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
   906  00199A  C053  F03D         	movff	vfprintf@fp,vfpfcnvrt@fp
   907  00199E  C054  F03E         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   908  0019A2  0E59               	movlw	low vfprintf@cfmt
   909  0019A4  6E3F               	movwf	vfpfcnvrt@fmt^0,c
   910  0019A6  0E00               	movlw	high vfprintf@cfmt
   911  0019A8  6E40               	movwf	(vfpfcnvrt@fmt+1)^0,c
   912  0019AA  C057  F041         	movff	vfprintf@ap,vfpfcnvrt@ap
   913  0019AE  C058  F042         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   914  0019B2  EC1F  F004         	call	_vfpfcnvrt	;wreg free
   915  0019B6  503D               	movf	?_vfpfcnvrt^0,w,c
   916  0019B8  0100               	movlb	0	; () banked
   917  0019BA  2760               	addwf	_nout& (0+255),f,b
   918  0019BC  503E               	movf	(?_vfpfcnvrt+1)^0,w,c
   919  0019BE  2361               	addwfc	(_nout+1)& (0+255),f,b
   920  0019C0                     l2066:
   921                           
   922                           ; BSR set to: 0
   923                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   924  0019C0  C059  FFF6         	movff	vfprintf@cfmt,tblptrl
   925  0019C4  C05A  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   926  0019C8                     	if	0	;tblptru may be non-zero
   927  0019C8                     	endif
   928  0019C8                     	if	0	;tblptru may be non-zero
   929  0019C8                     	endif
   930  0019C8  0008               	tblrd		*
   931  0019CA  50F5               	movf	tablat,w,c
   932  0019CC  0900               	iorlw	0
   933  0019CE  A4D8               	btfss	status,2,c
   934  0019D0  EFEC  F00C         	goto	u1531
   935  0019D4  EFEE  F00C         	goto	u1530
   936  0019D8                     u1531:
   937  0019D8  EFCD  F00C         	goto	l2064
   938  0019DC                     u1530:
   939  0019DC                     
   940                           ; BSR set to: 0
   941                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
   942  0019DC  C060  F053         	movff	_nout,?_vfprintf
   943  0019E0  C061  F054         	movff	_nout+1,?_vfprintf+1
   944  0019E4                     
   945                           ; BSR set to: 0
   946  0019E4  0012               	return		;funcret
   947  0019E6                     __end_of_vfprintf:
   948                           	callstack 0
   949                           
   950 ;; *************** function _vfpfcnvrt *****************
   951 ;; Defined at:
   952 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;  fp              2   60[COMRAM] PTR struct _IO_FILE
   955 ;;		 -> NULL(0), 
   956 ;;  fmt             2   62[COMRAM] PTR PTR unsigned char 
   957 ;;		 -> vfprintf@cfmt(2), 
   958 ;;  ap              2   64[COMRAM] PTR PTR void 
   959 ;;		 -> printf@ap(2), 
   960 ;; Auto vars:     Size  Location     Type
   961 ;;  llu             8   70[COMRAM] unsigned long long 
   962 ;;  ll              8    0        long long 
   963 ;;  f               4    0        long long 
   964 ;;  vp              3    0        PTR void 
   965 ;;  ct              3    0        unsigned char [3]
   966 ;;  cp              3    0        PTR unsigned char 
   967 ;;  done            2   78[COMRAM] int 
   968 ;;  i               2    0        int 
   969 ;;  c               1    0        unsigned char 
   970 ;; Return value:  Size  Location     Type
   971 ;;                  2   60[COMRAM] int 
   972 ;; Registers used:
   973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   974 ;; Tracked objects:
   975 ;;		On entry : 0/0
   976 ;;		On exit  : 0/0
   977 ;;		Unchanged: 0/0
   978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   979 ;;      Params:         6       0       0       0       0       0       0       0       0
   980 ;;      Locals:        12       0       0       0       0       0       0       0       0
   981 ;;      Temps:          4       0       0       0       0       0       0       0       0
   982 ;;      Totals:        22       0       0       0       0       0       0       0       0
   983 ;;Total ram usage:       22 bytes
   984 ;; Hardware stack levels used: 1
   985 ;; Hardware stack levels required when called: 5
   986 ;; This function calls:
   987 ;;		_atoi
   988 ;;		_fputc
   989 ;;		_isdigit
   990 ;;		_utoa
   991 ;; This function is called by:
   992 ;;		_vfprintf
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           	psect	text3
   997  00083E                     __ptext3:
   998                           	callstack 0
   999  00083E                     _vfpfcnvrt:
  1000                           	callstack 23
  1001  00083E                     
  1002                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1003  00083E  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1004  000842  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1005  000846  CFDE FFF6          	movff	postinc2,tblptrl
  1006  00084A  CFDD FFF7          	movff	postdec2,tblptrh
  1007  00084E                     	if	0	;tblptru may be non-zero
  1008  00084E                     	endif
  1009  00084E                     	if	0	;tblptru may be non-zero
  1010  00084E                     	endif
  1011  00084E  0008               	tblrd		*
  1012  000850  50F5               	movf	tablat,w,c
  1013  000852  0A25               	xorlw	37
  1014  000854  A4D8               	btfss	status,2,c
  1015  000856  EF2F  F004         	goto	u1171
  1016  00085A  EF31  F004         	goto	u1170
  1017  00085E                     u1171:
  1018  00085E  EFAD  F005         	goto	l1914
  1019  000862                     u1170:
  1020  000862                     
  1021                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1022  000862  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1023  000866  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1024  00086A  2ADE               	incf	postinc2,f,c
  1025  00086C  0E00               	movlw	0
  1026  00086E  22DD               	addwfc	postdec2,f,c
  1027  000870                     
  1028                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1029  000870  0E00               	movlw	0
  1030  000872  0100               	movlb	0	; () banked
  1031  000874  6F63               	movwf	(_width+1)& (0+255),b
  1032  000876  0E00               	movlw	0
  1033  000878  6F62               	movwf	_width& (0+255),b
  1034  00087A  C062  F066         	movff	_width,_flags
  1035  00087E  C063  F067         	movff	_width+1,_flags+1
  1036  000882                     
  1037                           ; BSR set to: 0
  1038                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1039  000882  6964               	setf	_prec& (0+255),b
  1040  000884  6965               	setf	(_prec+1)& (0+255),b
  1041  000886                     
  1042                           ; BSR set to: 0
  1043                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  1044  000886  0E00               	movlw	0
  1045  000888  6E50               	movwf	(vfpfcnvrt@done+1)^0,c
  1046  00088A  0E00               	movlw	0
  1047  00088C  6E4F               	movwf	vfpfcnvrt@done^0,c
  1048                           
  1049                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1050  00088E  EF94  F004         	goto	l1868
  1051  000892                     l1842:
  1052                           
  1053                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  1054  000892  0100               	movlb	0	; () banked
  1055  000894  8166               	bsf	_flags& (0+255),0,b
  1056  000896                     l1844:
  1057                           
  1058                           ; BSR set to: 0
  1059                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  1060  000896  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1061  00089A  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1062  00089E  2ADE               	incf	postinc2,f,c
  1063  0008A0  0E00               	movlw	0
  1064  0008A2  22DD               	addwfc	postdec2,f,c
  1065                           
  1066                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  1067  0008A4  EF94  F004         	goto	l1868
  1068  0008A8                     l1846:
  1069                           
  1070                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  1071  0008A8  0100               	movlb	0	; () banked
  1072  0008AA  8366               	bsf	_flags& (0+255),1,b
  1073  0008AC  EF4B  F004         	goto	l1844
  1074  0008B0                     l1850:
  1075                           
  1076                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  1077  0008B0  0100               	movlb	0	; () banked
  1078  0008B2  8566               	bsf	_flags& (0+255),2,b
  1079  0008B4  EF4B  F004         	goto	l1844
  1080  0008B8                     l1854:
  1081                           
  1082                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  1083  0008B8  0100               	movlb	0	; () banked
  1084  0008BA  8766               	bsf	_flags& (0+255),3,b
  1085  0008BC  EF4B  F004         	goto	l1844
  1086  0008C0                     l1858:
  1087                           
  1088                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  1089  0008C0  0100               	movlb	0	; () banked
  1090  0008C2  8966               	bsf	_flags& (0+255),4,b
  1091  0008C4  EF4B  F004         	goto	l1844
  1092  0008C8                     l1862:
  1093                           
  1094                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  1095  0008C8  0E00               	movlw	0
  1096  0008CA  6E50               	movwf	(vfpfcnvrt@done+1)^0,c
  1097  0008CC  0E01               	movlw	1
  1098  0008CE  6E4F               	movwf	vfpfcnvrt@done^0,c
  1099                           
  1100                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  1101  0008D0  EF94  F004         	goto	l1868
  1102  0008D4                     l1866:
  1103  0008D4  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1104  0008D8  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1105  0008DC  CFDE FFF6          	movff	postinc2,tblptrl
  1106  0008E0  CFDD FFF7          	movff	postdec2,tblptrh
  1107  0008E4                     	if	0	;tblptru may be non-zero
  1108  0008E4                     	endif
  1109  0008E4                     	if	0	;tblptru may be non-zero
  1110  0008E4                     	endif
  1111  0008E4  0008               	tblrd		*
  1112  0008E6  50F5               	movf	tablat,w,c
  1113  0008E8  6E43               	movwf	??_vfpfcnvrt^0,c
  1114  0008EA  6A44               	clrf	(??_vfpfcnvrt+1)^0,c
  1115                           
  1116                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1117                           ; Switch size 1, requested type "simple"
  1118                           ; Number of cases is 1, Range of values is 0 to 0
  1119                           ; switch strategies available:
  1120                           ; Name         Instructions Cycles
  1121                           ; simple_byte            4     3 (average)
  1122                           ;	Chosen strategy is simple_byte
  1123  0008EC  5044               	movf	(??_vfpfcnvrt+1)^0,w,c
  1124  0008EE  0A00               	xorlw	0	; case 0
  1125  0008F0  B4D8               	btfsc	status,2,c
  1126  0008F2  EF7D  F004         	goto	l2258
  1127  0008F6  EF64  F004         	goto	l1862
  1128  0008FA                     l2258:
  1129                           
  1130                           ; Switch size 1, requested type "simple"
  1131                           ; Number of cases is 5, Range of values is 32 to 48
  1132                           ; switch strategies available:
  1133                           ; Name         Instructions Cycles
  1134                           ; simple_byte           16     9 (average)
  1135                           ;	Chosen strategy is simple_byte
  1136  0008FA  5043               	movf	??_vfpfcnvrt^0,w,c
  1137  0008FC  0A20               	xorlw	32	; case 32
  1138  0008FE  B4D8               	btfsc	status,2,c
  1139  000900  EF5C  F004         	goto	l1854
  1140  000904  0A03               	xorlw	3	; case 35
  1141  000906  B4D8               	btfsc	status,2,c
  1142  000908  EF60  F004         	goto	l1858
  1143  00090C  0A08               	xorlw	8	; case 43
  1144  00090E  B4D8               	btfsc	status,2,c
  1145  000910  EF58  F004         	goto	l1850
  1146  000914  0A06               	xorlw	6	; case 45
  1147  000916  B4D8               	btfsc	status,2,c
  1148  000918  EF49  F004         	goto	l1842
  1149  00091C  0A1D               	xorlw	29	; case 48
  1150  00091E  B4D8               	btfsc	status,2,c
  1151  000920  EF54  F004         	goto	l1846
  1152  000924  EF64  F004         	goto	l1862
  1153  000928                     l1868:
  1154                           
  1155                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1156  000928  504F               	movf	vfpfcnvrt@done^0,w,c
  1157  00092A  1050               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  1158  00092C  B4D8               	btfsc	status,2,c
  1159  00092E  EF9B  F004         	goto	u1181
  1160  000932  EF9D  F004         	goto	u1180
  1161  000936                     u1181:
  1162  000936  EF6A  F004         	goto	l1866
  1163  00093A                     u1180:
  1164  00093A                     
  1165                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  1166  00093A  0100               	movlb	0	; () banked
  1167  00093C  A166               	btfss	_flags& (0+255),0,b
  1168  00093E  EFA3  F004         	goto	u1191
  1169  000942  EFA5  F004         	goto	u1190
  1170  000946                     u1191:
  1171  000946  EFA6  F004         	goto	l1872
  1172  00094A                     u1190:
  1173  00094A                     
  1174                           ; BSR set to: 0
  1175                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  1176  00094A  9366               	bcf	_flags& (0+255),1,b
  1177  00094C                     l1872:
  1178                           
  1179                           ; BSR set to: 0
  1180                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  1181  00094C  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1182  000950  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1183  000954  CFDE FFF6          	movff	postinc2,tblptrl
  1184  000958  CFDD FFF7          	movff	postdec2,tblptrh
  1185  00095C                     	if	0	;tblptru may be non-zero
  1186  00095C                     	endif
  1187  00095C                     	if	0	;tblptru may be non-zero
  1188  00095C                     	endif
  1189  00095C  0008               	tblrd		*
  1190  00095E  50F5               	movf	tablat,w,c
  1191  000960  0A2A               	xorlw	42
  1192  000962  A4D8               	btfss	status,2,c
  1193  000964  EFB6  F004         	goto	u1201
  1194  000968  EFB8  F004         	goto	u1200
  1195  00096C                     u1201:
  1196  00096C  EFE1  F004         	goto	l1880
  1197  000970                     u1200:
  1198  000970                     
  1199                           ; BSR set to: 0
  1200                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  1201  000970  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1202  000974  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1203  000978  2ADE               	incf	postinc2,f,c
  1204  00097A  0E00               	movlw	0
  1205  00097C  22DD               	addwfc	postdec2,f,c
  1206                           
  1207                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1208  00097E  C041  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1209  000982  C042  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1210  000986  CFDF F043          	movff	indf2,??_vfpfcnvrt
  1211  00098A  0E02               	movlw	2
  1212  00098C  26DE               	addwf	postinc2,f,c
  1213  00098E  CFDF F044          	movff	indf2,??_vfpfcnvrt+1
  1214  000992  0E00               	movlw	0
  1215  000994  22DD               	addwfc	postdec2,f,c
  1216  000996  C043  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1217  00099A  C044  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1218  00099E  CFDE F062          	movff	postinc2,_width
  1219  0009A2  CFDD F063          	movff	postdec2,_width+1
  1220  0009A6                     
  1221                           ; BSR set to: 0
  1222                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  1223  0009A6  BF63               	btfsc	(_width+1)& (0+255),7,b
  1224  0009A8  EFDA  F004         	goto	u1210
  1225  0009AC  EFD8  F004         	goto	u1211
  1226  0009B0                     u1211:
  1227  0009B0  EF24  F005         	goto	l1890
  1228  0009B4                     u1210:
  1229  0009B4                     
  1230                           ; BSR set to: 0
  1231                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  1232  0009B4  8166               	bsf	_flags& (0+255),0,b
  1233                           
  1234                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  1235  0009B6  6D62               	negf	_width& (0+255),b
  1236  0009B8  1F63               	comf	(_width+1)& (0+255),f,b
  1237  0009BA  B0D8               	btfsc	status,0,c
  1238  0009BC  2B63               	incf	(_width+1)& (0+255),f,b
  1239  0009BE  EF24  F005         	goto	l1890
  1240  0009C2                     l1880:
  1241                           
  1242                           ; BSR set to: 0
  1243                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  1244  0009C2  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1245  0009C6  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1246  0009CA  CFDE F008          	movff	postinc2,atoi@s
  1247  0009CE  CFDD F009          	movff	postdec2,atoi@s+1
  1248  0009D2  ECCA  F006         	call	_atoi	;wreg free
  1249  0009D6  C008  F062         	movff	?_atoi,_width
  1250  0009DA  C009  F063         	movff	?_atoi+1,_width+1
  1251                           
  1252                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1253  0009DE  EFF8  F004         	goto	l1884
  1254  0009E2                     l1882:
  1255                           
  1256                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  1257  0009E2  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1258  0009E6  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1259  0009EA  2ADE               	incf	postinc2,f,c
  1260  0009EC  0E00               	movlw	0
  1261  0009EE  22DD               	addwfc	postdec2,f,c
  1262  0009F0                     l1884:
  1263  0009F0  0ED0               	movlw	208
  1264  0009F2  6E43               	movwf	??_vfpfcnvrt^0,c
  1265  0009F4  0EFF               	movlw	255
  1266  0009F6  6E44               	movwf	(??_vfpfcnvrt+1)^0,c
  1267  0009F8  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1268  0009FC  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1269  000A00  CFDE FFF6          	movff	postinc2,tblptrl
  1270  000A04  CFDD FFF7          	movff	postdec2,tblptrh
  1271  000A08                     	if	0	;tblptru may be non-zero
  1272  000A08                     	endif
  1273  000A08                     	if	0	;tblptru may be non-zero
  1274  000A08                     	endif
  1275  000A08  0008               	tblrd		*
  1276  000A0A  50F5               	movf	tablat,w,c
  1277  000A0C  6E45               	movwf	(??_vfpfcnvrt+2)^0,c
  1278  000A0E  6A46               	clrf	(??_vfpfcnvrt+3)^0,c
  1279  000A10  5043               	movf	??_vfpfcnvrt^0,w,c
  1280  000A12  2645               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1281  000A14  5044               	movf	(??_vfpfcnvrt+1)^0,w,c
  1282  000A16  2246               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1283  000A18  5046               	movf	(??_vfpfcnvrt+3)^0,w,c
  1284  000A1A  E10A               	bnz	u1220
  1285  000A1C  0E0A               	movlw	10
  1286  000A1E  5C45               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1287  000A20  A0D8               	btfss	status,0,c
  1288  000A22  EF15  F005         	goto	u1221
  1289  000A26  EF18  F005         	goto	u1220
  1290  000A2A                     u1221:
  1291  000A2A  0E01               	movlw	1
  1292  000A2C  EF19  F005         	goto	u1230
  1293  000A30                     u1220:
  1294  000A30  0E00               	movlw	0
  1295  000A32                     u1230:
  1296  000A32  6E51               	movwf	_vfpfcnvrt$1038^0,c
  1297  000A34  6A52               	clrf	(_vfpfcnvrt$1038+1)^0,c
  1298  000A36  5051               	movf	_vfpfcnvrt$1038^0,w,c
  1299  000A38  1052               	iorwf	(_vfpfcnvrt$1038+1)^0,w,c
  1300  000A3A  A4D8               	btfss	status,2,c
  1301  000A3C  EF22  F005         	goto	u1241
  1302  000A40  EF24  F005         	goto	u1240
  1303  000A44                     u1241:
  1304  000A44  EFF1  F004         	goto	l1882
  1305  000A48                     u1240:
  1306  000A48                     l1890:
  1307                           
  1308                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  1309  000A48  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1310  000A4C  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1311  000A50  CFDE FFF6          	movff	postinc2,tblptrl
  1312  000A54  CFDD FFF7          	movff	postdec2,tblptrh
  1313  000A58                     	if	0	;tblptru may be non-zero
  1314  000A58                     	endif
  1315  000A58                     	if	0	;tblptru may be non-zero
  1316  000A58                     	endif
  1317  000A58  0008               	tblrd		*
  1318  000A5A  50F5               	movf	tablat,w,c
  1319  000A5C  0A75               	xorlw	117
  1320  000A5E  A4D8               	btfss	status,2,c
  1321  000A60  EF34  F005         	goto	u1251
  1322  000A64  EF36  F005         	goto	u1250
  1323  000A68                     u1251:
  1324  000A68  EF77  F005         	goto	l1898
  1325  000A6C                     u1250:
  1326  000A6C                     
  1327                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  1328  000A6C  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1329  000A70  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1330  000A74  2ADE               	incf	postinc2,f,c
  1331  000A76  0E00               	movlw	0
  1332  000A78  22DD               	addwfc	postdec2,f,c
  1333                           
  1334                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  1335  000A7A  C041  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1336  000A7E  C042  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1337  000A82  CFDF F043          	movff	indf2,??_vfpfcnvrt
  1338  000A86  0E02               	movlw	2
  1339  000A88  26DE               	addwf	postinc2,f,c
  1340  000A8A  CFDF F044          	movff	indf2,??_vfpfcnvrt+1
  1341  000A8E  0E00               	movlw	0
  1342  000A90  22DD               	addwfc	postdec2,f,c
  1343  000A92  C043  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1344  000A96  C044  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1345  000A9A  CFDE F045          	movff	postinc2,??_vfpfcnvrt+2
  1346  000A9E  CFDD F046          	movff	postdec2,??_vfpfcnvrt+3
  1347  000AA2  C045  F047         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  1348  000AA6  C046  F048         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  1349  000AAA  6A49               	clrf	(vfpfcnvrt@llu+2)^0,c
  1350  000AAC  6A4A               	clrf	(vfpfcnvrt@llu+3)^0,c
  1351  000AAE  6A4B               	clrf	(vfpfcnvrt@llu+4)^0,c
  1352  000AB0  6A4C               	clrf	(vfpfcnvrt@llu+5)^0,c
  1353  000AB2  6A4D               	clrf	(vfpfcnvrt@llu+6)^0,c
  1354  000AB4  6A4E               	clrf	(vfpfcnvrt@llu+7)^0,c
  1355  000AB6                     
  1356                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  1357  000AB6  C03D  F01D         	movff	vfpfcnvrt@fp,utoa@fp
  1358  000ABA  C03E  F01E         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  1359  000ABE  C047  F01F         	movff	vfpfcnvrt@llu,utoa@d
  1360  000AC2  C048  F020         	movff	vfpfcnvrt@llu+1,utoa@d+1
  1361  000AC6  C049  F021         	movff	vfpfcnvrt@llu+2,utoa@d+2
  1362  000ACA  C04A  F022         	movff	vfpfcnvrt@llu+3,utoa@d+3
  1363  000ACE  C04B  F023         	movff	vfpfcnvrt@llu+4,utoa@d+4
  1364  000AD2  C04C  F024         	movff	vfpfcnvrt@llu+5,utoa@d+5
  1365  000AD6  C04D  F025         	movff	vfpfcnvrt@llu+6,utoa@d+6
  1366  000ADA  C04E  F026         	movff	vfpfcnvrt@llu+7,utoa@d+7
  1367  000ADE  ECC9  F005         	call	_utoa	;wreg free
  1368  000AE2  C01D  F03D         	movff	?_utoa,?_vfpfcnvrt
  1369  000AE6  C01E  F03E         	movff	?_utoa+1,?_vfpfcnvrt+1
  1370  000AEA  EFC8  F005         	goto	l956
  1371  000AEE                     l1898:
  1372                           
  1373                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1374  000AEE  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1375  000AF2  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1376  000AF6  CFDE FFF6          	movff	postinc2,tblptrl
  1377  000AFA  CFDD FFF7          	movff	postdec2,tblptrh
  1378  000AFE                     	if	0	;tblptru may be non-zero
  1379  000AFE                     	endif
  1380  000AFE                     	if	0	;tblptru may be non-zero
  1381  000AFE                     	endif
  1382  000AFE  0008               	tblrd		*
  1383  000B00  50F5               	movf	tablat,w,c
  1384  000B02  0A25               	xorlw	37
  1385  000B04  A4D8               	btfss	status,2,c
  1386  000B06  EF87  F005         	goto	u1261
  1387  000B0A  EF89  F005         	goto	u1260
  1388  000B0E                     u1261:
  1389  000B0E  EFA0  F005         	goto	l1908
  1390  000B12                     u1260:
  1391  000B12                     
  1392                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1393  000B12  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1394  000B16  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1395  000B1A  2ADE               	incf	postinc2,f,c
  1396  000B1C  0E00               	movlw	0
  1397  000B1E  22DD               	addwfc	postdec2,f,c
  1398  000B20                     
  1399                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1400  000B20  0E00               	movlw	0
  1401  000B22  6E03               	movwf	(fputc@c+1)^0,c
  1402  000B24  0E25               	movlw	37
  1403  000B26  6E02               	movwf	fputc@c^0,c
  1404  000B28  C03D  F004         	movff	vfpfcnvrt@fp,fputc@fp
  1405  000B2C  C03E  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1406  000B30  EC39  F00C         	call	_fputc	;wreg free
  1407  000B34                     l1904:
  1408                           
  1409                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1410  000B34  0E00               	movlw	0
  1411  000B36  6E3E               	movwf	(?_vfpfcnvrt+1)^0,c
  1412  000B38  0E01               	movlw	1
  1413  000B3A  6E3D               	movwf	?_vfpfcnvrt^0,c
  1414  000B3C  EFC8  F005         	goto	l956
  1415  000B40                     l1908:
  1416                           
  1417                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1418  000B40  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1419  000B44  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1420  000B48  2ADE               	incf	postinc2,f,c
  1421  000B4A  0E00               	movlw	0
  1422  000B4C  22DD               	addwfc	postdec2,f,c
  1423  000B4E                     
  1424                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1425  000B4E  0E00               	movlw	0
  1426  000B50  6E3E               	movwf	(?_vfpfcnvrt+1)^0,c
  1427  000B52  0E00               	movlw	0
  1428  000B54  6E3D               	movwf	?_vfpfcnvrt^0,c
  1429  000B56  EFC8  F005         	goto	l956
  1430  000B5A                     l1914:
  1431                           
  1432                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1433  000B5A  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1434  000B5E  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1435  000B62  CFDE FFF6          	movff	postinc2,tblptrl
  1436  000B66  CFDD FFF7          	movff	postdec2,tblptrh
  1437  000B6A                     	if	0	;tblptru may be non-zero
  1438  000B6A                     	endif
  1439  000B6A                     	if	0	;tblptru may be non-zero
  1440  000B6A                     	endif
  1441  000B6A  0008               	tblrd		*
  1442  000B6C  50F5               	movf	tablat,w,c
  1443  000B6E  6E02               	movwf	fputc@c^0,c
  1444  000B70  6A03               	clrf	(fputc@c+1)^0,c
  1445  000B72  C03D  F004         	movff	vfpfcnvrt@fp,fputc@fp
  1446  000B76  C03E  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1447  000B7A  EC39  F00C         	call	_fputc	;wreg free
  1448  000B7E                     
  1449                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1450  000B7E  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1451  000B82  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1452  000B86  2ADE               	incf	postinc2,f,c
  1453  000B88  0E00               	movlw	0
  1454  000B8A  22DD               	addwfc	postdec2,f,c
  1455  000B8C  EF9A  F005         	goto	l1904
  1456  000B90                     l956:
  1457  000B90  0012               	return		;funcret
  1458  000B92                     __end_of_vfpfcnvrt:
  1459                           	callstack 0
  1460                           
  1461 ;; *************** function _utoa *****************
  1462 ;; Defined at:
  1463 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  1466 ;;		 -> NULL(0), 
  1467 ;;  d               8   30[COMRAM] unsigned long long 
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;  n               8   50[COMRAM] unsigned long long 
  1470 ;;  i               2   58[COMRAM] int 
  1471 ;;  w               2   48[COMRAM] int 
  1472 ;;  p               2   46[COMRAM] int 
  1473 ;; Return value:  Size  Location     Type
  1474 ;;                  2   28[COMRAM] int 
  1475 ;; Registers used:
  1476 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1477 ;; Tracked objects:
  1478 ;;		On entry : 0/0
  1479 ;;		On exit  : 0/0
  1480 ;;		Unchanged: 0/0
  1481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1482 ;;      Params:        10       0       0       0       0       0       0       0       0
  1483 ;;      Locals:        14       0       0       0       0       0       0       0       0
  1484 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1485 ;;      Totals:        32       0       0       0       0       0       0       0       0
  1486 ;;Total ram usage:       32 bytes
  1487 ;; Hardware stack levels used: 1
  1488 ;; Hardware stack levels required when called: 4
  1489 ;; This function calls:
  1490 ;;		___lodiv
  1491 ;;		___lomod
  1492 ;;		_pad
  1493 ;; This function is called by:
  1494 ;;		_vfpfcnvrt
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           	psect	text4
  1499  000B92                     __ptext4:
  1500                           	callstack 0
  1501  000B92                     _utoa:
  1502                           	callstack 23
  1503  000B92                     
  1504                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  1505  000B92  0100               	movlb	0	; () banked
  1506  000B94  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1507  000B96  EFCF  F005         	goto	u1031
  1508  000B9A  EFD1  F005         	goto	u1030
  1509  000B9E                     u1031:
  1510  000B9E  EFD2  F005         	goto	l1758
  1511  000BA2                     u1030:
  1512  000BA2                     
  1513                           ; BSR set to: 0
  1514                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  1515  000BA2  9366               	bcf	_flags& (0+255),1,b
  1516  000BA4                     l1758:
  1517                           
  1518                           ; BSR set to: 0
  1519                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  1520  000BA4  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1521  000BA6  EFDF  F005         	goto	u1040
  1522  000BAA  5165               	movf	(_prec+1)& (0+255),w,b
  1523  000BAC  E106               	bnz	u1041
  1524  000BAE  0564               	decf	_prec& (0+255),w,b
  1525  000BB0  B0D8               	btfsc	status,0,c
  1526  000BB2  EFDD  F005         	goto	u1041
  1527  000BB6  EFDF  F005         	goto	u1040
  1528  000BBA                     u1041:
  1529  000BBA  EFE5  F005         	goto	l919
  1530  000BBE                     u1040:
  1531  000BBE                     
  1532                           ; BSR set to: 0
  1533  000BBE  0E00               	movlw	0
  1534  000BC0  6E30               	movwf	(utoa@p+1)^0,c
  1535  000BC2  0E01               	movlw	1
  1536  000BC4  6E2F               	movwf	utoa@p^0,c
  1537  000BC6  EFE9  F005         	goto	l921
  1538  000BCA                     l919:
  1539                           
  1540                           ; BSR set to: 0
  1541  000BCA  C064  F02F         	movff	_prec,utoa@p
  1542  000BCE  C065  F030         	movff	_prec+1,utoa@p+1
  1543  000BD2                     l921:
  1544                           
  1545                           ; BSR set to: 0
  1546                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  1547  000BD2  C062  F031         	movff	_width,utoa@w
  1548  000BD6  C063  F032         	movff	_width+1,utoa@w+1
  1549                           
  1550                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 628:     n = d;
  1551  000BDA  C01F  F033         	movff	utoa@d,utoa@n
  1552  000BDE  C020  F034         	movff	utoa@d+1,utoa@n+1
  1553  000BE2  C021  F035         	movff	utoa@d+2,utoa@n+2
  1554  000BE6  C022  F036         	movff	utoa@d+3,utoa@n+3
  1555  000BEA  C023  F037         	movff	utoa@d+4,utoa@n+4
  1556  000BEE  C024  F038         	movff	utoa@d+5,utoa@n+5
  1557  000BF2  C025  F039         	movff	utoa@d+6,utoa@n+6
  1558  000BF6  C026  F03A         	movff	utoa@d+7,utoa@n+7
  1559  000BFA                     
  1560                           ; BSR set to: 0
  1561                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  1562  000BFA  0E00               	movlw	0
  1563  000BFC  6E3C               	movwf	(utoa@i+1)^0,c
  1564  000BFE  0E1F               	movlw	31
  1565  000C00  6E3B               	movwf	utoa@i^0,c
  1566  000C02                     
  1567                           ; BSR set to: 0
  1568                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  1569  000C02  0E00               	movlw	0
  1570  000C04  6F8D               	movwf	(_dbuf+31)& (0+255),b
  1571                           
  1572                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1573  000C06  EF7B  F006         	goto	l1776
  1574  000C0A                     l1766:
  1575                           
  1576                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 632:         --i;
  1577  000C0A  063B               	decf	utoa@i^0,f,c
  1578  000C0C  A0D8               	btfss	status,0,c
  1579  000C0E  063C               	decf	(utoa@i+1)^0,f,c
  1580  000C10                     
  1581                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  1582  000C10  0E6E               	movlw	low _dbuf
  1583  000C12  243B               	addwf	utoa@i^0,w,c
  1584  000C14  6ED9               	movwf	fsr2l,c
  1585  000C16  0E00               	movlw	high _dbuf
  1586  000C18  203C               	addwfc	(utoa@i+1)^0,w,c
  1587  000C1A  6EDA               	movwf	fsr2h,c
  1588  000C1C  C033  F001         	movff	utoa@n,___lomod@dividend
  1589  000C20  C034  F002         	movff	utoa@n+1,___lomod@dividend+1
  1590  000C24  C035  F003         	movff	utoa@n+2,___lomod@dividend+2
  1591  000C28  C036  F004         	movff	utoa@n+3,___lomod@dividend+3
  1592  000C2C  C037  F005         	movff	utoa@n+4,___lomod@dividend+4
  1593  000C30  C038  F006         	movff	utoa@n+5,___lomod@dividend+5
  1594  000C34  C039  F007         	movff	utoa@n+6,___lomod@dividend+6
  1595  000C38  C03A  F008         	movff	utoa@n+7,___lomod@dividend+7
  1596  000C3C  0E0A               	movlw	10
  1597  000C3E  6E09               	movwf	___lomod@divisor^0,c
  1598  000C40  0E00               	movlw	0
  1599  000C42  6E0A               	movwf	(___lomod@divisor+1)^0,c
  1600  000C44  0E00               	movlw	0
  1601  000C46  6E0B               	movwf	(___lomod@divisor+2)^0,c
  1602  000C48  0E00               	movlw	0
  1603  000C4A  6E0C               	movwf	(___lomod@divisor+3)^0,c
  1604  000C4C  0E00               	movlw	0
  1605  000C4E  6E0D               	movwf	(___lomod@divisor+4)^0,c
  1606  000C50  0E00               	movlw	0
  1607  000C52  6E0E               	movwf	(___lomod@divisor+5)^0,c
  1608  000C54  0E00               	movlw	0
  1609  000C56  6E0F               	movwf	(___lomod@divisor+6)^0,c
  1610  000C58  0E00               	movlw	0
  1611  000C5A  6E10               	movwf	(___lomod@divisor+7)^0,c
  1612  000C5C  EC04  F00A         	call	___lomod	;wreg free
  1613  000C60  C001  F027         	movff	?___lomod,??_utoa
  1614  000C64  C002  F028         	movff	?___lomod+1,??_utoa+1
  1615  000C68  C003  F029         	movff	?___lomod+2,??_utoa+2
  1616  000C6C  C004  F02A         	movff	?___lomod+3,??_utoa+3
  1617  000C70  C005  F02B         	movff	?___lomod+4,??_utoa+4
  1618  000C74  C006  F02C         	movff	?___lomod+5,??_utoa+5
  1619  000C78  C007  F02D         	movff	?___lomod+6,??_utoa+6
  1620  000C7C  C008  F02E         	movff	?___lomod+7,??_utoa+7
  1621  000C80  5027               	movf	??_utoa^0,w,c
  1622  000C82  0F30               	addlw	48
  1623  000C84  6EDF               	movwf	indf2,c
  1624  000C86                     
  1625                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 634:         --p;
  1626  000C86  062F               	decf	utoa@p^0,f,c
  1627  000C88  A0D8               	btfss	status,0,c
  1628  000C8A  0630               	decf	(utoa@p+1)^0,f,c
  1629  000C8C                     
  1630                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 635:         --w;
  1631  000C8C  0631               	decf	utoa@w^0,f,c
  1632  000C8E  A0D8               	btfss	status,0,c
  1633  000C90  0632               	decf	(utoa@w+1)^0,f,c
  1634  000C92                     
  1635                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  1636  000C92  C033  F001         	movff	utoa@n,___lodiv@dividend
  1637  000C96  C034  F002         	movff	utoa@n+1,___lodiv@dividend+1
  1638  000C9A  C035  F003         	movff	utoa@n+2,___lodiv@dividend+2
  1639  000C9E  C036  F004         	movff	utoa@n+3,___lodiv@dividend+3
  1640  000CA2  C037  F005         	movff	utoa@n+4,___lodiv@dividend+4
  1641  000CA6  C038  F006         	movff	utoa@n+5,___lodiv@dividend+5
  1642  000CAA  C039  F007         	movff	utoa@n+6,___lodiv@dividend+6
  1643  000CAE  C03A  F008         	movff	utoa@n+7,___lodiv@dividend+7
  1644  000CB2  0E0A               	movlw	10
  1645  000CB4  6E09               	movwf	___lodiv@divisor^0,c
  1646  000CB6  0E00               	movlw	0
  1647  000CB8  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  1648  000CBA  0E00               	movlw	0
  1649  000CBC  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  1650  000CBE  0E00               	movlw	0
  1651  000CC0  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  1652  000CC2  0E00               	movlw	0
  1653  000CC4  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  1654  000CC6  0E00               	movlw	0
  1655  000CC8  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  1656  000CCA  0E00               	movlw	0
  1657  000CCC  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  1658  000CCE  0E00               	movlw	0
  1659  000CD0  6E10               	movwf	(___lodiv@divisor+7)^0,c
  1660  000CD2  ECA6  F008         	call	___lodiv	;wreg free
  1661  000CD6  C001  F033         	movff	?___lodiv,utoa@n
  1662  000CDA  C002  F034         	movff	?___lodiv+1,utoa@n+1
  1663  000CDE  C003  F035         	movff	?___lodiv+2,utoa@n+2
  1664  000CE2  C004  F036         	movff	?___lodiv+3,utoa@n+3
  1665  000CE6  C005  F037         	movff	?___lodiv+4,utoa@n+4
  1666  000CEA  C006  F038         	movff	?___lodiv+5,utoa@n+5
  1667  000CEE  C007  F039         	movff	?___lodiv+6,utoa@n+6
  1668  000CF2  C008  F03A         	movff	?___lodiv+7,utoa@n+7
  1669  000CF6                     l1776:
  1670                           
  1671                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1672  000CF6  503B               	movf	utoa@i^0,w,c
  1673  000CF8  103C               	iorwf	(utoa@i+1)^0,w,c
  1674  000CFA  B4D8               	btfsc	status,2,c
  1675  000CFC  EF82  F006         	goto	u1051
  1676  000D00  EF84  F006         	goto	u1050
  1677  000D04                     u1051:
  1678  000D04  EFB5  F006         	goto	l1786
  1679  000D08                     u1050:
  1680  000D08  5033               	movf	utoa@n^0,w,c
  1681  000D0A  1034               	iorwf	(utoa@n+1)^0,w,c
  1682  000D0C  1035               	iorwf	(utoa@n+2)^0,w,c
  1683  000D0E  1036               	iorwf	(utoa@n+3)^0,w,c
  1684  000D10  1037               	iorwf	(utoa@n+4)^0,w,c
  1685  000D12  1038               	iorwf	(utoa@n+5)^0,w,c
  1686  000D14  1039               	iorwf	(utoa@n+6)^0,w,c
  1687  000D16  103A               	iorwf	(utoa@n+7)^0,w,c
  1688  000D18  A4D8               	btfss	status,2,c
  1689  000D1A  EF91  F006         	goto	u1061
  1690  000D1E  EF93  F006         	goto	u1060
  1691  000D22                     u1061:
  1692  000D22  EF05  F006         	goto	l1766
  1693  000D26                     u1060:
  1694  000D26  BE30               	btfsc	(utoa@p+1)^0,7,c
  1695  000D28  EFA0  F006         	goto	u1070
  1696  000D2C  5030               	movf	(utoa@p+1)^0,w,c
  1697  000D2E  E106               	bnz	u1071
  1698  000D30  042F               	decf	utoa@p^0,w,c
  1699  000D32  B0D8               	btfsc	status,0,c
  1700  000D34  EF9E  F006         	goto	u1071
  1701  000D38  EFA0  F006         	goto	u1070
  1702  000D3C                     u1071:
  1703  000D3C  EF05  F006         	goto	l1766
  1704  000D40                     u1070:
  1705  000D40  BE32               	btfsc	(utoa@w+1)^0,7,c
  1706  000D42  EFAB  F006         	goto	u1081
  1707  000D46  5032               	movf	(utoa@w+1)^0,w,c
  1708  000D48  E108               	bnz	u1080
  1709  000D4A  0431               	decf	utoa@w^0,w,c
  1710  000D4C  A0D8               	btfss	status,0,c
  1711  000D4E  EFAB  F006         	goto	u1081
  1712  000D52  EFAD  F006         	goto	u1080
  1713  000D56                     u1081:
  1714  000D56  EFB5  F006         	goto	l1786
  1715  000D5A                     u1080:
  1716  000D5A  0100               	movlb	0	; () banked
  1717  000D5C  B366               	btfsc	_flags& (0+255),1,b
  1718  000D5E  EFB3  F006         	goto	u1091
  1719  000D62  EFB5  F006         	goto	u1090
  1720  000D66                     u1091:
  1721  000D66  EF05  F006         	goto	l1766
  1722  000D6A                     u1090:
  1723  000D6A                     l1786:
  1724                           
  1725                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  1726  000D6A  C01D  F012         	movff	utoa@fp,pad@fp
  1727  000D6E  C01E  F013         	movff	utoa@fp+1,pad@fp+1
  1728  000D72  0E6E               	movlw	low _dbuf
  1729  000D74  243B               	addwf	utoa@i^0,w,c
  1730  000D76  6E14               	movwf	pad@buf^0,c
  1731  000D78  0E00               	movlw	high _dbuf
  1732  000D7A  203C               	addwfc	(utoa@i+1)^0,w,c
  1733  000D7C  6E15               	movwf	(pad@buf+1)^0,c
  1734  000D7E  C031  F016         	movff	utoa@w,pad@p
  1735  000D82  C032  F017         	movff	utoa@w+1,pad@p+1
  1736  000D86  EC6C  F00A         	call	_pad	;wreg free
  1737  000D8A  C012  F01D         	movff	?_pad,?_utoa
  1738  000D8E  C013  F01E         	movff	?_pad+1,?_utoa+1
  1739  000D92  0012               	return		;funcret
  1740  000D94                     __end_of_utoa:
  1741                           	callstack 0
  1742                           
  1743 ;; *************** function _pad *****************
  1744 ;; Defined at:
  1745 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1746 ;; Parameters:    Size  Location     Type
  1747 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  1748 ;;		 -> NULL(0), 
  1749 ;;  buf             2   19[COMRAM] PTR unsigned char 
  1750 ;;		 -> dbuf(32), 
  1751 ;;  p               2   21[COMRAM] int 
  1752 ;; Auto vars:     Size  Location     Type
  1753 ;;  w               2   26[COMRAM] int 
  1754 ;;  i               2   24[COMRAM] int 
  1755 ;; Return value:  Size  Location     Type
  1756 ;;                  2   17[COMRAM] int 
  1757 ;; Registers used:
  1758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1759 ;; Tracked objects:
  1760 ;;		On entry : 0/0
  1761 ;;		On exit  : 0/0
  1762 ;;		Unchanged: 0/0
  1763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1764 ;;      Params:         6       0       0       0       0       0       0       0       0
  1765 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1766 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1767 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1768 ;;Total ram usage:       11 bytes
  1769 ;; Hardware stack levels used: 1
  1770 ;; Hardware stack levels required when called: 3
  1771 ;; This function calls:
  1772 ;;		_fputc
  1773 ;;		_fputs
  1774 ;;		_strlen
  1775 ;; This function is called by:
  1776 ;;		_utoa
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780                           	psect	text5
  1781  0014D8                     __ptext5:
  1782                           	callstack 0
  1783  0014D8                     _pad:
  1784                           	callstack 23
  1785  0014D8                     
  1786                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  1787  0014D8  0100               	movlb	0	; () banked
  1788  0014DA  A166               	btfss	_flags& (0+255),0,b
  1789  0014DC  EF72  F00A         	goto	u951
  1790  0014E0  EF74  F00A         	goto	u950
  1791  0014E4                     u951:
  1792  0014E4  EF7E  F00A         	goto	l1720
  1793  0014E8                     u950:
  1794  0014E8                     
  1795                           ; BSR set to: 0
  1796                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  1797  0014E8  C014  F00B         	movff	pad@buf,fputs@s
  1798  0014EC  C015  F00C         	movff	pad@buf+1,fputs@s+1
  1799  0014F0  C012  F00D         	movff	pad@fp,fputs@fp
  1800  0014F4  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  1801  0014F8  EC4C  F00D         	call	_fputs	;wreg free
  1802  0014FC                     l1720:
  1803                           
  1804                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  1805  0014FC  BE17               	btfsc	(pad@p+1)^0,7,c
  1806  0014FE  EF83  F00A         	goto	u961
  1807  001502  EF85  F00A         	goto	u960
  1808  001506                     u961:
  1809  001506  EF8B  F00A         	goto	l1724
  1810  00150A                     u960:
  1811  00150A  C016  F01B         	movff	pad@p,pad@w
  1812  00150E  C017  F01C         	movff	pad@p+1,pad@w+1
  1813  001512  EF8F  F00A         	goto	l909
  1814  001516                     l1724:
  1815  001516  0E00               	movlw	0
  1816  001518  6E1C               	movwf	(pad@w+1)^0,c
  1817  00151A  0E00               	movlw	0
  1818  00151C  6E1B               	movwf	pad@w^0,c
  1819  00151E                     l909:
  1820                           
  1821                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  1822  00151E  0E00               	movlw	0
  1823  001520  6E1A               	movwf	(pad@i+1)^0,c
  1824  001522  0E00               	movlw	0
  1825  001524  6E19               	movwf	pad@i^0,c
  1826                           
  1827                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1828  001526  EFA1  F00A         	goto	l1730
  1829  00152A                     l1726:
  1830                           
  1831                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  1832  00152A  0E00               	movlw	0
  1833  00152C  6E03               	movwf	(fputc@c+1)^0,c
  1834  00152E  0E20               	movlw	32
  1835  001530  6E02               	movwf	fputc@c^0,c
  1836  001532  C012  F004         	movff	pad@fp,fputc@fp
  1837  001536  C013  F005         	movff	pad@fp+1,fputc@fp+1
  1838  00153A  EC39  F00C         	call	_fputc	;wreg free
  1839  00153E                     
  1840                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  1841  00153E  4A19               	infsnz	pad@i^0,f,c
  1842  001540  2A1A               	incf	(pad@i+1)^0,f,c
  1843  001542                     l1730:
  1844                           
  1845                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1846  001542  501B               	movf	pad@w^0,w,c
  1847  001544  5C19               	subwf	pad@i^0,w,c
  1848  001546  501A               	movf	(pad@i+1)^0,w,c
  1849  001548  0A80               	xorlw	128
  1850  00154A  6E18               	movwf	??_pad^0,c
  1851  00154C  501C               	movf	(pad@w+1)^0,w,c
  1852  00154E  0A80               	xorlw	128
  1853  001550  5818               	subwfb	??_pad^0,w,c
  1854  001552  A0D8               	btfss	status,0,c
  1855  001554  EFAE  F00A         	goto	u971
  1856  001558  EFB0  F00A         	goto	u970
  1857  00155C                     u971:
  1858  00155C  EF95  F00A         	goto	l1726
  1859  001560                     u970:
  1860  001560                     
  1861                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  1862  001560  0100               	movlb	0	; () banked
  1863  001562  B166               	btfsc	_flags& (0+255),0,b
  1864  001564  EFB6  F00A         	goto	u981
  1865  001568  EFB8  F00A         	goto	u980
  1866  00156C                     u981:
  1867  00156C  EFC2  F00A         	goto	l1734
  1868  001570                     u980:
  1869  001570                     
  1870                           ; BSR set to: 0
  1871                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  1872  001570  C014  F00B         	movff	pad@buf,fputs@s
  1873  001574  C015  F00C         	movff	pad@buf+1,fputs@s+1
  1874  001578  C012  F00D         	movff	pad@fp,fputs@fp
  1875  00157C  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  1876  001580  EC4C  F00D         	call	_fputs	;wreg free
  1877  001584                     l1734:
  1878                           
  1879                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  1880  001584  C014  F001         	movff	pad@buf,strlen@s
  1881  001588  C015  F002         	movff	pad@buf+1,strlen@s+1
  1882  00158C  EC8A  F00D         	call	_strlen	;wreg free
  1883  001590  501B               	movf	pad@w^0,w,c
  1884  001592  2401               	addwf	?_strlen^0,w,c
  1885  001594  6E12               	movwf	?_pad^0,c
  1886  001596  501C               	movf	(pad@w+1)^0,w,c
  1887  001598  2002               	addwfc	(?_strlen+1)^0,w,c
  1888  00159A  6E13               	movwf	(?_pad+1)^0,c
  1889  00159C  0012               	return		;funcret
  1890  00159E                     __end_of_pad:
  1891                           	callstack 0
  1892                           
  1893 ;; *************** function _strlen *****************
  1894 ;; Defined at:
  1895 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  1896 ;; Parameters:    Size  Location     Type
  1897 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1898 ;;		 -> dbuf(32), 
  1899 ;; Auto vars:     Size  Location     Type
  1900 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1901 ;;		 -> dbuf(32), 
  1902 ;; Return value:  Size  Location     Type
  1903 ;;                  2    0[COMRAM] unsigned int 
  1904 ;; Registers used:
  1905 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1906 ;; Tracked objects:
  1907 ;;		On entry : 0/0
  1908 ;;		On exit  : 0/0
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1911 ;;      Params:         2       0       0       0       0       0       0       0       0
  1912 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1913 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1914 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1915 ;;Total ram usage:        4 bytes
  1916 ;; Hardware stack levels used: 1
  1917 ;; This function calls:
  1918 ;;		Nothing
  1919 ;; This function is called by:
  1920 ;;		_pad
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           	psect	text6
  1925  001B14                     __ptext6:
  1926                           	callstack 0
  1927  001B14                     _strlen:
  1928                           	callstack 25
  1929  001B14  C001  F003         	movff	strlen@s,strlen@a
  1930  001B18  C002  F004         	movff	strlen@s+1,strlen@a+1
  1931  001B1C  EF92  F00D         	goto	l1666
  1932  001B20                     l1664:
  1933  001B20  4A01               	infsnz	strlen@s^0,f,c
  1934  001B22  2A02               	incf	(strlen@s+1)^0,f,c
  1935  001B24                     l1666:
  1936  001B24  C001  FFD9         	movff	strlen@s,fsr2l
  1937  001B28  C002  FFDA         	movff	strlen@s+1,fsr2h
  1938  001B2C  50DF               	movf	indf2,w,c
  1939  001B2E  A4D8               	btfss	status,2,c
  1940  001B30  EF9C  F00D         	goto	u871
  1941  001B34  EF9E  F00D         	goto	u870
  1942  001B38                     u871:
  1943  001B38  EF90  F00D         	goto	l1664
  1944  001B3C                     u870:
  1945  001B3C  5003               	movf	strlen@a^0,w,c
  1946  001B3E  5C01               	subwf	strlen@s^0,w,c
  1947  001B40  6E01               	movwf	?_strlen^0,c
  1948  001B42  5004               	movf	(strlen@a+1)^0,w,c
  1949  001B44  5802               	subwfb	(strlen@s+1)^0,w,c
  1950  001B46  6E02               	movwf	(?_strlen+1)^0,c
  1951  001B48  0012               	return		;funcret
  1952  001B4A                     __end_of_strlen:
  1953                           	callstack 0
  1954                           
  1955 ;; *************** function _fputs *****************
  1956 ;; Defined at:
  1957 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  1958 ;; Parameters:    Size  Location     Type
  1959 ;;  s               2   10[COMRAM] PTR const unsigned char 
  1960 ;;		 -> dbuf(32), 
  1961 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  1962 ;;		 -> NULL(0), 
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;  i               2   15[COMRAM] int 
  1965 ;;  c               1   14[COMRAM] unsigned char 
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  2   10[COMRAM] int 
  1968 ;; Registers used:
  1969 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1975 ;;      Params:         4       0       0       0       0       0       0       0       0
  1976 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1977 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1978 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1979 ;;Total ram usage:        7 bytes
  1980 ;; Hardware stack levels used: 1
  1981 ;; Hardware stack levels required when called: 2
  1982 ;; This function calls:
  1983 ;;		_fputc
  1984 ;; This function is called by:
  1985 ;;		_pad
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           	psect	text7
  1990  001A98                     __ptext7:
  1991                           	callstack 0
  1992  001A98                     _fputs:
  1993                           	callstack 23
  1994  001A98  0E00               	movlw	0
  1995  001A9A  6E11               	movwf	(fputs@i+1)^0,c
  1996  001A9C  0E00               	movlw	0
  1997  001A9E  6E10               	movwf	fputs@i^0,c
  1998  001AA0  EF5D  F00D         	goto	l1660
  1999  001AA4                     l1656:
  2000  001AA4  C00F  F002         	movff	fputs@c,fputc@c
  2001  001AA8  6A03               	clrf	(fputc@c+1)^0,c
  2002  001AAA  C00D  F004         	movff	fputs@fp,fputc@fp
  2003  001AAE  C00E  F005         	movff	fputs@fp+1,fputc@fp+1
  2004  001AB2  EC39  F00C         	call	_fputc	;wreg free
  2005  001AB6  4A10               	infsnz	fputs@i^0,f,c
  2006  001AB8  2A11               	incf	(fputs@i+1)^0,f,c
  2007  001ABA                     l1660:
  2008  001ABA  5010               	movf	fputs@i^0,w,c
  2009  001ABC  240B               	addwf	fputs@s^0,w,c
  2010  001ABE  6ED9               	movwf	fsr2l,c
  2011  001AC0  5011               	movf	(fputs@i+1)^0,w,c
  2012  001AC2  200C               	addwfc	(fputs@s+1)^0,w,c
  2013  001AC4  6EDA               	movwf	fsr2h,c
  2014  001AC6  50DF               	movf	indf2,w,c
  2015  001AC8  6E0F               	movwf	fputs@c^0,c
  2016  001ACA  500F               	movf	fputs@c^0,w,c
  2017  001ACC  A4D8               	btfss	status,2,c
  2018  001ACE  EF6B  F00D         	goto	u861
  2019  001AD2  EF6D  F00D         	goto	u860
  2020  001AD6                     u861:
  2021  001AD6  EF52  F00D         	goto	l1656
  2022  001ADA                     u860:
  2023  001ADA  0012               	return		;funcret
  2024  001ADC                     __end_of_fputs:
  2025                           	callstack 0
  2026                           
  2027 ;; *************** function _fputc *****************
  2028 ;; Defined at:
  2029 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;  c               2    1[COMRAM] int 
  2032 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  2033 ;;		 -> NULL(0), 
  2034 ;; Auto vars:     Size  Location     Type
  2035 ;;		None
  2036 ;; Return value:  Size  Location     Type
  2037 ;;                  2    1[COMRAM] int 
  2038 ;; Registers used:
  2039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2045 ;;      Params:         4       0       0       0       0       0       0       0       0
  2046 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2047 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2048 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2049 ;;Total ram usage:        9 bytes
  2050 ;; Hardware stack levels used: 1
  2051 ;; Hardware stack levels required when called: 1
  2052 ;; This function calls:
  2053 ;;		_putch
  2054 ;; This function is called by:
  2055 ;;		_pad
  2056 ;;		_vfpfcnvrt
  2057 ;;		_fputs
  2058 ;; This function uses a non-reentrant model
  2059 ;;
  2060                           
  2061                           	psect	text8
  2062  001872                     __ptext8:
  2063                           	callstack 0
  2064  001872                     _fputc:
  2065                           	callstack 23
  2066  001872  5004               	movf	fputc@fp^0,w,c
  2067  001874  1005               	iorwf	(fputc@fp+1)^0,w,c
  2068  001876  B4D8               	btfsc	status,2,c
  2069  001878  EF40  F00C         	goto	u821
  2070  00187C  EF42  F00C         	goto	u820
  2071  001880                     u821:
  2072  001880  EF4B  F00C         	goto	l1644
  2073  001884                     u820:
  2074  001884  5004               	movf	fputc@fp^0,w,c
  2075  001886  1005               	iorwf	(fputc@fp+1)^0,w,c
  2076  001888  A4D8               	btfss	status,2,c
  2077  00188A  EF49  F00C         	goto	u831
  2078  00188E  EF4B  F00C         	goto	u830
  2079  001892                     u831:
  2080  001892  EF50  F00C         	goto	l1646
  2081  001896                     u830:
  2082  001896                     l1644:
  2083  001896  5002               	movf	fputc@c^0,w,c
  2084  001898  ECE9  F00D         	call	_putch
  2085  00189C  EF83  F00C         	goto	l1020
  2086  0018A0                     l1646:
  2087  0018A0  EE20 F004          	lfsr	2,4
  2088  0018A4  5004               	movf	fputc@fp^0,w,c
  2089  0018A6  26D9               	addwf	fsr2l,f,c
  2090  0018A8  5005               	movf	(fputc@fp+1)^0,w,c
  2091  0018AA  22DA               	addwfc	fsr2h,f,c
  2092  0018AC  50DE               	movf	postinc2,w,c
  2093  0018AE  10DE               	iorwf	postinc2,w,c
  2094  0018B0  B4D8               	btfsc	status,2,c
  2095  0018B2  EF5D  F00C         	goto	u841
  2096  0018B6  EF5F  F00C         	goto	u840
  2097  0018BA                     u841:
  2098  0018BA  EF7A  F00C         	goto	l1650
  2099  0018BE                     u840:
  2100  0018BE  EE20 F004          	lfsr	2,4
  2101  0018C2  5004               	movf	fputc@fp^0,w,c
  2102  0018C4  26D9               	addwf	fsr2l,f,c
  2103  0018C6  5005               	movf	(fputc@fp+1)^0,w,c
  2104  0018C8  22DA               	addwfc	fsr2h,f,c
  2105  0018CA  EE10 F002          	lfsr	1,2
  2106  0018CE  5004               	movf	fputc@fp^0,w,c
  2107  0018D0  26E1               	addwf	fsr1l,f,c
  2108  0018D2  5005               	movf	(fputc@fp+1)^0,w,c
  2109  0018D4  22E2               	addwfc	fsr1h,f,c
  2110  0018D6  50DE               	movf	postinc2,w,c
  2111  0018D8  5CE6               	subwf	postinc1,w,c
  2112  0018DA  50E6               	movf	postinc1,w,c
  2113  0018DC  0A80               	xorlw	128
  2114  0018DE  6E0A               	movwf	(??_fputc+4)^0,c
  2115  0018E0  50DE               	movf	postinc2,w,c
  2116  0018E2  0A80               	xorlw	128
  2117  0018E4  580A               	subwfb	(??_fputc+4)^0,w,c
  2118  0018E6  B0D8               	btfsc	status,0,c
  2119  0018E8  EF78  F00C         	goto	u851
  2120  0018EC  EF7A  F00C         	goto	u850
  2121  0018F0                     u851:
  2122  0018F0  EF83  F00C         	goto	l1020
  2123  0018F4                     u850:
  2124  0018F4                     l1650:
  2125  0018F4  EE20 F002          	lfsr	2,2
  2126  0018F8  5004               	movf	fputc@fp^0,w,c
  2127  0018FA  26D9               	addwf	fsr2l,f,c
  2128  0018FC  5005               	movf	(fputc@fp+1)^0,w,c
  2129  0018FE  22DA               	addwfc	fsr2h,f,c
  2130  001900  2ADE               	incf	postinc2,f,c
  2131  001902  0E00               	movlw	0
  2132  001904  22DD               	addwfc	postdec2,f,c
  2133  001906                     l1020:
  2134  001906  0012               	return		;funcret
  2135  001908                     __end_of_fputc:
  2136                           	callstack 0
  2137                           
  2138 ;; *************** function _putch *****************
  2139 ;; Defined at:
  2140 ;;		line 48 in file "USART.c"
  2141 ;; Parameters:    Size  Location     Type
  2142 ;;  c               1    wreg     unsigned char 
  2143 ;; Auto vars:     Size  Location     Type
  2144 ;;  c               1    0[COMRAM] unsigned char 
  2145 ;; Return value:  Size  Location     Type
  2146 ;;                  1    wreg      void 
  2147 ;; Registers used:
  2148 ;;		wreg
  2149 ;; Tracked objects:
  2150 ;;		On entry : 0/0
  2151 ;;		On exit  : 0/0
  2152 ;;		Unchanged: 0/0
  2153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2154 ;;      Params:         0       0       0       0       0       0       0       0       0
  2155 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2156 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2157 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2158 ;;Total ram usage:        1 bytes
  2159 ;; Hardware stack levels used: 1
  2160 ;; This function calls:
  2161 ;;		Nothing
  2162 ;; This function is called by:
  2163 ;;		_fputc
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167                           	psect	text9
  2168  001BD2                     __ptext9:
  2169                           	callstack 0
  2170  001BD2                     _putch:
  2171                           	callstack 23
  2172                           
  2173                           ;incstack = 0
  2174                           ;putch@c stored from wreg
  2175  001BD2  6E01               	movwf	putch@c^0,c
  2176  001BD4                     
  2177                           ;USART.c: 49:     TXREG = c;
  2178  001BD4  C001  FFAD         	movff	putch@c,4013	;volatile
  2179  001BD8                     l171:
  2180  001BD8  A2AC               	btfss	172,1,c	;volatile
  2181  001BDA  EFF1  F00D         	goto	u811
  2182  001BDE  EFF3  F00D         	goto	u810
  2183  001BE2                     u811:
  2184  001BE2  EFEC  F00D         	goto	l171
  2185  001BE6                     u810:
  2186  001BE6  0012               	return		;funcret
  2187  001BE8                     __end_of_putch:
  2188                           	callstack 0
  2189                           
  2190 ;; *************** function ___lomod *****************
  2191 ;; Defined at:
  2192 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lomod.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;  dividend        8    0[COMRAM] unsigned long long 
  2195 ;;  divisor         8    8[COMRAM] unsigned long long 
  2196 ;; Auto vars:     Size  Location     Type
  2197 ;;  counter         1   16[COMRAM] unsigned char 
  2198 ;; Return value:  Size  Location     Type
  2199 ;;                  8    0[COMRAM] unsigned long long 
  2200 ;; Registers used:
  2201 ;;		wreg, status,2, status,0
  2202 ;; Tracked objects:
  2203 ;;		On entry : 0/0
  2204 ;;		On exit  : 0/0
  2205 ;;		Unchanged: 0/0
  2206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2207 ;;      Params:        16       0       0       0       0       0       0       0       0
  2208 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2209 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2210 ;;      Totals:        17       0       0       0       0       0       0       0       0
  2211 ;;Total ram usage:       17 bytes
  2212 ;; Hardware stack levels used: 1
  2213 ;; This function calls:
  2214 ;;		Nothing
  2215 ;; This function is called by:
  2216 ;;		_utoa
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           
  2220                           	psect	text10
  2221  001408                     __ptext10:
  2222                           	callstack 0
  2223  001408                     ___lomod:
  2224                           	callstack 26
  2225  001408  5009               	movf	___lomod@divisor^0,w,c
  2226  00140A  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  2227  00140C  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  2228  00140E  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  2229  001410  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  2230  001412  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  2231  001414  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  2232  001416  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  2233  001418  B4D8               	btfsc	status,2,c
  2234  00141A  EF11  F00A         	goto	u921
  2235  00141E  EF13  F00A         	goto	u920
  2236  001422                     u921:
  2237  001422  EF5B  F00A         	goto	l650
  2238  001426                     u920:
  2239  001426  0E01               	movlw	1
  2240  001428  6E11               	movwf	___lomod@counter^0,c
  2241  00142A  EF21  F00A         	goto	l1706
  2242  00142E                     l1704:
  2243  00142E  90D8               	bcf	status,0,c
  2244  001430  3609               	rlcf	___lomod@divisor^0,f,c
  2245  001432  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  2246  001434  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  2247  001436  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  2248  001438  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  2249  00143A  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  2250  00143C  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  2251  00143E  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  2252  001440  2A11               	incf	___lomod@counter^0,f,c
  2253  001442                     l1706:
  2254  001442  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  2255  001444  EF26  F00A         	goto	u931
  2256  001448  EF28  F00A         	goto	u930
  2257  00144C                     u931:
  2258  00144C  EF17  F00A         	goto	l1704
  2259  001450                     u930:
  2260  001450                     l1708:
  2261  001450  5009               	movf	___lomod@divisor^0,w,c
  2262  001452  5C01               	subwf	___lomod@dividend^0,w,c
  2263  001454  500A               	movf	(___lomod@divisor+1)^0,w,c
  2264  001456  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  2265  001458  500B               	movf	(___lomod@divisor+2)^0,w,c
  2266  00145A  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  2267  00145C  500C               	movf	(___lomod@divisor+3)^0,w,c
  2268  00145E  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  2269  001460  500D               	movf	(___lomod@divisor+4)^0,w,c
  2270  001462  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  2271  001464  500E               	movf	(___lomod@divisor+5)^0,w,c
  2272  001466  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  2273  001468  500F               	movf	(___lomod@divisor+6)^0,w,c
  2274  00146A  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  2275  00146C  5010               	movf	(___lomod@divisor+7)^0,w,c
  2276  00146E  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  2277  001470  A0D8               	btfss	status,0,c
  2278  001472  EF3D  F00A         	goto	u941
  2279  001476  EF3F  F00A         	goto	u940
  2280  00147A                     u941:
  2281  00147A  EF4F  F00A         	goto	l1712
  2282  00147E                     u940:
  2283  00147E  5009               	movf	___lomod@divisor^0,w,c
  2284  001480  5E01               	subwf	___lomod@dividend^0,f,c
  2285  001482  500A               	movf	(___lomod@divisor+1)^0,w,c
  2286  001484  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  2287  001486  500B               	movf	(___lomod@divisor+2)^0,w,c
  2288  001488  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  2289  00148A  500C               	movf	(___lomod@divisor+3)^0,w,c
  2290  00148C  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  2291  00148E  500D               	movf	(___lomod@divisor+4)^0,w,c
  2292  001490  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  2293  001492  500E               	movf	(___lomod@divisor+5)^0,w,c
  2294  001494  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  2295  001496  500F               	movf	(___lomod@divisor+6)^0,w,c
  2296  001498  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  2297  00149A  5010               	movf	(___lomod@divisor+7)^0,w,c
  2298  00149C  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  2299  00149E                     l1712:
  2300  00149E  90D8               	bcf	status,0,c
  2301  0014A0  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  2302  0014A2  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  2303  0014A4  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  2304  0014A6  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  2305  0014A8  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  2306  0014AA  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  2307  0014AC  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  2308  0014AE  3209               	rrcf	___lomod@divisor^0,f,c
  2309  0014B0  2E11               	decfsz	___lomod@counter^0,f,c
  2310  0014B2  EF28  F00A         	goto	l1708
  2311  0014B6                     l650:
  2312  0014B6  C001  F001         	movff	___lomod@dividend,?___lomod
  2313  0014BA  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  2314  0014BE  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  2315  0014C2  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  2316  0014C6  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  2317  0014CA  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  2318  0014CE  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  2319  0014D2  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  2320  0014D6  0012               	return		;funcret
  2321  0014D8                     __end_of___lomod:
  2322                           	callstack 0
  2323                           
  2324 ;; *************** function ___lodiv *****************
  2325 ;; Defined at:
  2326 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lodiv.c"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;  dividend        8    0[COMRAM] unsigned long long 
  2329 ;;  divisor         8    8[COMRAM] unsigned long long 
  2330 ;; Auto vars:     Size  Location     Type
  2331 ;;  quotient        8   16[COMRAM] unsigned long long 
  2332 ;;  counter         1   24[COMRAM] unsigned char 
  2333 ;; Return value:  Size  Location     Type
  2334 ;;                  8    0[COMRAM] unsigned long long 
  2335 ;; Registers used:
  2336 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2337 ;; Tracked objects:
  2338 ;;		On entry : 0/0
  2339 ;;		On exit  : 0/0
  2340 ;;		Unchanged: 0/0
  2341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2342 ;;      Params:        16       0       0       0       0       0       0       0       0
  2343 ;;      Locals:         9       0       0       0       0       0       0       0       0
  2344 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2345 ;;      Totals:        25       0       0       0       0       0       0       0       0
  2346 ;;Total ram usage:       25 bytes
  2347 ;; Hardware stack levels used: 1
  2348 ;; This function calls:
  2349 ;;		Nothing
  2350 ;; This function is called by:
  2351 ;;		_utoa
  2352 ;; This function uses a non-reentrant model
  2353 ;;
  2354                           
  2355                           	psect	text11
  2356  00114C                     __ptext11:
  2357                           	callstack 0
  2358  00114C                     ___lodiv:
  2359                           	callstack 26
  2360  00114C  EE20  F011         	lfsr	2,___lodiv@quotient
  2361  001150  0E07               	movlw	7
  2362  001152                     u881:
  2363  001152  6ADE               	clrf	postinc2,c
  2364  001154  06E8               	decf	wreg,f,c
  2365  001156  E2FD               	bc	u881
  2366  001158  5009               	movf	___lodiv@divisor^0,w,c
  2367  00115A  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  2368  00115C  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  2369  00115E  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  2370  001160  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  2371  001162  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  2372  001164  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  2373  001166  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  2374  001168  B4D8               	btfsc	status,2,c
  2375  00116A  EFB9  F008         	goto	u891
  2376  00116E  EFBB  F008         	goto	u890
  2377  001172                     u891:
  2378  001172  EF0D  F009         	goto	l640
  2379  001176                     u890:
  2380  001176  0E01               	movlw	1
  2381  001178  6E19               	movwf	___lodiv@counter^0,c
  2382  00117A  EFC9  F008         	goto	l1686
  2383  00117E                     l1684:
  2384  00117E  90D8               	bcf	status,0,c
  2385  001180  3609               	rlcf	___lodiv@divisor^0,f,c
  2386  001182  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  2387  001184  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  2388  001186  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  2389  001188  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  2390  00118A  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  2391  00118C  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  2392  00118E  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  2393  001190  2A19               	incf	___lodiv@counter^0,f,c
  2394  001192                     l1686:
  2395  001192  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  2396  001194  EFCE  F008         	goto	u901
  2397  001198  EFD0  F008         	goto	u900
  2398  00119C                     u901:
  2399  00119C  EFBF  F008         	goto	l1684
  2400  0011A0                     u900:
  2401  0011A0                     l1688:
  2402  0011A0  90D8               	bcf	status,0,c
  2403  0011A2  3611               	rlcf	___lodiv@quotient^0,f,c
  2404  0011A4  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  2405  0011A6  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  2406  0011A8  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  2407  0011AA  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  2408  0011AC  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  2409  0011AE  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  2410  0011B0  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  2411  0011B2  5009               	movf	___lodiv@divisor^0,w,c
  2412  0011B4  5C01               	subwf	___lodiv@dividend^0,w,c
  2413  0011B6  500A               	movf	(___lodiv@divisor+1)^0,w,c
  2414  0011B8  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  2415  0011BA  500B               	movf	(___lodiv@divisor+2)^0,w,c
  2416  0011BC  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  2417  0011BE  500C               	movf	(___lodiv@divisor+3)^0,w,c
  2418  0011C0  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  2419  0011C2  500D               	movf	(___lodiv@divisor+4)^0,w,c
  2420  0011C4  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  2421  0011C6  500E               	movf	(___lodiv@divisor+5)^0,w,c
  2422  0011C8  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  2423  0011CA  500F               	movf	(___lodiv@divisor+6)^0,w,c
  2424  0011CC  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  2425  0011CE  5010               	movf	(___lodiv@divisor+7)^0,w,c
  2426  0011D0  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  2427  0011D2  A0D8               	btfss	status,0,c
  2428  0011D4  EFEE  F008         	goto	u911
  2429  0011D8  EFF0  F008         	goto	u910
  2430  0011DC                     u911:
  2431  0011DC  EF01  F009         	goto	l1696
  2432  0011E0                     u910:
  2433  0011E0  5009               	movf	___lodiv@divisor^0,w,c
  2434  0011E2  5E01               	subwf	___lodiv@dividend^0,f,c
  2435  0011E4  500A               	movf	(___lodiv@divisor+1)^0,w,c
  2436  0011E6  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  2437  0011E8  500B               	movf	(___lodiv@divisor+2)^0,w,c
  2438  0011EA  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  2439  0011EC  500C               	movf	(___lodiv@divisor+3)^0,w,c
  2440  0011EE  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  2441  0011F0  500D               	movf	(___lodiv@divisor+4)^0,w,c
  2442  0011F2  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  2443  0011F4  500E               	movf	(___lodiv@divisor+5)^0,w,c
  2444  0011F6  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  2445  0011F8  500F               	movf	(___lodiv@divisor+6)^0,w,c
  2446  0011FA  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  2447  0011FC  5010               	movf	(___lodiv@divisor+7)^0,w,c
  2448  0011FE  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  2449  001200  8011               	bsf	___lodiv@quotient^0,0,c
  2450  001202                     l1696:
  2451  001202  90D8               	bcf	status,0,c
  2452  001204  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  2453  001206  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  2454  001208  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  2455  00120A  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  2456  00120C  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  2457  00120E  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  2458  001210  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  2459  001212  3209               	rrcf	___lodiv@divisor^0,f,c
  2460  001214  2E19               	decfsz	___lodiv@counter^0,f,c
  2461  001216  EFD0  F008         	goto	l1688
  2462  00121A                     l640:
  2463  00121A  C011  F001         	movff	___lodiv@quotient,?___lodiv
  2464  00121E  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  2465  001222  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  2466  001226  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  2467  00122A  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  2468  00122E  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  2469  001232  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  2470  001236  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  2471  00123A  0012               	return		;funcret
  2472  00123C                     __end_of___lodiv:
  2473                           	callstack 0
  2474                           
  2475 ;; *************** function _atoi *****************
  2476 ;; Defined at:
  2477 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;  s               2    7[COMRAM] PTR const unsigned char 
  2480 ;;		 -> STR_2(35), STR_1(24), 
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;  n               2   20[COMRAM] int 
  2483 ;;  neg             2   13[COMRAM] int 
  2484 ;; Return value:  Size  Location     Type
  2485 ;;                  2    7[COMRAM] int 
  2486 ;; Registers used:
  2487 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2493 ;;      Params:         2       0       0       0       0       0       0       0       0
  2494 ;;      Locals:         9       0       0       0       0       0       0       0       0
  2495 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2496 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2497 ;;Total ram usage:       15 bytes
  2498 ;; Hardware stack levels used: 1
  2499 ;; Hardware stack levels required when called: 1
  2500 ;; This function calls:
  2501 ;;		___wmul
  2502 ;;		_isdigit
  2503 ;;		_isspace
  2504 ;; This function is called by:
  2505 ;;		_vfpfcnvrt
  2506 ;; This function uses a non-reentrant model
  2507 ;;
  2508                           
  2509                           	psect	text12
  2510  000D94                     __ptext12:
  2511                           	callstack 0
  2512  000D94                     _atoi:
  2513                           	callstack 26
  2514  000D94  0E00               	movlw	0
  2515  000D96  6E16               	movwf	(atoi@n+1)^0,c
  2516  000D98  0E00               	movlw	0
  2517  000D9A  6E15               	movwf	atoi@n^0,c
  2518  000D9C  0E00               	movlw	0
  2519  000D9E  6E0F               	movwf	(atoi@neg+1)^0,c
  2520  000DA0  0E00               	movlw	0
  2521  000DA2  6E0E               	movwf	atoi@neg^0,c
  2522  000DA4  EFD6  F006         	goto	l1794
  2523  000DA8                     l1792:
  2524  000DA8  4A08               	infsnz	atoi@s^0,f,c
  2525  000DAA  2A09               	incf	(atoi@s+1)^0,f,c
  2526  000DAC                     l1794:
  2527  000DAC  0E01               	movlw	1
  2528  000DAE  6E14               	movwf	_atoi$1057^0,c
  2529  000DB0  C008  FFF6         	movff	atoi@s,tblptrl
  2530  000DB4  C009  FFF7         	movff	atoi@s+1,tblptrh
  2531  000DB8                     	if	0	;tblptru may be non-zero
  2532  000DB8                     	endif
  2533  000DB8                     	if	0	;tblptru may be non-zero
  2534  000DB8                     	endif
  2535  000DB8  0008               	tblrd		*
  2536  000DBA  50F5               	movf	tablat,w,c
  2537  000DBC  0A20               	xorlw	32
  2538  000DBE  B4D8               	btfsc	status,2,c
  2539  000DC0  EFE4  F006         	goto	u1101
  2540  000DC4  EFE6  F006         	goto	u1100
  2541  000DC8                     u1101:
  2542  000DC8  EF03  F007         	goto	l1802
  2543  000DCC                     u1100:
  2544  000DCC  0EF7               	movlw	247
  2545  000DCE  6E0A               	movwf	??_atoi^0,c
  2546  000DD0  0EFF               	movlw	255
  2547  000DD2  6E0B               	movwf	(??_atoi+1)^0,c
  2548  000DD4  C008  FFF6         	movff	atoi@s,tblptrl
  2549  000DD8  C009  FFF7         	movff	atoi@s+1,tblptrh
  2550  000DDC                     	if	0	;tblptru may be non-zero
  2551  000DDC                     	endif
  2552  000DDC                     	if	0	;tblptru may be non-zero
  2553  000DDC                     	endif
  2554  000DDC  0008               	tblrd		*
  2555  000DDE  50F5               	movf	tablat,w,c
  2556  000DE0  6E0C               	movwf	(??_atoi+2)^0,c
  2557  000DE2  6A0D               	clrf	(??_atoi+3)^0,c
  2558  000DE4  500A               	movf	??_atoi^0,w,c
  2559  000DE6  260C               	addwf	(??_atoi+2)^0,f,c
  2560  000DE8  500B               	movf	(??_atoi+1)^0,w,c
  2561  000DEA  220D               	addwfc	(??_atoi+3)^0,f,c
  2562  000DEC  500D               	movf	(??_atoi+3)^0,w,c
  2563  000DEE  E109               	bnz	u1110
  2564  000DF0  0E05               	movlw	5
  2565  000DF2  5C0C               	subwf	(??_atoi+2)^0,w,c
  2566  000DF4  A0D8               	btfss	status,0,c
  2567  000DF6  EFFF  F006         	goto	u1111
  2568  000DFA  EF01  F007         	goto	u1110
  2569  000DFE                     u1111:
  2570  000DFE  EF03  F007         	goto	l1802
  2571  000E02                     u1110:
  2572  000E02  0E00               	movlw	0
  2573  000E04  6E14               	movwf	_atoi$1057^0,c
  2574  000E06                     l1802:
  2575  000E06  C014  F010         	movff	_atoi$1057,_atoi$1056
  2576  000E0A  6A11               	clrf	(_atoi$1056+1)^0,c
  2577  000E0C  5010               	movf	_atoi$1056^0,w,c
  2578  000E0E  1011               	iorwf	(_atoi$1056+1)^0,w,c
  2579  000E10  A4D8               	btfss	status,2,c
  2580  000E12  EF0D  F007         	goto	u1121
  2581  000E16  EF0F  F007         	goto	u1120
  2582  000E1A                     u1121:
  2583  000E1A  EFD4  F006         	goto	l1792
  2584  000E1E                     u1120:
  2585  000E1E  EF19  F007         	goto	l1812
  2586  000E22                     l1808:
  2587  000E22  0E00               	movlw	0
  2588  000E24  6E0F               	movwf	(atoi@neg+1)^0,c
  2589  000E26  0E01               	movlw	1
  2590  000E28  6E0E               	movwf	atoi@neg^0,c
  2591  000E2A                     l1810:
  2592  000E2A  4A08               	infsnz	atoi@s^0,f,c
  2593  000E2C  2A09               	incf	(atoi@s+1)^0,f,c
  2594  000E2E  EF4E  F007         	goto	l1818
  2595  000E32                     l1812:
  2596  000E32  C008  FFF6         	movff	atoi@s,tblptrl
  2597  000E36  C009  FFF7         	movff	atoi@s+1,tblptrh
  2598  000E3A                     	if	0	;tblptru may be non-zero
  2599  000E3A                     	endif
  2600  000E3A                     	if	0	;tblptru may be non-zero
  2601  000E3A                     	endif
  2602  000E3A  0008               	tblrd		*
  2603  000E3C  50F5               	movf	tablat,w,c
  2604  000E3E  6E0A               	movwf	??_atoi^0,c
  2605  000E40  6A0B               	clrf	(??_atoi+1)^0,c
  2606                           
  2607                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2608                           ; Switch size 1, requested type "simple"
  2609                           ; Number of cases is 1, Range of values is 0 to 0
  2610                           ; switch strategies available:
  2611                           ; Name         Instructions Cycles
  2612                           ; simple_byte            4     3 (average)
  2613                           ;	Chosen strategy is simple_byte
  2614  000E42  500B               	movf	(??_atoi+1)^0,w,c
  2615  000E44  0A00               	xorlw	0	; case 0
  2616  000E46  B4D8               	btfsc	status,2,c
  2617  000E48  EF28  F007         	goto	l2260
  2618  000E4C  EF4E  F007         	goto	l1818
  2619  000E50                     l2260:
  2620                           
  2621                           ; Switch size 1, requested type "simple"
  2622                           ; Number of cases is 2, Range of values is 43 to 45
  2623                           ; switch strategies available:
  2624                           ; Name         Instructions Cycles
  2625                           ; simple_byte            7     4 (average)
  2626                           ;	Chosen strategy is simple_byte
  2627  000E50  500A               	movf	??_atoi^0,w,c
  2628  000E52  0A2B               	xorlw	43	; case 43
  2629  000E54  B4D8               	btfsc	status,2,c
  2630  000E56  EF15  F007         	goto	l1810
  2631  000E5A  0A06               	xorlw	6	; case 45
  2632  000E5C  B4D8               	btfsc	status,2,c
  2633  000E5E  EF11  F007         	goto	l1808
  2634  000E62  EF4E  F007         	goto	l1818
  2635  000E66                     l1814:
  2636  000E66  C015  F001         	movff	atoi@n,___wmul@multiplier
  2637  000E6A  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  2638  000E6E  0E00               	movlw	0
  2639  000E70  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2640  000E72  0E0A               	movlw	10
  2641  000E74  6E03               	movwf	___wmul@multiplicand^0,c
  2642  000E76  ECB8  F00D         	call	___wmul	;wreg free
  2643  000E7A  C008  FFF6         	movff	atoi@s,tblptrl
  2644  000E7E  C009  FFF7         	movff	atoi@s+1,tblptrh
  2645  000E82                     	if	0	;tblptru may be non-zero
  2646  000E82                     	endif
  2647  000E82                     	if	0	;tblptru may be non-zero
  2648  000E82                     	endif
  2649  000E82  0008               	tblrd		*
  2650  000E84  50F5               	movf	tablat,w,c
  2651  000E86  5E01               	subwf	?___wmul^0,f,c
  2652  000E88  0E00               	movlw	0
  2653  000E8A  5A02               	subwfb	(?___wmul+1)^0,f,c
  2654  000E8C  0E30               	movlw	48
  2655  000E8E  2401               	addwf	?___wmul^0,w,c
  2656  000E90  6E15               	movwf	atoi@n^0,c
  2657  000E92  0E00               	movlw	0
  2658  000E94  2002               	addwfc	(?___wmul+1)^0,w,c
  2659  000E96  6E16               	movwf	(atoi@n+1)^0,c
  2660  000E98  EF15  F007         	goto	l1810
  2661  000E9C                     l1818:
  2662  000E9C  0ED0               	movlw	208
  2663  000E9E  6E0A               	movwf	??_atoi^0,c
  2664  000EA0  0EFF               	movlw	255
  2665  000EA2  6E0B               	movwf	(??_atoi+1)^0,c
  2666  000EA4  C008  FFF6         	movff	atoi@s,tblptrl
  2667  000EA8  C009  FFF7         	movff	atoi@s+1,tblptrh
  2668  000EAC                     	if	0	;tblptru may be non-zero
  2669  000EAC                     	endif
  2670  000EAC                     	if	0	;tblptru may be non-zero
  2671  000EAC                     	endif
  2672  000EAC  0008               	tblrd		*
  2673  000EAE  50F5               	movf	tablat,w,c
  2674  000EB0  6E0C               	movwf	(??_atoi+2)^0,c
  2675  000EB2  6A0D               	clrf	(??_atoi+3)^0,c
  2676  000EB4  500A               	movf	??_atoi^0,w,c
  2677  000EB6  260C               	addwf	(??_atoi+2)^0,f,c
  2678  000EB8  500B               	movf	(??_atoi+1)^0,w,c
  2679  000EBA  220D               	addwfc	(??_atoi+3)^0,f,c
  2680  000EBC  500D               	movf	(??_atoi+3)^0,w,c
  2681  000EBE  E10A               	bnz	u1130
  2682  000EC0  0E0A               	movlw	10
  2683  000EC2  5C0C               	subwf	(??_atoi+2)^0,w,c
  2684  000EC4  A0D8               	btfss	status,0,c
  2685  000EC6  EF67  F007         	goto	u1131
  2686  000ECA  EF6A  F007         	goto	u1130
  2687  000ECE                     u1131:
  2688  000ECE  0E01               	movlw	1
  2689  000ED0  EF6B  F007         	goto	u1140
  2690  000ED4                     u1130:
  2691  000ED4  0E00               	movlw	0
  2692  000ED6                     u1140:
  2693  000ED6  6E12               	movwf	_atoi$1058^0,c
  2694  000ED8  6A13               	clrf	(_atoi$1058+1)^0,c
  2695  000EDA  5012               	movf	_atoi$1058^0,w,c
  2696  000EDC  1013               	iorwf	(_atoi$1058+1)^0,w,c
  2697  000EDE  A4D8               	btfss	status,2,c
  2698  000EE0  EF74  F007         	goto	u1151
  2699  000EE4  EF76  F007         	goto	u1150
  2700  000EE8                     u1151:
  2701  000EE8  EF33  F007         	goto	l1814
  2702  000EEC                     u1150:
  2703  000EEC  500E               	movf	atoi@neg^0,w,c
  2704  000EEE  100F               	iorwf	(atoi@neg+1)^0,w,c
  2705  000EF0  A4D8               	btfss	status,2,c
  2706  000EF2  EF7D  F007         	goto	u1161
  2707  000EF6  EF7F  F007         	goto	u1160
  2708  000EFA                     u1161:
  2709  000EFA  EF8D  F007         	goto	l991
  2710  000EFE                     u1160:
  2711  000EFE  C015  F00A         	movff	atoi@n,??_atoi
  2712  000F02  C016  F00B         	movff	atoi@n+1,??_atoi+1
  2713  000F06  1E0A               	comf	??_atoi^0,f,c
  2714  000F08  1E0B               	comf	(??_atoi+1)^0,f,c
  2715  000F0A  4A0A               	infsnz	??_atoi^0,f,c
  2716  000F0C  2A0B               	incf	(??_atoi+1)^0,f,c
  2717  000F0E  C00A  F008         	movff	??_atoi,?_atoi
  2718  000F12  C00B  F009         	movff	??_atoi+1,?_atoi+1
  2719  000F16  EF91  F007         	goto	l994
  2720  000F1A                     l991:
  2721  000F1A  C015  F008         	movff	atoi@n,?_atoi
  2722  000F1E  C016  F009         	movff	atoi@n+1,?_atoi+1
  2723  000F22                     l994:
  2724  000F22  0012               	return		;funcret
  2725  000F24                     __end_of_atoi:
  2726                           	callstack 0
  2727                           
  2728 ;; *************** function _isspace *****************
  2729 ;; Defined at:
  2730 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;  c               2    0[COMRAM] int 
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;		None
  2735 ;; Return value:  Size  Location     Type
  2736 ;;                  2    0[COMRAM] int 
  2737 ;; Registers used:
  2738 ;;		wreg, status,2, status,0
  2739 ;; Tracked objects:
  2740 ;;		On entry : 0/0
  2741 ;;		On exit  : 0/0
  2742 ;;		Unchanged: 0/0
  2743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2744 ;;      Params:         2       0       0       0       0       0       0       0       0
  2745 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2746 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2747 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2748 ;;Total ram usage:        7 bytes
  2749 ;; Hardware stack levels used: 1
  2750 ;; This function calls:
  2751 ;;		Nothing
  2752 ;; This function is called by:
  2753 ;;		_atoi
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756                           
  2757                           	psect	text13
  2758  001A46                     __ptext13:
  2759                           	callstack 0
  2760  001A46                     _isspace:
  2761                           	callstack 26
  2762  001A46  0E01               	movlw	1
  2763  001A48  6E07               	movwf	_isspace$1074^0,c
  2764  001A4A  0E20               	movlw	32
  2765  001A4C  1801               	xorwf	isspace@c^0,w,c
  2766  001A4E  1002               	iorwf	(isspace@c+1)^0,w,c
  2767  001A50  B4D8               	btfsc	status,2,c
  2768  001A52  EF2D  F00D         	goto	u1011
  2769  001A56  EF2F  F00D         	goto	u1010
  2770  001A5A                     u1011:
  2771  001A5A  EF48  F00D         	goto	l1750
  2772  001A5E                     u1010:
  2773  001A5E  0EF7               	movlw	247
  2774  001A60  6E03               	movwf	??_isspace^0,c
  2775  001A62  0EFF               	movlw	255
  2776  001A64  6E04               	movwf	(??_isspace+1)^0,c
  2777  001A66  C001  F005         	movff	isspace@c,??_isspace+2
  2778  001A6A  C002  F006         	movff	isspace@c+1,??_isspace+3
  2779  001A6E  5003               	movf	??_isspace^0,w,c
  2780  001A70  2605               	addwf	(??_isspace+2)^0,f,c
  2781  001A72  5004               	movf	(??_isspace+1)^0,w,c
  2782  001A74  2206               	addwfc	(??_isspace+3)^0,f,c
  2783  001A76  5006               	movf	(??_isspace+3)^0,w,c
  2784  001A78  E109               	bnz	u1020
  2785  001A7A  0E05               	movlw	5
  2786  001A7C  5C05               	subwf	(??_isspace+2)^0,w,c
  2787  001A7E  A0D8               	btfss	status,0,c
  2788  001A80  EF44  F00D         	goto	u1021
  2789  001A84  EF46  F00D         	goto	u1020
  2790  001A88                     u1021:
  2791  001A88  EF48  F00D         	goto	l1750
  2792  001A8C                     u1020:
  2793  001A8C  0E00               	movlw	0
  2794  001A8E  6E07               	movwf	_isspace$1074^0,c
  2795  001A90                     l1750:
  2796  001A90  C007  F001         	movff	_isspace$1074,?_isspace
  2797  001A94  6A02               	clrf	(?_isspace+1)^0,c
  2798  001A96  0012               	return		;funcret
  2799  001A98                     __end_of_isspace:
  2800                           	callstack 0
  2801                           
  2802 ;; *************** function _isdigit *****************
  2803 ;; Defined at:
  2804 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;  c               2    0[COMRAM] int 
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;		None
  2809 ;; Return value:  Size  Location     Type
  2810 ;;                  2    0[COMRAM] int 
  2811 ;; Registers used:
  2812 ;;		wreg, status,2, status,0
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2818 ;;      Params:         2       0       0       0       0       0       0       0       0
  2819 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2820 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2821 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2822 ;;Total ram usage:        6 bytes
  2823 ;; Hardware stack levels used: 1
  2824 ;; This function calls:
  2825 ;;		Nothing
  2826 ;; This function is called by:
  2827 ;;		_vfpfcnvrt
  2828 ;;		_atoi
  2829 ;; This function uses a non-reentrant model
  2830 ;;
  2831                           
  2832                           	psect	text14
  2833  001ADC                     __ptext14:
  2834                           	callstack 0
  2835  001ADC                     _isdigit:
  2836                           	callstack 27
  2837  001ADC  0ED0               	movlw	208
  2838  001ADE  6E03               	movwf	??_isdigit^0,c
  2839  001AE0  0EFF               	movlw	255
  2840  001AE2  6E04               	movwf	(??_isdigit+1)^0,c
  2841  001AE4  C001  F005         	movff	isdigit@c,??_isdigit+2
  2842  001AE8  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  2843  001AEC  5003               	movf	??_isdigit^0,w,c
  2844  001AEE  2605               	addwf	(??_isdigit+2)^0,f,c
  2845  001AF0  5004               	movf	(??_isdigit+1)^0,w,c
  2846  001AF2  2206               	addwfc	(??_isdigit+3)^0,f,c
  2847  001AF4  5006               	movf	(??_isdigit+3)^0,w,c
  2848  001AF6  E10A               	bnz	u990
  2849  001AF8  0E0A               	movlw	10
  2850  001AFA  5C05               	subwf	(??_isdigit+2)^0,w,c
  2851  001AFC  A0D8               	btfss	status,0,c
  2852  001AFE  EF83  F00D         	goto	u991
  2853  001B02  EF86  F00D         	goto	u990
  2854  001B06                     u991:
  2855  001B06  0E01               	movlw	1
  2856  001B08  EF87  F00D         	goto	u1000
  2857  001B0C                     u990:
  2858  001B0C  0E00               	movlw	0
  2859  001B0E                     u1000:
  2860  001B0E  6E01               	movwf	?_isdigit^0,c
  2861  001B10  6A02               	clrf	(?_isdigit+1)^0,c
  2862  001B12  0012               	return		;funcret
  2863  001B14                     __end_of_isdigit:
  2864                           	callstack 0
  2865                           
  2866 ;; *************** function ___wmul *****************
  2867 ;; Defined at:
  2868 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;  multiplier      2    0[COMRAM] unsigned int 
  2871 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;  product         2    4[COMRAM] unsigned int 
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  2    0[COMRAM] unsigned int 
  2876 ;; Registers used:
  2877 ;;		wreg, status,2, status,0, prodl, prodh
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2883 ;;      Params:         4       0       0       0       0       0       0       0       0
  2884 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2885 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2886 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2887 ;;Total ram usage:        6 bytes
  2888 ;; Hardware stack levels used: 1
  2889 ;; This function calls:
  2890 ;;		Nothing
  2891 ;; This function is called by:
  2892 ;;		_atoi
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           	psect	text15
  2897  001B70                     __ptext15:
  2898                           	callstack 0
  2899  001B70                     ___wmul:
  2900                           	callstack 26
  2901  001B70  5001               	movf	___wmul@multiplier^0,w,c
  2902  001B72  0203               	mulwf	___wmul@multiplicand^0,c
  2903  001B74  CFF3 F005          	movff	prodl,___wmul@product
  2904  001B78  CFF4 F006          	movff	prodh,___wmul@product+1
  2905  001B7C  5001               	movf	___wmul@multiplier^0,w,c
  2906  001B7E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2907  001B80  50F3               	movf	243,w,c
  2908  001B82  2606               	addwf	(___wmul@product+1)^0,f,c
  2909  001B84  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2910  001B86  0203               	mulwf	___wmul@multiplicand^0,c
  2911  001B88  50F3               	movf	243,w,c
  2912  001B8A  2606               	addwf	(___wmul@product+1)^0,f,c
  2913  001B8C  C005  F001         	movff	___wmul@product,?___wmul
  2914  001B90  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2915  001B94  0012               	return		;funcret
  2916  001B96                     __end_of___wmul:
  2917                           	callstack 0
  2918                           
  2919 ;; *************** function _Serial_begin *****************
  2920 ;; Defined at:
  2921 ;;		line 30 in file "USART.c"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;  baudios         4   13[COMRAM] unsigned long 
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;  n               2   17[COMRAM] unsigned short 
  2926 ;; Return value:  Size  Location     Type
  2927 ;;                  1    wreg      void 
  2928 ;; Registers used:
  2929 ;;		wreg, status,2, status,0, cstack
  2930 ;; Tracked objects:
  2931 ;;		On entry : 0/0
  2932 ;;		On exit  : 0/0
  2933 ;;		Unchanged: 0/0
  2934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2935 ;;      Params:         4       0       0       0       0       0       0       0       0
  2936 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2937 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2938 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2939 ;;Total ram usage:        6 bytes
  2940 ;; Hardware stack levels used: 1
  2941 ;; Hardware stack levels required when called: 1
  2942 ;; This function calls:
  2943 ;;		___lldiv
  2944 ;; This function is called by:
  2945 ;;		_main
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949                           	psect	text16
  2950  0019E6                     __ptext16:
  2951                           	callstack 0
  2952  0019E6                     _Serial_begin:
  2953                           	callstack 29
  2954  0019E6                     
  2955                           ;USART.c: 34:     TRISCbits.RC6 = 0;
  2956  0019E6  9C94               	bcf	148,6,c	;volatile
  2957  0019E8                     
  2958                           ;USART.c: 35:     TRISCbits.RC7 = 1;
  2959  0019E8  8E94               	bsf	148,7,c	;volatile
  2960                           
  2961                           ;USART.c: 37:     TXSTA = 0b00100100;
  2962  0019EA  0E24               	movlw	36
  2963  0019EC  6EAC               	movwf	172,c	;volatile
  2964                           
  2965                           ;USART.c: 38:     RCSTA = 0b10010000;
  2966  0019EE  0E90               	movlw	144
  2967  0019F0  6EAB               	movwf	171,c	;volatile
  2968                           
  2969                           ;USART.c: 39:     BAUDCON = 0b00001000;
  2970  0019F2  0E08               	movlw	8
  2971  0019F4  6EB8               	movwf	184,c	;volatile
  2972  0019F6                     
  2973                           ;USART.c: 41:     n = (uint16_t)( ((8000000UL / baudios) / 4) - 1 );
  2974  0019F6  0E00               	movlw	0
  2975  0019F8  6E01               	movwf	___lldiv@dividend^0,c
  2976  0019FA  0E12               	movlw	18
  2977  0019FC  6E02               	movwf	(___lldiv@dividend+1)^0,c
  2978  0019FE  0E7A               	movlw	122
  2979  001A00  6E03               	movwf	(___lldiv@dividend+2)^0,c
  2980  001A02  0E00               	movlw	0
  2981  001A04  6E04               	movwf	(___lldiv@dividend+3)^0,c
  2982  001A06  C00E  F005         	movff	Serial_begin@baudios,___lldiv@divisor
  2983  001A0A  C00F  F006         	movff	Serial_begin@baudios+1,___lldiv@divisor+1
  2984  001A0E  C010  F007         	movff	Serial_begin@baudios+2,___lldiv@divisor+2
  2985  001A12  C011  F008         	movff	Serial_begin@baudios+3,___lldiv@divisor+3
  2986  001A16  ECE7  F00B         	call	___lldiv	;wreg free
  2987  001A1A  0E03               	movlw	3
  2988  001A1C  EF15  F00D         	goto	u1540
  2989  001A20                     u1545:
  2990  001A20  90D8               	bcf	status,0,c
  2991  001A22  3204               	rrcf	(?___lldiv+3)^0,f,c
  2992  001A24  3203               	rrcf	(?___lldiv+2)^0,f,c
  2993  001A26  3202               	rrcf	(?___lldiv+1)^0,f,c
  2994  001A28  3201               	rrcf	?___lldiv^0,f,c
  2995  001A2A                     u1540:
  2996  001A2A  2EE8               	decfsz	wreg,f,c
  2997  001A2C  EF10  F00D         	goto	u1545
  2998  001A30  0EFF               	movlw	255
  2999  001A32  2401               	addwf	?___lldiv^0,w,c
  3000  001A34  6E12               	movwf	Serial_begin@n^0,c
  3001  001A36  0EFF               	movlw	255
  3002  001A38  2002               	addwfc	(?___lldiv+1)^0,w,c
  3003  001A3A  6E13               	movwf	(Serial_begin@n+1)^0,c
  3004  001A3C                     
  3005                           ;USART.c: 43:     SPBRG = n;
  3006  001A3C  C012  FFAF         	movff	Serial_begin@n,4015	;volatile
  3007  001A40                     
  3008                           ;USART.c: 44:     SPBRGH = (n >> 8);
  3009  001A40  5013               	movf	(Serial_begin@n+1)^0,w,c
  3010  001A42  6EB0               	movwf	176,c	;volatile
  3011  001A44  0012               	return		;funcret
  3012  001A46                     __end_of_Serial_begin:
  3013                           	callstack 0
  3014                           
  3015 ;; *************** function ___lldiv *****************
  3016 ;; Defined at:
  3017 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
  3018 ;; Parameters:    Size  Location     Type
  3019 ;;  dividend        4    0[COMRAM] unsigned long 
  3020 ;;  divisor         4    4[COMRAM] unsigned long 
  3021 ;; Auto vars:     Size  Location     Type
  3022 ;;  quotient        4    8[COMRAM] unsigned long 
  3023 ;;  counter         1   12[COMRAM] unsigned char 
  3024 ;; Return value:  Size  Location     Type
  3025 ;;                  4    0[COMRAM] unsigned long 
  3026 ;; Registers used:
  3027 ;;		wreg, status,2, status,0
  3028 ;; Tracked objects:
  3029 ;;		On entry : 0/0
  3030 ;;		On exit  : 0/0
  3031 ;;		Unchanged: 0/0
  3032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3033 ;;      Params:         8       0       0       0       0       0       0       0       0
  3034 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3035 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3036 ;;      Totals:        13       0       0       0       0       0       0       0       0
  3037 ;;Total ram usage:       13 bytes
  3038 ;; Hardware stack levels used: 1
  3039 ;; This function calls:
  3040 ;;		Nothing
  3041 ;; This function is called by:
  3042 ;;		_Serial_begin
  3043 ;; This function uses a non-reentrant model
  3044 ;;
  3045                           
  3046                           	psect	text17
  3047  0017CE                     __ptext17:
  3048                           	callstack 0
  3049  0017CE                     ___lldiv:
  3050                           	callstack 29
  3051  0017CE  0E00               	movlw	0
  3052  0017D0  6E09               	movwf	___lldiv@quotient^0,c
  3053  0017D2  0E00               	movlw	0
  3054  0017D4  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  3055  0017D6  0E00               	movlw	0
  3056  0017D8  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  3057  0017DA  0E00               	movlw	0
  3058  0017DC  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  3059  0017DE  5005               	movf	___lldiv@divisor^0,w,c
  3060  0017E0  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  3061  0017E2  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  3062  0017E4  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  3063  0017E6  B4D8               	btfsc	status,2,c
  3064  0017E8  EFF8  F00B         	goto	u1381
  3065  0017EC  EFFA  F00B         	goto	u1380
  3066  0017F0                     u1381:
  3067  0017F0  EF30  F00C         	goto	l229
  3068  0017F4                     u1380:
  3069  0017F4  0E01               	movlw	1
  3070  0017F6  6E0D               	movwf	___lldiv@counter^0,c
  3071  0017F8  EF04  F00C         	goto	l1966
  3072  0017FC                     l1964:
  3073  0017FC  90D8               	bcf	status,0,c
  3074  0017FE  3605               	rlcf	___lldiv@divisor^0,f,c
  3075  001800  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  3076  001802  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  3077  001804  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  3078  001806  2A0D               	incf	___lldiv@counter^0,f,c
  3079  001808                     l1966:
  3080  001808  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  3081  00180A  EF09  F00C         	goto	u1391
  3082  00180E  EF0B  F00C         	goto	u1390
  3083  001812                     u1391:
  3084  001812  EFFE  F00B         	goto	l1964
  3085  001816                     u1390:
  3086  001816                     l1968:
  3087  001816  90D8               	bcf	status,0,c
  3088  001818  3609               	rlcf	___lldiv@quotient^0,f,c
  3089  00181A  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  3090  00181C  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  3091  00181E  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  3092  001820  5005               	movf	___lldiv@divisor^0,w,c
  3093  001822  5C01               	subwf	___lldiv@dividend^0,w,c
  3094  001824  5006               	movf	(___lldiv@divisor+1)^0,w,c
  3095  001826  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  3096  001828  5007               	movf	(___lldiv@divisor+2)^0,w,c
  3097  00182A  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  3098  00182C  5008               	movf	(___lldiv@divisor+3)^0,w,c
  3099  00182E  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  3100  001830  A0D8               	btfss	status,0,c
  3101  001832  EF1D  F00C         	goto	u1401
  3102  001836  EF1F  F00C         	goto	u1400
  3103  00183A                     u1401:
  3104  00183A  EF28  F00C         	goto	l1976
  3105  00183E                     u1400:
  3106  00183E  5005               	movf	___lldiv@divisor^0,w,c
  3107  001840  5E01               	subwf	___lldiv@dividend^0,f,c
  3108  001842  5006               	movf	(___lldiv@divisor+1)^0,w,c
  3109  001844  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  3110  001846  5007               	movf	(___lldiv@divisor+2)^0,w,c
  3111  001848  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  3112  00184A  5008               	movf	(___lldiv@divisor+3)^0,w,c
  3113  00184C  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  3114  00184E  8009               	bsf	___lldiv@quotient^0,0,c
  3115  001850                     l1976:
  3116  001850  90D8               	bcf	status,0,c
  3117  001852  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  3118  001854  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  3119  001856  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  3120  001858  3205               	rrcf	___lldiv@divisor^0,f,c
  3121  00185A  2E0D               	decfsz	___lldiv@counter^0,f,c
  3122  00185C  EF0B  F00C         	goto	l1968
  3123  001860                     l229:
  3124  001860  C009  F001         	movff	___lldiv@quotient,?___lldiv
  3125  001864  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  3126  001868  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  3127  00186C  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  3128  001870  0012               	return		;funcret
  3129  001872                     __end_of___lldiv:
  3130                           	callstack 0
  3131                           
  3132 ;; *************** function _I2C_Init *****************
  3133 ;; Defined at:
  3134 ;;		line 7 in file "I2C.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;		None
  3137 ;; Auto vars:     Size  Location     Type
  3138 ;;		None
  3139 ;; Return value:  Size  Location     Type
  3140 ;;                  1    wreg      void 
  3141 ;; Registers used:
  3142 ;;		wreg, status,2, status,0
  3143 ;; Tracked objects:
  3144 ;;		On entry : 0/0
  3145 ;;		On exit  : 0/0
  3146 ;;		Unchanged: 0/0
  3147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3148 ;;      Params:         0       0       0       0       0       0       0       0       0
  3149 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3150 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3151 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3152 ;;Total ram usage:        0 bytes
  3153 ;; Hardware stack levels used: 1
  3154 ;; This function calls:
  3155 ;;		Nothing
  3156 ;; This function is called by:
  3157 ;;		_main
  3158 ;; This function uses a non-reentrant model
  3159 ;;
  3160                           
  3161                           	psect	text18
  3162  001BE8                     __ptext18:
  3163                           	callstack 0
  3164  001BE8                     _I2C_Init:
  3165                           	callstack 30
  3166  001BE8                     
  3167                           ;I2C.c: 9:     TRISB |= (1<<0) | (1<<1);
  3168  001BE8  0E03               	movlw	3
  3169  001BEA  1293               	iorwf	147,f,c	;volatile
  3170  001BEC                     
  3171                           ;I2C.c: 10:     SSPSTATbits.SMP = 1 ;
  3172  001BEC  8EC7               	bsf	199,7,c	;volatile
  3173  001BEE                     
  3174                           ;I2C.c: 11:     SSPCON1bits.SSPEN = 1;
  3175  001BEE  8AC6               	bsf	198,5,c	;volatile
  3176  001BF0                     
  3177                           ;I2C.c: 12:     SSPCON1bits.SSPM = 0b1000;
  3178  001BF0  50C6               	movf	198,w,c	;volatile
  3179  001BF2  0BF0               	andlw	-16
  3180  001BF4  0908               	iorlw	8
  3181  001BF6  6EC6               	movwf	198,c	;volatile
  3182  001BF8                     
  3183                           ;I2C.c: 13:     SSPADD = (uint8_t) ((8000000UL / (4UL*100000UL))-1);
  3184  001BF8  0E13               	movlw	19
  3185  001BFA  6EC8               	movwf	200,c	;volatile
  3186  001BFC  0012               	return		;funcret
  3187  001BFE                     __end_of_I2C_Init:
  3188                           	callstack 0
  3189                           
  3190 ;; *************** function _DS1307_Write_Hours_24 *****************
  3191 ;; Defined at:
  3192 ;;		line 12 in file "RTC.c"
  3193 ;; Parameters:    Size  Location     Type
  3194 ;;  horas           1    wreg     unsigned char 
  3195 ;;  minutos         1    8[COMRAM] unsigned char 
  3196 ;;  segundos        1    9[COMRAM] unsigned char 
  3197 ;; Auto vars:     Size  Location     Type
  3198 ;;  horas           1   15[COMRAM] unsigned char 
  3199 ;;  Hor_ds          1   14[COMRAM] unsigned char 
  3200 ;;  Min_ds          1   13[COMRAM] unsigned char 
  3201 ;;  Seg_ds          1   12[COMRAM] unsigned char 
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  1    wreg      void 
  3204 ;; Registers used:
  3205 ;;		wreg, status,2, status,0, cstack
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3211 ;;      Params:         2       0       0       0       0       0       0       0       0
  3212 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3213 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3214 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3215 ;;Total ram usage:        8 bytes
  3216 ;; Hardware stack levels used: 1
  3217 ;; Hardware stack levels required when called: 1
  3218 ;; This function calls:
  3219 ;;		_I2C_Stop
  3220 ;;		_I2C_Write_Slave
  3221 ;;		___awdiv
  3222 ;;		___awmod
  3223 ;; This function is called by:
  3224 ;;		_main
  3225 ;; This function uses a non-reentrant model
  3226 ;;
  3227                           
  3228                           	psect	text19
  3229  001662                     __ptext19:
  3230                           	callstack 0
  3231  001662                     _DS1307_Write_Hours_24:
  3232                           	callstack 29
  3233                           
  3234                           ;incstack = 0
  3235                           ;DS1307_Write_Hours_24@horas stored from wreg
  3236  001662  6E10               	movwf	DS1307_Write_Hours_24@horas^0,c
  3237  001664                     
  3238                           ;RTC.c: 15:     Seg_ds = ((segundos/10)<<4) | (segundos%10);
  3239  001664  C00A  F001         	movff	DS1307_Write_Hours_24@segundos,___awmod@dividend
  3240  001668  6A02               	clrf	(___awmod@dividend+1)^0,c
  3241  00166A  0E00               	movlw	0
  3242  00166C  6E04               	movwf	(___awmod@divisor+1)^0,c
  3243  00166E  0E0A               	movlw	10
  3244  001670  6E03               	movwf	___awmod@divisor^0,c
  3245  001672  EC8F  F00B         	call	___awmod	;wreg free
  3246  001676  C001  F00B         	movff	?___awmod,??_DS1307_Write_Hours_24
  3247  00167A  C002  F00C         	movff	?___awmod+1,??_DS1307_Write_Hours_24+1
  3248  00167E  C00A  F001         	movff	DS1307_Write_Hours_24@segundos,___awdiv@dividend
  3249  001682  6A02               	clrf	(___awdiv@dividend+1)^0,c
  3250  001684  0E00               	movlw	0
  3251  001686  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3252  001688  0E0A               	movlw	10
  3253  00168A  6E03               	movwf	___awdiv@divisor^0,c
  3254  00168C  ECCF  F00A         	call	___awdiv	;wreg free
  3255  001690  3801               	swapf	?___awdiv^0,w,c
  3256  001692  0BF0               	andlw	240
  3257  001694  100B               	iorwf	??_DS1307_Write_Hours_24^0,w,c
  3258  001696  6E0D               	movwf	DS1307_Write_Hours_24@Seg_ds^0,c
  3259  001698                     
  3260                           ;RTC.c: 16:     Min_ds = ((minutos/10)<<4) | (minutos%10);
  3261  001698  C009  F001         	movff	DS1307_Write_Hours_24@minutos,___awmod@dividend
  3262  00169C  6A02               	clrf	(___awmod@dividend+1)^0,c
  3263  00169E  0E00               	movlw	0
  3264  0016A0  6E04               	movwf	(___awmod@divisor+1)^0,c
  3265  0016A2  0E0A               	movlw	10
  3266  0016A4  6E03               	movwf	___awmod@divisor^0,c
  3267  0016A6  EC8F  F00B         	call	___awmod	;wreg free
  3268  0016AA  C001  F00B         	movff	?___awmod,??_DS1307_Write_Hours_24
  3269  0016AE  C002  F00C         	movff	?___awmod+1,??_DS1307_Write_Hours_24+1
  3270  0016B2  C009  F001         	movff	DS1307_Write_Hours_24@minutos,___awdiv@dividend
  3271  0016B6  6A02               	clrf	(___awdiv@dividend+1)^0,c
  3272  0016B8  0E00               	movlw	0
  3273  0016BA  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3274  0016BC  0E0A               	movlw	10
  3275  0016BE  6E03               	movwf	___awdiv@divisor^0,c
  3276  0016C0  ECCF  F00A         	call	___awdiv	;wreg free
  3277  0016C4  3801               	swapf	?___awdiv^0,w,c
  3278  0016C6  0BF0               	andlw	240
  3279  0016C8  100B               	iorwf	??_DS1307_Write_Hours_24^0,w,c
  3280  0016CA  6E0E               	movwf	DS1307_Write_Hours_24@Min_ds^0,c
  3281  0016CC                     
  3282                           ;RTC.c: 17:     Hor_ds = ((horas/10)<<4) | (horas%10);
  3283  0016CC  C010  F001         	movff	DS1307_Write_Hours_24@horas,___awmod@dividend
  3284  0016D0  6A02               	clrf	(___awmod@dividend+1)^0,c
  3285  0016D2  0E00               	movlw	0
  3286  0016D4  6E04               	movwf	(___awmod@divisor+1)^0,c
  3287  0016D6  0E0A               	movlw	10
  3288  0016D8  6E03               	movwf	___awmod@divisor^0,c
  3289  0016DA  EC8F  F00B         	call	___awmod	;wreg free
  3290  0016DE  C001  F00B         	movff	?___awmod,??_DS1307_Write_Hours_24
  3291  0016E2  C002  F00C         	movff	?___awmod+1,??_DS1307_Write_Hours_24+1
  3292  0016E6  C010  F001         	movff	DS1307_Write_Hours_24@horas,___awdiv@dividend
  3293  0016EA  6A02               	clrf	(___awdiv@dividend+1)^0,c
  3294  0016EC  0E00               	movlw	0
  3295  0016EE  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3296  0016F0  0E0A               	movlw	10
  3297  0016F2  6E03               	movwf	___awdiv@divisor^0,c
  3298  0016F4  ECCF  F00A         	call	___awdiv	;wreg free
  3299  0016F8  3801               	swapf	?___awdiv^0,w,c
  3300  0016FA  0BF0               	andlw	240
  3301  0016FC  100B               	iorwf	??_DS1307_Write_Hours_24^0,w,c
  3302  0016FE  6E0F               	movwf	DS1307_Write_Hours_24@Hor_ds^0,c
  3303  001700                     
  3304                           ;RTC.c: 19:     I2C_Write_Slave(0X00);
  3305  001700  0E00               	movlw	0
  3306  001702  ECCB  F00D         	call	_I2C_Write_Slave
  3307  001706                     
  3308                           ;RTC.c: 20:     I2C_Write_Slave(Seg_ds);
  3309  001706  500D               	movf	DS1307_Write_Hours_24@Seg_ds^0,w,c
  3310  001708  ECCB  F00D         	call	_I2C_Write_Slave
  3311  00170C                     
  3312                           ;RTC.c: 21:     I2C_Write_Slave(Min_ds);
  3313  00170C  500E               	movf	DS1307_Write_Hours_24@Min_ds^0,w,c
  3314  00170E  ECCB  F00D         	call	_I2C_Write_Slave
  3315  001712                     
  3316                           ;RTC.c: 22:     I2C_Write_Slave(Hor_ds);
  3317  001712  500F               	movf	DS1307_Write_Hours_24@Hor_ds^0,w,c
  3318  001714  ECCB  F00D         	call	_I2C_Write_Slave
  3319  001718                     
  3320                           ;RTC.c: 23:     I2C_Stop();
  3321  001718  ECFF  F00D         	call	_I2C_Stop	;wreg free
  3322  00171C  0012               	return		;funcret
  3323  00171E                     __end_of_DS1307_Write_Hours_24:
  3324                           	callstack 0
  3325                           
  3326 ;; *************** function _DS1307_Write_Date *****************
  3327 ;; Defined at:
  3328 ;;		line 27 in file "RTC.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;  dia_mes         1    wreg     unsigned char 
  3331 ;;  mes             1    8[COMRAM] unsigned char 
  3332 ;;  year            1    9[COMRAM] unsigned char 
  3333 ;;  dia_semana      1   10[COMRAM] unsigned char 
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;  dia_mes         1   13[COMRAM] unsigned char 
  3336 ;; Return value:  Size  Location     Type
  3337 ;;                  1    wreg      void 
  3338 ;; Registers used:
  3339 ;;		wreg, status,2, status,0, cstack
  3340 ;; Tracked objects:
  3341 ;;		On entry : 0/0
  3342 ;;		On exit  : 0/0
  3343 ;;		Unchanged: 0/0
  3344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3345 ;;      Params:         3       0       0       0       0       0       0       0       0
  3346 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3347 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3348 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3349 ;;Total ram usage:        6 bytes
  3350 ;; Hardware stack levels used: 1
  3351 ;; Hardware stack levels required when called: 1
  3352 ;; This function calls:
  3353 ;;		_I2C_Start
  3354 ;;		_I2C_Stop
  3355 ;;		_I2C_Write_Slave
  3356 ;;		___awdiv
  3357 ;;		___awmod
  3358 ;; This function is called by:
  3359 ;;		_main
  3360 ;; This function uses a non-reentrant model
  3361 ;;
  3362                           
  3363                           	psect	text20
  3364  00104C                     __ptext20:
  3365                           	callstack 0
  3366  00104C                     _DS1307_Write_Date:
  3367                           	callstack 29
  3368                           
  3369                           ;incstack = 0
  3370                           ;DS1307_Write_Date@dia_mes stored from wreg
  3371  00104C  6E0E               	movwf	DS1307_Write_Date@dia_mes^0,c
  3372  00104E                     
  3373                           ;RTC.c: 30:     dia_mes = ((dia_mes/10)<<4) | (dia_mes%10);
  3374  00104E  C00E  F001         	movff	DS1307_Write_Date@dia_mes,___awmod@dividend
  3375  001052  6A02               	clrf	(___awmod@dividend+1)^0,c
  3376  001054  0E00               	movlw	0
  3377  001056  6E04               	movwf	(___awmod@divisor+1)^0,c
  3378  001058  0E0A               	movlw	10
  3379  00105A  6E03               	movwf	___awmod@divisor^0,c
  3380  00105C  EC8F  F00B         	call	___awmod	;wreg free
  3381  001060  C001  F00C         	movff	?___awmod,??_DS1307_Write_Date
  3382  001064  C002  F00D         	movff	?___awmod+1,??_DS1307_Write_Date+1
  3383  001068  C00E  F001         	movff	DS1307_Write_Date@dia_mes,___awdiv@dividend
  3384  00106C  6A02               	clrf	(___awdiv@dividend+1)^0,c
  3385  00106E  0E00               	movlw	0
  3386  001070  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3387  001072  0E0A               	movlw	10
  3388  001074  6E03               	movwf	___awdiv@divisor^0,c
  3389  001076  ECCF  F00A         	call	___awdiv	;wreg free
  3390  00107A  3801               	swapf	?___awdiv^0,w,c
  3391  00107C  0BF0               	andlw	240
  3392  00107E  100C               	iorwf	??_DS1307_Write_Date^0,w,c
  3393  001080  6E0E               	movwf	DS1307_Write_Date@dia_mes^0,c
  3394                           
  3395                           ;RTC.c: 31:     mes = ((mes/10)<<4) | (mes%10);
  3396  001082  C009  F001         	movff	DS1307_Write_Date@mes,___awmod@dividend
  3397  001086  6A02               	clrf	(___awmod@dividend+1)^0,c
  3398  001088  0E00               	movlw	0
  3399  00108A  6E04               	movwf	(___awmod@divisor+1)^0,c
  3400  00108C  0E0A               	movlw	10
  3401  00108E  6E03               	movwf	___awmod@divisor^0,c
  3402  001090  EC8F  F00B         	call	___awmod	;wreg free
  3403  001094  C001  F00C         	movff	?___awmod,??_DS1307_Write_Date
  3404  001098  C002  F00D         	movff	?___awmod+1,??_DS1307_Write_Date+1
  3405  00109C  C009  F001         	movff	DS1307_Write_Date@mes,___awdiv@dividend
  3406  0010A0  6A02               	clrf	(___awdiv@dividend+1)^0,c
  3407  0010A2  0E00               	movlw	0
  3408  0010A4  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3409  0010A6  0E0A               	movlw	10
  3410  0010A8  6E03               	movwf	___awdiv@divisor^0,c
  3411  0010AA  ECCF  F00A         	call	___awdiv	;wreg free
  3412  0010AE  3801               	swapf	?___awdiv^0,w,c
  3413  0010B0  0BF0               	andlw	240
  3414  0010B2  100C               	iorwf	??_DS1307_Write_Date^0,w,c
  3415  0010B4  6E09               	movwf	DS1307_Write_Date@mes^0,c
  3416                           
  3417                           ;RTC.c: 32:     year = ((year/10)<<4) | (year%10);
  3418  0010B6  C00A  F001         	movff	DS1307_Write_Date@year,___awmod@dividend
  3419  0010BA  6A02               	clrf	(___awmod@dividend+1)^0,c
  3420  0010BC  0E00               	movlw	0
  3421  0010BE  6E04               	movwf	(___awmod@divisor+1)^0,c
  3422  0010C0  0E0A               	movlw	10
  3423  0010C2  6E03               	movwf	___awmod@divisor^0,c
  3424  0010C4  EC8F  F00B         	call	___awmod	;wreg free
  3425  0010C8  C001  F00C         	movff	?___awmod,??_DS1307_Write_Date
  3426  0010CC  C002  F00D         	movff	?___awmod+1,??_DS1307_Write_Date+1
  3427  0010D0  C00A  F001         	movff	DS1307_Write_Date@year,___awdiv@dividend
  3428  0010D4  6A02               	clrf	(___awdiv@dividend+1)^0,c
  3429  0010D6  0E00               	movlw	0
  3430  0010D8  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3431  0010DA  0E0A               	movlw	10
  3432  0010DC  6E03               	movwf	___awdiv@divisor^0,c
  3433  0010DE  ECCF  F00A         	call	___awdiv	;wreg free
  3434  0010E2  3801               	swapf	?___awdiv^0,w,c
  3435  0010E4  0BF0               	andlw	240
  3436  0010E6  100C               	iorwf	??_DS1307_Write_Date^0,w,c
  3437  0010E8  6E0A               	movwf	DS1307_Write_Date@year^0,c
  3438                           
  3439                           ;RTC.c: 33:     dia_semana = ((dia_semana/10)<<4) | (dia_semana%10);
  3440  0010EA  C00B  F001         	movff	DS1307_Write_Date@dia_semana,___awmod@dividend
  3441  0010EE  6A02               	clrf	(___awmod@dividend+1)^0,c
  3442  0010F0  0E00               	movlw	0
  3443  0010F2  6E04               	movwf	(___awmod@divisor+1)^0,c
  3444  0010F4  0E0A               	movlw	10
  3445  0010F6  6E03               	movwf	___awmod@divisor^0,c
  3446  0010F8  EC8F  F00B         	call	___awmod	;wreg free
  3447  0010FC  C001  F00C         	movff	?___awmod,??_DS1307_Write_Date
  3448  001100  C002  F00D         	movff	?___awmod+1,??_DS1307_Write_Date+1
  3449  001104  C00B  F001         	movff	DS1307_Write_Date@dia_semana,___awdiv@dividend
  3450  001108  6A02               	clrf	(___awdiv@dividend+1)^0,c
  3451  00110A  0E00               	movlw	0
  3452  00110C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3453  00110E  0E0A               	movlw	10
  3454  001110  6E03               	movwf	___awdiv@divisor^0,c
  3455  001112  ECCF  F00A         	call	___awdiv	;wreg free
  3456  001116  3801               	swapf	?___awdiv^0,w,c
  3457  001118  0BF0               	andlw	240
  3458  00111A  100C               	iorwf	??_DS1307_Write_Date^0,w,c
  3459  00111C  6E0B               	movwf	DS1307_Write_Date@dia_semana^0,c
  3460  00111E                     
  3461                           ;RTC.c: 35:     I2C_Start();
  3462  00111E  EC11  F00E         	call	_I2C_Start	;wreg free
  3463  001122                     
  3464                           ;RTC.c: 36:     I2C_Write_Slave(0XD0);
  3465  001122  0ED0               	movlw	208
  3466  001124  ECCB  F00D         	call	_I2C_Write_Slave
  3467  001128                     
  3468                           ;RTC.c: 37:     I2C_Write_Slave(0x03);
  3469  001128  0E03               	movlw	3
  3470  00112A  ECCB  F00D         	call	_I2C_Write_Slave
  3471  00112E                     
  3472                           ;RTC.c: 38:     I2C_Write_Slave(dia_semana);
  3473  00112E  500B               	movf	DS1307_Write_Date@dia_semana^0,w,c
  3474  001130  ECCB  F00D         	call	_I2C_Write_Slave
  3475  001134                     
  3476                           ;RTC.c: 39:     I2C_Write_Slave(dia_mes);
  3477  001134  500E               	movf	DS1307_Write_Date@dia_mes^0,w,c
  3478  001136  ECCB  F00D         	call	_I2C_Write_Slave
  3479  00113A                     
  3480                           ;RTC.c: 40:     I2C_Write_Slave(mes);
  3481  00113A  5009               	movf	DS1307_Write_Date@mes^0,w,c
  3482  00113C  ECCB  F00D         	call	_I2C_Write_Slave
  3483  001140                     
  3484                           ;RTC.c: 41:     I2C_Write_Slave(year);
  3485  001140  500A               	movf	DS1307_Write_Date@year^0,w,c
  3486  001142  ECCB  F00D         	call	_I2C_Write_Slave
  3487  001146                     
  3488                           ;RTC.c: 43:     I2C_Stop();
  3489  001146  ECFF  F00D         	call	_I2C_Stop	;wreg free
  3490  00114A  0012               	return		;funcret
  3491  00114C                     __end_of_DS1307_Write_Date:
  3492                           	callstack 0
  3493                           
  3494 ;; *************** function ___awmod *****************
  3495 ;; Defined at:
  3496 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  3497 ;; Parameters:    Size  Location     Type
  3498 ;;  dividend        2    0[COMRAM] int 
  3499 ;;  divisor         2    2[COMRAM] int 
  3500 ;; Auto vars:     Size  Location     Type
  3501 ;;  sign            1    5[COMRAM] unsigned char 
  3502 ;;  counter         1    4[COMRAM] unsigned char 
  3503 ;; Return value:  Size  Location     Type
  3504 ;;                  2    0[COMRAM] int 
  3505 ;; Registers used:
  3506 ;;		wreg, status,2, status,0
  3507 ;; Tracked objects:
  3508 ;;		On entry : 0/0
  3509 ;;		On exit  : 0/0
  3510 ;;		Unchanged: 0/0
  3511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3512 ;;      Params:         4       0       0       0       0       0       0       0       0
  3513 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3514 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3515 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3516 ;;Total ram usage:        6 bytes
  3517 ;; Hardware stack levels used: 1
  3518 ;; This function calls:
  3519 ;;		Nothing
  3520 ;; This function is called by:
  3521 ;;		_DS1307_Write_Hours_24
  3522 ;;		_DS1307_Write_Date
  3523 ;; This function uses a non-reentrant model
  3524 ;;
  3525                           
  3526                           	psect	text21
  3527  00171E                     __ptext21:
  3528                           	callstack 0
  3529  00171E                     ___awmod:
  3530                           	callstack 29
  3531  00171E  0E00               	movlw	0
  3532  001720  6E06               	movwf	___awmod@sign^0,c
  3533  001722  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  3534  001724  EF98  F00B         	goto	u1470
  3535  001728  EF96  F00B         	goto	u1471
  3536  00172C                     u1471:
  3537  00172C  EF9E  F00B         	goto	l2032
  3538  001730                     u1470:
  3539  001730  6C01               	negf	___awmod@dividend^0,c
  3540  001732  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3541  001734  B0D8               	btfsc	status,0,c
  3542  001736  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3543  001738  0E01               	movlw	1
  3544  00173A  6E06               	movwf	___awmod@sign^0,c
  3545  00173C                     l2032:
  3546  00173C  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  3547  00173E  EFA5  F00B         	goto	u1480
  3548  001742  EFA3  F00B         	goto	u1481
  3549  001746                     u1481:
  3550  001746  EFA9  F00B         	goto	l2036
  3551  00174A                     u1480:
  3552  00174A  6C03               	negf	___awmod@divisor^0,c
  3553  00174C  1E04               	comf	(___awmod@divisor+1)^0,f,c
  3554  00174E  B0D8               	btfsc	status,0,c
  3555  001750  2A04               	incf	(___awmod@divisor+1)^0,f,c
  3556  001752                     l2036:
  3557  001752  5003               	movf	___awmod@divisor^0,w,c
  3558  001754  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  3559  001756  B4D8               	btfsc	status,2,c
  3560  001758  EFB0  F00B         	goto	u1491
  3561  00175C  EFB2  F00B         	goto	u1490
  3562  001760                     u1491:
  3563  001760  EFD6  F00B         	goto	l2052
  3564  001764                     u1490:
  3565  001764  0E01               	movlw	1
  3566  001766  6E05               	movwf	___awmod@counter^0,c
  3567  001768  EFBA  F00B         	goto	l2042
  3568  00176C                     l2040:
  3569  00176C  90D8               	bcf	status,0,c
  3570  00176E  3603               	rlcf	___awmod@divisor^0,f,c
  3571  001770  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  3572  001772  2A05               	incf	___awmod@counter^0,f,c
  3573  001774                     l2042:
  3574  001774  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  3575  001776  EFBF  F00B         	goto	u1501
  3576  00177A  EFC1  F00B         	goto	u1500
  3577  00177E                     u1501:
  3578  00177E  EFB6  F00B         	goto	l2040
  3579  001782                     u1500:
  3580  001782                     l2044:
  3581  001782  5003               	movf	___awmod@divisor^0,w,c
  3582  001784  5C01               	subwf	___awmod@dividend^0,w,c
  3583  001786  5004               	movf	(___awmod@divisor+1)^0,w,c
  3584  001788  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  3585  00178A  A0D8               	btfss	status,0,c
  3586  00178C  EFCA  F00B         	goto	u1511
  3587  001790  EFCC  F00B         	goto	u1510
  3588  001794                     u1511:
  3589  001794  EFD0  F00B         	goto	l2048
  3590  001798                     u1510:
  3591  001798  5003               	movf	___awmod@divisor^0,w,c
  3592  00179A  5E01               	subwf	___awmod@dividend^0,f,c
  3593  00179C  5004               	movf	(___awmod@divisor+1)^0,w,c
  3594  00179E  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  3595  0017A0                     l2048:
  3596  0017A0  90D8               	bcf	status,0,c
  3597  0017A2  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  3598  0017A4  3203               	rrcf	___awmod@divisor^0,f,c
  3599  0017A6  2E05               	decfsz	___awmod@counter^0,f,c
  3600  0017A8  EFC1  F00B         	goto	l2044
  3601  0017AC                     l2052:
  3602  0017AC  5006               	movf	___awmod@sign^0,w,c
  3603  0017AE  B4D8               	btfsc	status,2,c
  3604  0017B0  EFDC  F00B         	goto	u1521
  3605  0017B4  EFDE  F00B         	goto	u1520
  3606  0017B8                     u1521:
  3607  0017B8  EFE2  F00B         	goto	l2056
  3608  0017BC                     u1520:
  3609  0017BC  6C01               	negf	___awmod@dividend^0,c
  3610  0017BE  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3611  0017C0  B0D8               	btfsc	status,0,c
  3612  0017C2  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3613  0017C4                     l2056:
  3614  0017C4  C001  F001         	movff	___awmod@dividend,?___awmod
  3615  0017C8  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3616  0017CC  0012               	return		;funcret
  3617  0017CE                     __end_of___awmod:
  3618                           	callstack 0
  3619                           
  3620 ;; *************** function ___awdiv *****************
  3621 ;; Defined at:
  3622 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;  dividend        2    0[COMRAM] int 
  3625 ;;  divisor         2    2[COMRAM] int 
  3626 ;; Auto vars:     Size  Location     Type
  3627 ;;  quotient        2    6[COMRAM] int 
  3628 ;;  sign            1    5[COMRAM] unsigned char 
  3629 ;;  counter         1    4[COMRAM] unsigned char 
  3630 ;; Return value:  Size  Location     Type
  3631 ;;                  2    0[COMRAM] int 
  3632 ;; Registers used:
  3633 ;;		wreg, status,2, status,0
  3634 ;; Tracked objects:
  3635 ;;		On entry : 0/0
  3636 ;;		On exit  : 0/0
  3637 ;;		Unchanged: 0/0
  3638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3639 ;;      Params:         4       0       0       0       0       0       0       0       0
  3640 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3641 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3642 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3643 ;;Total ram usage:        8 bytes
  3644 ;; Hardware stack levels used: 1
  3645 ;; This function calls:
  3646 ;;		Nothing
  3647 ;; This function is called by:
  3648 ;;		_DS1307_Write_Hours_24
  3649 ;;		_DS1307_Write_Date
  3650 ;; This function uses a non-reentrant model
  3651 ;;
  3652                           
  3653                           	psect	text22
  3654  00159E                     __ptext22:
  3655                           	callstack 0
  3656  00159E                     ___awdiv:
  3657                           	callstack 29
  3658  00159E  0E00               	movlw	0
  3659  0015A0  6E06               	movwf	___awdiv@sign^0,c
  3660  0015A2  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  3661  0015A4  EFD8  F00A         	goto	u1410
  3662  0015A8  EFD6  F00A         	goto	u1411
  3663  0015AC                     u1411:
  3664  0015AC  EFDE  F00A         	goto	l1988
  3665  0015B0                     u1410:
  3666  0015B0  6C03               	negf	___awdiv@divisor^0,c
  3667  0015B2  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  3668  0015B4  B0D8               	btfsc	status,0,c
  3669  0015B6  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  3670  0015B8  0E01               	movlw	1
  3671  0015BA  6E06               	movwf	___awdiv@sign^0,c
  3672  0015BC                     l1988:
  3673  0015BC  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  3674  0015BE  EFE5  F00A         	goto	u1420
  3675  0015C2  EFE3  F00A         	goto	u1421
  3676  0015C6                     u1421:
  3677  0015C6  EFEB  F00A         	goto	l1994
  3678  0015CA                     u1420:
  3679  0015CA  6C01               	negf	___awdiv@dividend^0,c
  3680  0015CC  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  3681  0015CE  B0D8               	btfsc	status,0,c
  3682  0015D0  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  3683  0015D2  0E01               	movlw	1
  3684  0015D4  1A06               	xorwf	___awdiv@sign^0,f,c
  3685  0015D6                     l1994:
  3686  0015D6  0E00               	movlw	0
  3687  0015D8  6E08               	movwf	(___awdiv@quotient+1)^0,c
  3688  0015DA  0E00               	movlw	0
  3689  0015DC  6E07               	movwf	___awdiv@quotient^0,c
  3690  0015DE  5003               	movf	___awdiv@divisor^0,w,c
  3691  0015E0  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  3692  0015E2  B4D8               	btfsc	status,2,c
  3693  0015E4  EFF6  F00A         	goto	u1431
  3694  0015E8  EFF8  F00A         	goto	u1430
  3695  0015EC                     u1431:
  3696  0015EC  EF20  F00B         	goto	l2016
  3697  0015F0                     u1430:
  3698  0015F0  0E01               	movlw	1
  3699  0015F2  6E05               	movwf	___awdiv@counter^0,c
  3700  0015F4  EF00  F00B         	goto	l2002
  3701  0015F8                     l2000:
  3702  0015F8  90D8               	bcf	status,0,c
  3703  0015FA  3603               	rlcf	___awdiv@divisor^0,f,c
  3704  0015FC  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  3705  0015FE  2A05               	incf	___awdiv@counter^0,f,c
  3706  001600                     l2002:
  3707  001600  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3708  001602  EF05  F00B         	goto	u1441
  3709  001606  EF07  F00B         	goto	u1440
  3710  00160A                     u1441:
  3711  00160A  EFFC  F00A         	goto	l2000
  3712  00160E                     u1440:
  3713  00160E                     l2004:
  3714  00160E  90D8               	bcf	status,0,c
  3715  001610  3607               	rlcf	___awdiv@quotient^0,f,c
  3716  001612  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  3717  001614  5003               	movf	___awdiv@divisor^0,w,c
  3718  001616  5C01               	subwf	___awdiv@dividend^0,w,c
  3719  001618  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3720  00161A  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  3721  00161C  A0D8               	btfss	status,0,c
  3722  00161E  EF13  F00B         	goto	u1451
  3723  001622  EF15  F00B         	goto	u1450
  3724  001626                     u1451:
  3725  001626  EF1A  F00B         	goto	l2012
  3726  00162A                     u1450:
  3727  00162A  5003               	movf	___awdiv@divisor^0,w,c
  3728  00162C  5E01               	subwf	___awdiv@dividend^0,f,c
  3729  00162E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3730  001630  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  3731  001632  8007               	bsf	___awdiv@quotient^0,0,c
  3732  001634                     l2012:
  3733  001634  90D8               	bcf	status,0,c
  3734  001636  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  3735  001638  3203               	rrcf	___awdiv@divisor^0,f,c
  3736  00163A  2E05               	decfsz	___awdiv@counter^0,f,c
  3737  00163C  EF07  F00B         	goto	l2004
  3738  001640                     l2016:
  3739  001640  5006               	movf	___awdiv@sign^0,w,c
  3740  001642  B4D8               	btfsc	status,2,c
  3741  001644  EF26  F00B         	goto	u1461
  3742  001648  EF28  F00B         	goto	u1460
  3743  00164C                     u1461:
  3744  00164C  EF2C  F00B         	goto	l2020
  3745  001650                     u1460:
  3746  001650  6C07               	negf	___awdiv@quotient^0,c
  3747  001652  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3748  001654  B0D8               	btfsc	status,0,c
  3749  001656  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3750  001658                     l2020:
  3751  001658  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3752  00165C  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3753  001660  0012               	return		;funcret
  3754  001662                     __end_of___awdiv:
  3755                           	callstack 0
  3756                           
  3757 ;; *************** function _DS1307_Read_H_24 *****************
  3758 ;; Defined at:
  3759 ;;		line 48 in file "RTC.c"
  3760 ;; Parameters:    Size  Location     Type
  3761 ;;  horas           2    3[COMRAM] PTR unsigned char 
  3762 ;;		 -> HORA(1), 
  3763 ;;  minutos         2    5[COMRAM] PTR unsigned char 
  3764 ;;		 -> MINUTO(1), 
  3765 ;;  segundos        2    7[COMRAM] PTR unsigned char 
  3766 ;;		 -> SEGUNDO(1), 
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;		None
  3769 ;; Return value:  Size  Location     Type
  3770 ;;                  1    wreg      void 
  3771 ;; Registers used:
  3772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3773 ;; Tracked objects:
  3774 ;;		On entry : 0/0
  3775 ;;		On exit  : 0/0
  3776 ;;		Unchanged: 0/0
  3777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3778 ;;      Params:         6       0       0       0       0       0       0       0       0
  3779 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3780 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3781 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3782 ;;Total ram usage:        8 bytes
  3783 ;; Hardware stack levels used: 1
  3784 ;; Hardware stack levels required when called: 1
  3785 ;; This function calls:
  3786 ;;		_I2C_ReadData
  3787 ;;		_I2C_Restart
  3788 ;;		_I2C_Start
  3789 ;;		_I2C_Stop
  3790 ;;		_I2C_Write_Slave
  3791 ;; This function is called by:
  3792 ;;		_main
  3793 ;; This function uses a non-reentrant model
  3794 ;;
  3795                           
  3796                           	psect	text23
  3797  001322                     __ptext23:
  3798                           	callstack 0
  3799  001322                     _DS1307_Read_H_24:
  3800                           	callstack 29
  3801  001322                     
  3802                           ;RTC.c: 51:      I2C_Start();
  3803  001322  EC11  F00E         	call	_I2C_Start	;wreg free
  3804  001326                     
  3805                           ;RTC.c: 52:      I2C_Write_Slave(0XD0);
  3806  001326  0ED0               	movlw	208
  3807  001328  ECCB  F00D         	call	_I2C_Write_Slave
  3808  00132C                     
  3809                           ;RTC.c: 53:      I2C_Write_Slave(0X00);
  3810  00132C  0E00               	movlw	0
  3811  00132E  ECCB  F00D         	call	_I2C_Write_Slave
  3812                           
  3813                           ;RTC.c: 54:      I2C_Restart();
  3814  001332  EC08  F00E         	call	_I2C_Restart	;wreg free
  3815  001336                     
  3816                           ;RTC.c: 55:      I2C_Write_Slave(0XD1);
  3817  001336  0ED1               	movlw	209
  3818  001338  ECCB  F00D         	call	_I2C_Write_Slave
  3819  00133C                     
  3820                           ;RTC.c: 56:      I2C_ReadData(segundos,0b00000000);
  3821  00133C  C008  F001         	movff	DS1307_Read_H_24@segundos,I2C_ReadData@Ptr_data
  3822  001340  C009  F002         	movff	DS1307_Read_H_24@segundos+1,I2C_ReadData@Ptr_data+1
  3823  001344  0E00               	movlw	0
  3824  001346  6E03               	movwf	I2C_ReadData@var_Ack_nAck^0,c
  3825  001348  EC84  F00C         	call	_I2C_ReadData	;wreg free
  3826  00134C                     
  3827                           ;RTC.c: 57:      I2C_ReadData(minutos,0b00000000);
  3828  00134C  C006  F001         	movff	DS1307_Read_H_24@minutos,I2C_ReadData@Ptr_data
  3829  001350  C007  F002         	movff	DS1307_Read_H_24@minutos+1,I2C_ReadData@Ptr_data+1
  3830  001354  0E00               	movlw	0
  3831  001356  6E03               	movwf	I2C_ReadData@var_Ack_nAck^0,c
  3832  001358  EC84  F00C         	call	_I2C_ReadData	;wreg free
  3833  00135C                     
  3834                           ;RTC.c: 58:      I2C_ReadData(horas,0b00000001);
  3835  00135C  C004  F001         	movff	DS1307_Read_H_24@horas,I2C_ReadData@Ptr_data
  3836  001360  C005  F002         	movff	DS1307_Read_H_24@horas+1,I2C_ReadData@Ptr_data+1
  3837  001364  0E01               	movlw	1
  3838  001366  6E03               	movwf	I2C_ReadData@var_Ack_nAck^0,c
  3839  001368  EC84  F00C         	call	_I2C_ReadData	;wreg free
  3840  00136C                     
  3841                           ;RTC.c: 59:      I2C_Stop();
  3842  00136C  ECFF  F00D         	call	_I2C_Stop	;wreg free
  3843  001370                     
  3844                           ;RTC.c: 61:      *segundos = ((*segundos & 0xF0)>>4)*10 + (*segundos & 0x0F);
  3845  001370  C008  FFD9         	movff	DS1307_Read_H_24@segundos,fsr2l
  3846  001374  C009  FFDA         	movff	DS1307_Read_H_24@segundos+1,fsr2h
  3847  001378  50DF               	movf	indf2,w,c
  3848  00137A  6E0A               	movwf	??_DS1307_Read_H_24^0,c
  3849  00137C  0E0F               	movlw	15
  3850  00137E  160A               	andwf	??_DS1307_Read_H_24^0,f,c
  3851  001380  C008  FFD9         	movff	DS1307_Read_H_24@segundos,fsr2l
  3852  001384  C009  FFDA         	movff	DS1307_Read_H_24@segundos+1,fsr2h
  3853  001388  50DF               	movf	indf2,w,c
  3854  00138A  6E0B               	movwf	(??_DS1307_Read_H_24+1)^0,c
  3855  00138C  380B               	swapf	(??_DS1307_Read_H_24+1)^0,w,c
  3856  00138E  0B0F               	andlw	15
  3857  001390  0B0F               	andlw	15
  3858  001392  0D0A               	mullw	10
  3859  001394  50F3               	movf	243,w,c
  3860  001396  240A               	addwf	??_DS1307_Read_H_24^0,w,c
  3861  001398  C008  FFD9         	movff	DS1307_Read_H_24@segundos,fsr2l
  3862  00139C  C009  FFDA         	movff	DS1307_Read_H_24@segundos+1,fsr2h
  3863  0013A0  6EDF               	movwf	indf2,c
  3864  0013A2                     
  3865                           ;RTC.c: 62:      *minutos = ((*minutos & 0xF0)>>4)*10 + (*minutos & 0x0F);
  3866  0013A2  C006  FFD9         	movff	DS1307_Read_H_24@minutos,fsr2l
  3867  0013A6  C007  FFDA         	movff	DS1307_Read_H_24@minutos+1,fsr2h
  3868  0013AA  50DF               	movf	indf2,w,c
  3869  0013AC  6E0A               	movwf	??_DS1307_Read_H_24^0,c
  3870  0013AE  0E0F               	movlw	15
  3871  0013B0  160A               	andwf	??_DS1307_Read_H_24^0,f,c
  3872  0013B2  C006  FFD9         	movff	DS1307_Read_H_24@minutos,fsr2l
  3873  0013B6  C007  FFDA         	movff	DS1307_Read_H_24@minutos+1,fsr2h
  3874  0013BA  50DF               	movf	indf2,w,c
  3875  0013BC  6E0B               	movwf	(??_DS1307_Read_H_24+1)^0,c
  3876  0013BE  380B               	swapf	(??_DS1307_Read_H_24+1)^0,w,c
  3877  0013C0  0B0F               	andlw	15
  3878  0013C2  0B0F               	andlw	15
  3879  0013C4  0D0A               	mullw	10
  3880  0013C6  50F3               	movf	243,w,c
  3881  0013C8  240A               	addwf	??_DS1307_Read_H_24^0,w,c
  3882  0013CA  C006  FFD9         	movff	DS1307_Read_H_24@minutos,fsr2l
  3883  0013CE  C007  FFDA         	movff	DS1307_Read_H_24@minutos+1,fsr2h
  3884  0013D2  6EDF               	movwf	indf2,c
  3885  0013D4                     
  3886                           ;RTC.c: 63:      *horas = ((*horas & 0xF0)>>4)*10 + (*horas & 0x0F);
  3887  0013D4  C004  FFD9         	movff	DS1307_Read_H_24@horas,fsr2l
  3888  0013D8  C005  FFDA         	movff	DS1307_Read_H_24@horas+1,fsr2h
  3889  0013DC  50DF               	movf	indf2,w,c
  3890  0013DE  6E0A               	movwf	??_DS1307_Read_H_24^0,c
  3891  0013E0  0E0F               	movlw	15
  3892  0013E2  160A               	andwf	??_DS1307_Read_H_24^0,f,c
  3893  0013E4  C004  FFD9         	movff	DS1307_Read_H_24@horas,fsr2l
  3894  0013E8  C005  FFDA         	movff	DS1307_Read_H_24@horas+1,fsr2h
  3895  0013EC  50DF               	movf	indf2,w,c
  3896  0013EE  6E0B               	movwf	(??_DS1307_Read_H_24+1)^0,c
  3897  0013F0  380B               	swapf	(??_DS1307_Read_H_24+1)^0,w,c
  3898  0013F2  0B0F               	andlw	15
  3899  0013F4  0B0F               	andlw	15
  3900  0013F6  0D0A               	mullw	10
  3901  0013F8  50F3               	movf	243,w,c
  3902  0013FA  240A               	addwf	??_DS1307_Read_H_24^0,w,c
  3903  0013FC  C004  FFD9         	movff	DS1307_Read_H_24@horas,fsr2l
  3904  001400  C005  FFDA         	movff	DS1307_Read_H_24@horas+1,fsr2h
  3905  001404  6EDF               	movwf	indf2,c
  3906  001406  0012               	return		;funcret
  3907  001408                     __end_of_DS1307_Read_H_24:
  3908                           	callstack 0
  3909                           
  3910 ;; *************** function _DS1307_Read_Date *****************
  3911 ;; Defined at:
  3912 ;;		line 67 in file "RTC.c"
  3913 ;; Parameters:    Size  Location     Type
  3914 ;;  year            2    3[COMRAM] PTR unsigned char 
  3915 ;;		 -> YEAR(1), 
  3916 ;;  mes             2    5[COMRAM] PTR unsigned char 
  3917 ;;		 -> MES(1), 
  3918 ;;  dia_mes         2    7[COMRAM] PTR unsigned char 
  3919 ;;		 -> DIA_MES(1), 
  3920 ;;  dia_semana      2    9[COMRAM] PTR unsigned char 
  3921 ;;		 -> DIA_SEMANA(1), 
  3922 ;; Auto vars:     Size  Location     Type
  3923 ;;		None
  3924 ;; Return value:  Size  Location     Type
  3925 ;;                  1    wreg      void 
  3926 ;; Registers used:
  3927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3928 ;; Tracked objects:
  3929 ;;		On entry : 0/0
  3930 ;;		On exit  : 0/0
  3931 ;;		Unchanged: 0/0
  3932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3933 ;;      Params:         8       0       0       0       0       0       0       0       0
  3934 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3935 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3936 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3937 ;;Total ram usage:       10 bytes
  3938 ;; Hardware stack levels used: 1
  3939 ;; Hardware stack levels required when called: 1
  3940 ;; This function calls:
  3941 ;;		_I2C_ReadData
  3942 ;;		_I2C_Restart
  3943 ;;		_I2C_Start
  3944 ;;		_I2C_Stop
  3945 ;;		_I2C_Write_Slave
  3946 ;; This function is called by:
  3947 ;;		_main
  3948 ;; This function uses a non-reentrant model
  3949 ;;
  3950                           
  3951                           	psect	text24
  3952  000F24                     __ptext24:
  3953                           	callstack 0
  3954  000F24                     _DS1307_Read_Date:
  3955                           	callstack 29
  3956  000F24                     
  3957                           ;RTC.c: 70:      I2C_Start();
  3958  000F24  EC11  F00E         	call	_I2C_Start	;wreg free
  3959  000F28                     
  3960                           ;RTC.c: 71:      I2C_Write_Slave(0XD0);
  3961  000F28  0ED0               	movlw	208
  3962  000F2A  ECCB  F00D         	call	_I2C_Write_Slave
  3963  000F2E                     
  3964                           ;RTC.c: 72:      I2C_Write_Slave(0X03);
  3965  000F2E  0E03               	movlw	3
  3966  000F30  ECCB  F00D         	call	_I2C_Write_Slave
  3967                           
  3968                           ;RTC.c: 73:      I2C_Restart();
  3969  000F34  EC08  F00E         	call	_I2C_Restart	;wreg free
  3970  000F38                     
  3971                           ;RTC.c: 74:      I2C_Write_Slave(0XD1);
  3972  000F38  0ED1               	movlw	209
  3973  000F3A  ECCB  F00D         	call	_I2C_Write_Slave
  3974  000F3E                     
  3975                           ;RTC.c: 75:      I2C_ReadData(dia_semana,0b00000000);
  3976  000F3E  C00A  F001         	movff	DS1307_Read_Date@dia_semana,I2C_ReadData@Ptr_data
  3977  000F42  C00B  F002         	movff	DS1307_Read_Date@dia_semana+1,I2C_ReadData@Ptr_data+1
  3978  000F46  0E00               	movlw	0
  3979  000F48  6E03               	movwf	I2C_ReadData@var_Ack_nAck^0,c
  3980  000F4A  EC84  F00C         	call	_I2C_ReadData	;wreg free
  3981  000F4E                     
  3982                           ;RTC.c: 76:      I2C_ReadData(dia_mes,0b00000000);
  3983  000F4E  C008  F001         	movff	DS1307_Read_Date@dia_mes,I2C_ReadData@Ptr_data
  3984  000F52  C009  F002         	movff	DS1307_Read_Date@dia_mes+1,I2C_ReadData@Ptr_data+1
  3985  000F56  0E00               	movlw	0
  3986  000F58  6E03               	movwf	I2C_ReadData@var_Ack_nAck^0,c
  3987  000F5A  EC84  F00C         	call	_I2C_ReadData	;wreg free
  3988  000F5E                     
  3989                           ;RTC.c: 77:      I2C_ReadData(mes,0b00000000);
  3990  000F5E  C006  F001         	movff	DS1307_Read_Date@mes,I2C_ReadData@Ptr_data
  3991  000F62  C007  F002         	movff	DS1307_Read_Date@mes+1,I2C_ReadData@Ptr_data+1
  3992  000F66  0E00               	movlw	0
  3993  000F68  6E03               	movwf	I2C_ReadData@var_Ack_nAck^0,c
  3994  000F6A  EC84  F00C         	call	_I2C_ReadData	;wreg free
  3995  000F6E                     
  3996                           ;RTC.c: 78:      I2C_ReadData(year,0b00000001);
  3997  000F6E  C004  F001         	movff	DS1307_Read_Date@year,I2C_ReadData@Ptr_data
  3998  000F72  C005  F002         	movff	DS1307_Read_Date@year+1,I2C_ReadData@Ptr_data+1
  3999  000F76  0E01               	movlw	1
  4000  000F78  6E03               	movwf	I2C_ReadData@var_Ack_nAck^0,c
  4001  000F7A  EC84  F00C         	call	_I2C_ReadData	;wreg free
  4002  000F7E                     
  4003                           ;RTC.c: 79:      I2C_Stop();
  4004  000F7E  ECFF  F00D         	call	_I2C_Stop	;wreg free
  4005  000F82                     
  4006                           ;RTC.c: 81:      *dia_semana = ((*dia_semana & 0xF0)>>4)*10 + (*dia_semana & 0x0F);
  4007  000F82  C00A  FFD9         	movff	DS1307_Read_Date@dia_semana,fsr2l
  4008  000F86  C00B  FFDA         	movff	DS1307_Read_Date@dia_semana+1,fsr2h
  4009  000F8A  50DF               	movf	indf2,w,c
  4010  000F8C  6E0C               	movwf	??_DS1307_Read_Date^0,c
  4011  000F8E  0E0F               	movlw	15
  4012  000F90  160C               	andwf	??_DS1307_Read_Date^0,f,c
  4013  000F92  C00A  FFD9         	movff	DS1307_Read_Date@dia_semana,fsr2l
  4014  000F96  C00B  FFDA         	movff	DS1307_Read_Date@dia_semana+1,fsr2h
  4015  000F9A  50DF               	movf	indf2,w,c
  4016  000F9C  6E0D               	movwf	(??_DS1307_Read_Date+1)^0,c
  4017  000F9E  380D               	swapf	(??_DS1307_Read_Date+1)^0,w,c
  4018  000FA0  0B0F               	andlw	15
  4019  000FA2  0B0F               	andlw	15
  4020  000FA4  0D0A               	mullw	10
  4021  000FA6  50F3               	movf	243,w,c
  4022  000FA8  240C               	addwf	??_DS1307_Read_Date^0,w,c
  4023  000FAA  C00A  FFD9         	movff	DS1307_Read_Date@dia_semana,fsr2l
  4024  000FAE  C00B  FFDA         	movff	DS1307_Read_Date@dia_semana+1,fsr2h
  4025  000FB2  6EDF               	movwf	indf2,c
  4026  000FB4                     
  4027                           ;RTC.c: 82:      *dia_mes = ((*dia_mes & 0xF0)>>4)*10 + (*dia_mes & 0x0F);
  4028  000FB4  C008  FFD9         	movff	DS1307_Read_Date@dia_mes,fsr2l
  4029  000FB8  C009  FFDA         	movff	DS1307_Read_Date@dia_mes+1,fsr2h
  4030  000FBC  50DF               	movf	indf2,w,c
  4031  000FBE  6E0C               	movwf	??_DS1307_Read_Date^0,c
  4032  000FC0  0E0F               	movlw	15
  4033  000FC2  160C               	andwf	??_DS1307_Read_Date^0,f,c
  4034  000FC4  C008  FFD9         	movff	DS1307_Read_Date@dia_mes,fsr2l
  4035  000FC8  C009  FFDA         	movff	DS1307_Read_Date@dia_mes+1,fsr2h
  4036  000FCC  50DF               	movf	indf2,w,c
  4037  000FCE  6E0D               	movwf	(??_DS1307_Read_Date+1)^0,c
  4038  000FD0  380D               	swapf	(??_DS1307_Read_Date+1)^0,w,c
  4039  000FD2  0B0F               	andlw	15
  4040  000FD4  0B0F               	andlw	15
  4041  000FD6  0D0A               	mullw	10
  4042  000FD8  50F3               	movf	243,w,c
  4043  000FDA  240C               	addwf	??_DS1307_Read_Date^0,w,c
  4044  000FDC  C008  FFD9         	movff	DS1307_Read_Date@dia_mes,fsr2l
  4045  000FE0  C009  FFDA         	movff	DS1307_Read_Date@dia_mes+1,fsr2h
  4046  000FE4  6EDF               	movwf	indf2,c
  4047  000FE6                     
  4048                           ;RTC.c: 83:      *mes = ((*mes & 0xF0)>>4)*10 + (*mes & 0x0F);
  4049  000FE6  C006  FFD9         	movff	DS1307_Read_Date@mes,fsr2l
  4050  000FEA  C007  FFDA         	movff	DS1307_Read_Date@mes+1,fsr2h
  4051  000FEE  50DF               	movf	indf2,w,c
  4052  000FF0  6E0C               	movwf	??_DS1307_Read_Date^0,c
  4053  000FF2  0E0F               	movlw	15
  4054  000FF4  160C               	andwf	??_DS1307_Read_Date^0,f,c
  4055  000FF6  C006  FFD9         	movff	DS1307_Read_Date@mes,fsr2l
  4056  000FFA  C007  FFDA         	movff	DS1307_Read_Date@mes+1,fsr2h
  4057  000FFE  50DF               	movf	indf2,w,c
  4058  001000  6E0D               	movwf	(??_DS1307_Read_Date+1)^0,c
  4059  001002  380D               	swapf	(??_DS1307_Read_Date+1)^0,w,c
  4060  001004  0B0F               	andlw	15
  4061  001006  0B0F               	andlw	15
  4062  001008  0D0A               	mullw	10
  4063  00100A  50F3               	movf	243,w,c
  4064  00100C  240C               	addwf	??_DS1307_Read_Date^0,w,c
  4065  00100E  C006  FFD9         	movff	DS1307_Read_Date@mes,fsr2l
  4066  001012  C007  FFDA         	movff	DS1307_Read_Date@mes+1,fsr2h
  4067  001016  6EDF               	movwf	indf2,c
  4068  001018                     
  4069                           ;RTC.c: 84:      *year = ((*year & 0xF0)>>4)*10 + (*year & 0x0F);
  4070  001018  C004  FFD9         	movff	DS1307_Read_Date@year,fsr2l
  4071  00101C  C005  FFDA         	movff	DS1307_Read_Date@year+1,fsr2h
  4072  001020  50DF               	movf	indf2,w,c
  4073  001022  6E0C               	movwf	??_DS1307_Read_Date^0,c
  4074  001024  0E0F               	movlw	15
  4075  001026  160C               	andwf	??_DS1307_Read_Date^0,f,c
  4076  001028  C004  FFD9         	movff	DS1307_Read_Date@year,fsr2l
  4077  00102C  C005  FFDA         	movff	DS1307_Read_Date@year+1,fsr2h
  4078  001030  50DF               	movf	indf2,w,c
  4079  001032  6E0D               	movwf	(??_DS1307_Read_Date+1)^0,c
  4080  001034  380D               	swapf	(??_DS1307_Read_Date+1)^0,w,c
  4081  001036  0B0F               	andlw	15
  4082  001038  0B0F               	andlw	15
  4083  00103A  0D0A               	mullw	10
  4084  00103C  50F3               	movf	243,w,c
  4085  00103E  240C               	addwf	??_DS1307_Read_Date^0,w,c
  4086  001040  C004  FFD9         	movff	DS1307_Read_Date@year,fsr2l
  4087  001044  C005  FFDA         	movff	DS1307_Read_Date@year+1,fsr2h
  4088  001048  6EDF               	movwf	indf2,c
  4089  00104A  0012               	return		;funcret
  4090  00104C                     __end_of_DS1307_Read_Date:
  4091                           	callstack 0
  4092                           
  4093 ;; *************** function _I2C_Stop *****************
  4094 ;; Defined at:
  4095 ;;		line 19 in file "I2C.c"
  4096 ;; Parameters:    Size  Location     Type
  4097 ;;		None
  4098 ;; Auto vars:     Size  Location     Type
  4099 ;;		None
  4100 ;; Return value:  Size  Location     Type
  4101 ;;                  1    wreg      void 
  4102 ;; Registers used:
  4103 ;;		None
  4104 ;; Tracked objects:
  4105 ;;		On entry : 0/0
  4106 ;;		On exit  : 0/0
  4107 ;;		Unchanged: 0/0
  4108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4109 ;;      Params:         0       0       0       0       0       0       0       0       0
  4110 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4111 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4112 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4113 ;;Total ram usage:        0 bytes
  4114 ;; Hardware stack levels used: 1
  4115 ;; This function calls:
  4116 ;;		Nothing
  4117 ;; This function is called by:
  4118 ;;		_DS1307_Write_Hours_24
  4119 ;;		_DS1307_Write_Date
  4120 ;;		_DS1307_Read_H_24
  4121 ;;		_DS1307_Read_Date
  4122 ;; This function uses a non-reentrant model
  4123 ;;
  4124                           
  4125                           	psect	text25
  4126  001BFE                     __ptext25:
  4127                           	callstack 0
  4128  001BFE                     _I2C_Stop:
  4129                           	callstack 29
  4130  001BFE                     
  4131                           ;I2C.c: 20: SSPCON2bits.PEN = 1;
  4132  001BFE  84C5               	bsf	197,2,c	;volatile
  4133  001C00                     l29:
  4134  001C00  B4C5               	btfsc	197,2,c	;volatile
  4135  001C02  EF05  F00E         	goto	u1281
  4136  001C06  EF07  F00E         	goto	u1280
  4137  001C0A                     u1281:
  4138  001C0A  EF00  F00E         	goto	l29
  4139  001C0E                     u1280:
  4140  001C0E  0012               	return		;funcret
  4141  001C10                     __end_of_I2C_Stop:
  4142                           	callstack 0
  4143                           
  4144 ;; *************** function _I2C_Restart *****************
  4145 ;; Defined at:
  4146 ;;		line 23 in file "I2C.c"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;		None
  4149 ;; Auto vars:     Size  Location     Type
  4150 ;;		None
  4151 ;; Return value:  Size  Location     Type
  4152 ;;                  1    wreg      void 
  4153 ;; Registers used:
  4154 ;;		None
  4155 ;; Tracked objects:
  4156 ;;		On entry : 0/0
  4157 ;;		On exit  : 0/0
  4158 ;;		Unchanged: 0/0
  4159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4160 ;;      Params:         0       0       0       0       0       0       0       0       0
  4161 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4162 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4163 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4164 ;;Total ram usage:        0 bytes
  4165 ;; Hardware stack levels used: 1
  4166 ;; This function calls:
  4167 ;;		Nothing
  4168 ;; This function is called by:
  4169 ;;		_DS1307_Read_H_24
  4170 ;;		_DS1307_Read_Date
  4171 ;; This function uses a non-reentrant model
  4172 ;;
  4173                           
  4174                           	psect	text26
  4175  001C10                     __ptext26:
  4176                           	callstack 0
  4177  001C10                     _I2C_Restart:
  4178                           	callstack 29
  4179  001C10                     
  4180                           ;I2C.c: 24:     SSPCON2bits.RSEN = 1;
  4181  001C10  82C5               	bsf	197,1,c	;volatile
  4182  001C12                     l35:
  4183  001C12  B2C5               	btfsc	197,1,c	;volatile
  4184  001C14  EF0E  F00E         	goto	u1291
  4185  001C18  EF10  F00E         	goto	u1290
  4186  001C1C                     u1291:
  4187  001C1C  EF09  F00E         	goto	l35
  4188  001C20                     u1290:
  4189  001C20  0012               	return		;funcret
  4190  001C22                     __end_of_I2C_Restart:
  4191                           	callstack 0
  4192                           
  4193 ;; *************** function _I2C_ReadData *****************
  4194 ;; Defined at:
  4195 ;;		line 39 in file "I2C.c"
  4196 ;; Parameters:    Size  Location     Type
  4197 ;;  Ptr_data        2    0[COMRAM] PTR unsigned char 
  4198 ;;		 -> DIA_SEMANA(1), DIA_MES(1), MES(1), YEAR(1), 
  4199 ;;		 -> SEGUNDO(1), MINUTO(1), HORA(1), 
  4200 ;;  var_Ack_nAck    1    2[COMRAM] unsigned char 
  4201 ;; Auto vars:     Size  Location     Type
  4202 ;;		None
  4203 ;; Return value:  Size  Location     Type
  4204 ;;                  1    wreg      void 
  4205 ;; Registers used:
  4206 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4207 ;; Tracked objects:
  4208 ;;		On entry : 0/0
  4209 ;;		On exit  : 0/0
  4210 ;;		Unchanged: 0/0
  4211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4212 ;;      Params:         3       0       0       0       0       0       0       0       0
  4213 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4214 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4215 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4216 ;;Total ram usage:        3 bytes
  4217 ;; Hardware stack levels used: 1
  4218 ;; This function calls:
  4219 ;;		Nothing
  4220 ;; This function is called by:
  4221 ;;		_DS1307_Read_H_24
  4222 ;;		_DS1307_Read_Date
  4223 ;; This function uses a non-reentrant model
  4224 ;;
  4225                           
  4226                           	psect	text27
  4227  001908                     __ptext27:
  4228                           	callstack 0
  4229  001908                     _I2C_ReadData:
  4230                           	callstack 29
  4231  001908                     
  4232                           ;I2C.c: 41:     SSPCON2bits.RCEN = 1;
  4233  001908  86C5               	bsf	197,3,c	;volatile
  4234  00190A                     
  4235                           ;I2C.c: 42:     if(var_Ack_nAck == 0b00000000){
  4236  00190A  5003               	movf	I2C_ReadData@var_Ack_nAck^0,w,c
  4237  00190C  A4D8               	btfss	status,2,c
  4238  00190E  EF8B  F00C         	goto	u1321
  4239  001912  EF8D  F00C         	goto	u1320
  4240  001916                     u1321:
  4241  001916  EFA3  F00C         	goto	l1948
  4242  00191A                     u1320:
  4243  00191A                     l60:
  4244  00191A  A0C7               	btfss	199,0,c	;volatile
  4245  00191C  EF92  F00C         	goto	u1331
  4246  001920  EF94  F00C         	goto	u1330
  4247  001924                     u1331:
  4248  001924  EF8D  F00C         	goto	l60
  4249  001928                     u1330:
  4250  001928                     
  4251                           ;I2C.c: 44:      *Ptr_data = SSPBUF;
  4252  001928  C001  FFD9         	movff	I2C_ReadData@Ptr_data,fsr2l
  4253  00192C  C002  FFDA         	movff	I2C_ReadData@Ptr_data+1,fsr2h
  4254  001930  CFC9 FFDF          	movff	4041,indf2	;volatile
  4255  001934                     
  4256                           ;I2C.c: 45:      SSPCON2bits.ACKDT = 0;
  4257  001934  9AC5               	bcf	197,5,c	;volatile
  4258  001936                     
  4259                           ;I2C.c: 46:      SSPCON2bits.ACKEN = 1;
  4260  001936  88C5               	bsf	197,4,c	;volatile
  4261  001938                     l63:
  4262  001938  B8C5               	btfsc	197,4,c	;volatile
  4263  00193A  EFA1  F00C         	goto	u1341
  4264  00193E  EFA3  F00C         	goto	u1340
  4265  001942                     u1341:
  4266  001942  EF9C  F00C         	goto	l63
  4267  001946                     u1340:
  4268  001946                     l1948:
  4269                           
  4270                           ;I2C.c: 50:     if(var_Ack_nAck == 0b00000001){
  4271  001946  0403               	decf	I2C_ReadData@var_Ack_nAck^0,w,c
  4272  001948  A4D8               	btfss	status,2,c
  4273  00194A  EFA9  F00C         	goto	u1351
  4274  00194E  EFAB  F00C         	goto	u1350
  4275  001952                     u1351:
  4276  001952  EFC1  F00C         	goto	l73
  4277  001956                     u1350:
  4278  001956                     l67:
  4279  001956  A0C7               	btfss	199,0,c	;volatile
  4280  001958  EFB0  F00C         	goto	u1361
  4281  00195C  EFB2  F00C         	goto	u1360
  4282  001960                     u1361:
  4283  001960  EFAB  F00C         	goto	l67
  4284  001964                     u1360:
  4285  001964                     
  4286                           ;I2C.c: 52:      *Ptr_data = SSPBUF;
  4287  001964  C001  FFD9         	movff	I2C_ReadData@Ptr_data,fsr2l
  4288  001968  C002  FFDA         	movff	I2C_ReadData@Ptr_data+1,fsr2h
  4289  00196C  CFC9 FFDF          	movff	4041,indf2	;volatile
  4290  001970                     
  4291                           ;I2C.c: 53:      SSPCON2bits.ACKDT = 1;
  4292  001970  8AC5               	bsf	197,5,c	;volatile
  4293  001972                     
  4294                           ;I2C.c: 54:      SSPCON2bits.ACKEN = 1;
  4295  001972  88C5               	bsf	197,4,c	;volatile
  4296  001974                     l70:
  4297  001974  B8C5               	btfsc	197,4,c	;volatile
  4298  001976  EFBF  F00C         	goto	u1371
  4299  00197A  EFC1  F00C         	goto	u1370
  4300  00197E                     u1371:
  4301  00197E  EFBA  F00C         	goto	l70
  4302  001982                     u1370:
  4303  001982                     l73:
  4304  001982  0012               	return		;funcret
  4305  001984                     __end_of_I2C_ReadData:
  4306                           	callstack 0
  4307                           
  4308 ;; *************** function _DS1307_Config *****************
  4309 ;; Defined at:
  4310 ;;		line 5 in file "RTC.c"
  4311 ;; Parameters:    Size  Location     Type
  4312 ;;		None
  4313 ;; Auto vars:     Size  Location     Type
  4314 ;;		None
  4315 ;; Return value:  Size  Location     Type
  4316 ;;                  1    wreg      void 
  4317 ;; Registers used:
  4318 ;;		wreg, cstack
  4319 ;; Tracked objects:
  4320 ;;		On entry : 0/0
  4321 ;;		On exit  : 0/0
  4322 ;;		Unchanged: 0/0
  4323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4324 ;;      Params:         0       0       0       0       0       0       0       0       0
  4325 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4326 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4327 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4328 ;;Total ram usage:        0 bytes
  4329 ;; Hardware stack levels used: 1
  4330 ;; Hardware stack levels required when called: 1
  4331 ;; This function calls:
  4332 ;;		_I2C_Start
  4333 ;;		_I2C_Write_Slave
  4334 ;; This function is called by:
  4335 ;;		_main
  4336 ;; This function uses a non-reentrant model
  4337 ;;
  4338                           
  4339                           	psect	text28
  4340  001C34                     __ptext28:
  4341                           	callstack 0
  4342  001C34                     _DS1307_Config:
  4343                           	callstack 29
  4344  001C34                     
  4345                           ;RTC.c: 6:     I2C_Start();
  4346  001C34  EC11  F00E         	call	_I2C_Start	;wreg free
  4347  001C38                     
  4348                           ;RTC.c: 7:     I2C_Write_Slave(0XD0);
  4349  001C38  0ED0               	movlw	208
  4350  001C3A  ECCB  F00D         	call	_I2C_Write_Slave
  4351  001C3E  0012               	return		;funcret
  4352  001C40                     __end_of_DS1307_Config:
  4353                           	callstack 0
  4354                           
  4355 ;; *************** function _I2C_Write_Slave *****************
  4356 ;; Defined at:
  4357 ;;		line 34 in file "I2C.c"
  4358 ;; Parameters:    Size  Location     Type
  4359 ;;  data            1    wreg     unsigned char 
  4360 ;; Auto vars:     Size  Location     Type
  4361 ;;  data            1    0[COMRAM] unsigned char 
  4362 ;; Return value:  Size  Location     Type
  4363 ;;                  1    wreg      void 
  4364 ;; Registers used:
  4365 ;;		wreg
  4366 ;; Tracked objects:
  4367 ;;		On entry : 0/0
  4368 ;;		On exit  : 0/0
  4369 ;;		Unchanged: 0/0
  4370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4371 ;;      Params:         0       0       0       0       0       0       0       0       0
  4372 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4373 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4374 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4375 ;;Total ram usage:        1 bytes
  4376 ;; Hardware stack levels used: 1
  4377 ;; This function calls:
  4378 ;;		Nothing
  4379 ;; This function is called by:
  4380 ;;		_DS1307_Config
  4381 ;;		_DS1307_Write_Hours_24
  4382 ;;		_DS1307_Write_Date
  4383 ;;		_DS1307_Read_H_24
  4384 ;;		_DS1307_Read_Date
  4385 ;; This function uses a non-reentrant model
  4386 ;;
  4387                           
  4388                           	psect	text29
  4389  001B96                     __ptext29:
  4390                           	callstack 0
  4391  001B96                     _I2C_Write_Slave:
  4392                           	callstack 29
  4393                           
  4394                           ;incstack = 0
  4395                           ;I2C_Write_Slave@data stored from wreg
  4396  001B96  6E01               	movwf	I2C_Write_Slave@data^0,c
  4397  001B98                     
  4398                           ;I2C.c: 35:   SSPBUF = data;
  4399  001B98  C001  FFC9         	movff	I2C_Write_Slave@data,4041	;volatile
  4400  001B9C                     l50:
  4401  001B9C  B0C7               	btfsc	199,0,c	;volatile
  4402  001B9E  EFD3  F00D         	goto	u1301
  4403  001BA2  EFD5  F00D         	goto	u1300
  4404  001BA6                     u1301:
  4405  001BA6  EFCE  F00D         	goto	l50
  4406  001BAA                     u1300:
  4407  001BAA                     l53:
  4408  001BAA  B4C7               	btfsc	199,2,c	;volatile
  4409  001BAC  EFDA  F00D         	goto	u1311
  4410  001BB0  EFDC  F00D         	goto	u1310
  4411  001BB4                     u1311:
  4412  001BB4  EFD5  F00D         	goto	l53
  4413  001BB8                     u1310:
  4414  001BB8  0012               	return		;funcret
  4415  001BBA                     __end_of_I2C_Write_Slave:
  4416                           	callstack 0
  4417                           
  4418 ;; *************** function _I2C_Start *****************
  4419 ;; Defined at:
  4420 ;;		line 15 in file "I2C.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;		None
  4423 ;; Auto vars:     Size  Location     Type
  4424 ;;		None
  4425 ;; Return value:  Size  Location     Type
  4426 ;;                  1    wreg      void 
  4427 ;; Registers used:
  4428 ;;		None
  4429 ;; Tracked objects:
  4430 ;;		On entry : 0/0
  4431 ;;		On exit  : 0/0
  4432 ;;		Unchanged: 0/0
  4433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4434 ;;      Params:         0       0       0       0       0       0       0       0       0
  4435 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4436 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4437 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4438 ;;Total ram usage:        0 bytes
  4439 ;; Hardware stack levels used: 1
  4440 ;; This function calls:
  4441 ;;		Nothing
  4442 ;; This function is called by:
  4443 ;;		_DS1307_Config
  4444 ;;		_DS1307_Write_Date
  4445 ;;		_DS1307_Read_H_24
  4446 ;;		_DS1307_Read_Date
  4447 ;; This function uses a non-reentrant model
  4448 ;;
  4449                           
  4450                           	psect	text30
  4451  001C22                     __ptext30:
  4452                           	callstack 0
  4453  001C22                     _I2C_Start:
  4454                           	callstack 29
  4455  001C22                     
  4456                           ;I2C.c: 16:     SSPCON2bits.SEN = 1;
  4457  001C22  80C5               	bsf	197,0,c	;volatile
  4458  001C24                     l23:
  4459  001C24  B0C5               	btfsc	197,0,c	;volatile
  4460  001C26  EF17  F00E         	goto	u1271
  4461  001C2A  EF19  F00E         	goto	u1270
  4462  001C2E                     u1271:
  4463  001C2E  EF12  F00E         	goto	l23
  4464  001C32                     u1270:
  4465  001C32  0012               	return		;funcret
  4466  001C34                     __end_of_I2C_Start:
  4467                           	callstack 0
  4468                           
  4469 ;; *************** function _ConfigClock *****************
  4470 ;; Defined at:
  4471 ;;		line 77 in file "Configuracion.c"
  4472 ;; Parameters:    Size  Location     Type
  4473 ;;		None
  4474 ;; Auto vars:     Size  Location     Type
  4475 ;;		None
  4476 ;; Return value:  Size  Location     Type
  4477 ;;                  1    wreg      void 
  4478 ;; Registers used:
  4479 ;;		wreg, status,2
  4480 ;; Tracked objects:
  4481 ;;		On entry : 0/0
  4482 ;;		On exit  : 0/0
  4483 ;;		Unchanged: 0/0
  4484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4485 ;;      Params:         0       0       0       0       0       0       0       0       0
  4486 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4487 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4488 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4489 ;;Total ram usage:        0 bytes
  4490 ;; Hardware stack levels used: 1
  4491 ;; This function calls:
  4492 ;;		Nothing
  4493 ;; This function is called by:
  4494 ;;		_main
  4495 ;; This function uses a non-reentrant model
  4496 ;;
  4497                           
  4498                           	psect	text31
  4499  001C40                     __ptext31:
  4500                           	callstack 0
  4501  001C40                     _ConfigClock:
  4502                           	callstack 30
  4503  001C40  0E70               	movlw	112
  4504  001C42  12D3               	iorwf	211,f,c	;volatile
  4505  001C44  0012               	return		;funcret
  4506  001C46                     __end_of_ConfigClock:
  4507                           	callstack 0
  4508                           
  4509                           	psect	rparam
  4510  0000                     
  4511                           	psect	idloc
  4512                           
  4513                           ;Config register IDLOC0 @ 0x200000
  4514                           ;	unspecified, using default values
  4515  200000                     	org	2097152
  4516  200000  FF                 	db	255
  4517                           
  4518                           ;Config register IDLOC1 @ 0x200001
  4519                           ;	unspecified, using default values
  4520  200001                     	org	2097153
  4521  200001  FF                 	db	255
  4522                           
  4523                           ;Config register IDLOC2 @ 0x200002
  4524                           ;	unspecified, using default values
  4525  200002                     	org	2097154
  4526  200002  FF                 	db	255
  4527                           
  4528                           ;Config register IDLOC3 @ 0x200003
  4529                           ;	unspecified, using default values
  4530  200003                     	org	2097155
  4531  200003  FF                 	db	255
  4532                           
  4533                           ;Config register IDLOC4 @ 0x200004
  4534                           ;	unspecified, using default values
  4535  200004                     	org	2097156
  4536  200004  FF                 	db	255
  4537                           
  4538                           ;Config register IDLOC5 @ 0x200005
  4539                           ;	unspecified, using default values
  4540  200005                     	org	2097157
  4541  200005  FF                 	db	255
  4542                           
  4543                           ;Config register IDLOC6 @ 0x200006
  4544                           ;	unspecified, using default values
  4545  200006                     	org	2097158
  4546  200006  FF                 	db	255
  4547                           
  4548                           ;Config register IDLOC7 @ 0x200007
  4549                           ;	unspecified, using default values
  4550  200007                     	org	2097159
  4551  200007  FF                 	db	255
  4552                           
  4553                           	psect	config
  4554                           
  4555                           ;Config register CONFIG1L @ 0x300000
  4556                           ;	PLL Prescaler Selection bits
  4557                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  4558                           ;	System Clock Postscaler Selection bits
  4559                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  4560                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4561                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  4562  300000                     	org	3145728
  4563  300000  00                 	db	0
  4564                           
  4565                           ;Config register CONFIG1H @ 0x300001
  4566                           ;	Oscillator Selection bits
  4567                           ;	FOSC = INTOSC_XT, Internal oscillator, XT used by USB (INTXT)
  4568                           ;	Fail-Safe Clock Monitor Enable bit
  4569                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4570                           ;	Internal/External Oscillator Switchover bit
  4571                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4572  300001                     	org	3145729
  4573  300001  0A                 	db	10
  4574                           
  4575                           ;Config register CONFIG2L @ 0x300002
  4576                           ;	Power-up Timer Enable bit
  4577                           ;	PWRT = OFF, PWRT disabled
  4578                           ;	Brown-out Reset Enable bits
  4579                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4580                           ;	Brown-out Reset Voltage bits
  4581                           ;	BORV = 3, Minimum setting 2.05V
  4582                           ;	USB Voltage Regulator Enable bit
  4583                           ;	VREGEN = OFF, USB voltage regulator disabled
  4584  300002                     	org	3145730
  4585  300002  1F                 	db	31
  4586                           
  4587                           ;Config register CONFIG2H @ 0x300003
  4588                           ;	Watchdog Timer Enable bit
  4589                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4590                           ;	Watchdog Timer Postscale Select bits
  4591                           ;	WDTPS = 32768, 1:32768
  4592  300003                     	org	3145731
  4593  300003  1E                 	db	30
  4594                           
  4595                           ; Padding undefined space
  4596  300004                     	org	3145732
  4597  300004  FF                 	db	255
  4598                           
  4599                           ;Config register CONFIG3H @ 0x300005
  4600                           ;	CCP2 MUX bit
  4601                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  4602                           ;	PORTB A/D Enable bit
  4603                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  4604                           ;	Low-Power Timer 1 Oscillator Enable bit
  4605                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4606                           ;	MCLR Pin Enable bit
  4607                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4608  300005                     	org	3145733
  4609  300005  83                 	db	131
  4610                           
  4611                           ;Config register CONFIG4L @ 0x300006
  4612                           ;	Stack Full/Underflow Reset Enable bit
  4613                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4614                           ;	Single-Supply ICSP Enable bit
  4615                           ;	LVP = ON, Single-Supply ICSP enabled
  4616                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4617                           ;	ICPRT = OFF, ICPORT disabled
  4618                           ;	Extended Instruction Set Enable bit
  4619                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4620                           ;	Background Debugger Enable bit
  4621                           ;	DEBUG = 0x1, unprogrammed default
  4622  300006                     	org	3145734
  4623  300006  85                 	db	133
  4624                           
  4625                           ; Padding undefined space
  4626  300007                     	org	3145735
  4627  300007  FF                 	db	255
  4628                           
  4629                           ;Config register CONFIG5L @ 0x300008
  4630                           ;	Code Protection bit
  4631                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  4632                           ;	Code Protection bit
  4633                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  4634                           ;	Code Protection bit
  4635                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  4636                           ;	Code Protection bit
  4637                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  4638  300008                     	org	3145736
  4639  300008  0F                 	db	15
  4640                           
  4641                           ;Config register CONFIG5H @ 0x300009
  4642                           ;	Boot Block Code Protection bit
  4643                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  4644                           ;	Data EEPROM Code Protection bit
  4645                           ;	CPD = OFF, Data EEPROM is not code-protected
  4646  300009                     	org	3145737
  4647  300009  C0                 	db	192
  4648                           
  4649                           ;Config register CONFIG6L @ 0x30000A
  4650                           ;	Write Protection bit
  4651                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  4652                           ;	Write Protection bit
  4653                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  4654                           ;	Write Protection bit
  4655                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  4656                           ;	Write Protection bit
  4657                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  4658  30000A                     	org	3145738
  4659  30000A  0F                 	db	15
  4660                           
  4661                           ;Config register CONFIG6H @ 0x30000B
  4662                           ;	Configuration Register Write Protection bit
  4663                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  4664                           ;	Boot Block Write Protection bit
  4665                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  4666                           ;	Data EEPROM Write Protection bit
  4667                           ;	WRTD = OFF, Data EEPROM is not write-protected
  4668  30000B                     	org	3145739
  4669  30000B  E0                 	db	224
  4670                           
  4671                           ;Config register CONFIG7L @ 0x30000C
  4672                           ;	Table Read Protection bit
  4673                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4674                           ;	Table Read Protection bit
  4675                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4676                           ;	Table Read Protection bit
  4677                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4678                           ;	Table Read Protection bit
  4679                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4680  30000C                     	org	3145740
  4681  30000C  0F                 	db	15
  4682                           
  4683                           ;Config register CONFIG7H @ 0x30000D
  4684                           ;	Boot Block Table Read Protection bit
  4685                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  4686  30000D                     	org	3145741
  4687  30000D  40                 	db	64
  4688                           tosu	equ	0xFFF
  4689                           tosh	equ	0xFFE
  4690                           tosl	equ	0xFFD
  4691                           stkptr	equ	0xFFC
  4692                           pclatu	equ	0xFFB
  4693                           pclath	equ	0xFFA
  4694                           pcl	equ	0xFF9
  4695                           tblptru	equ	0xFF8
  4696                           tblptrh	equ	0xFF7
  4697                           tblptrl	equ	0xFF6
  4698                           tablat	equ	0xFF5
  4699                           prodh	equ	0xFF4
  4700                           prodl	equ	0xFF3
  4701                           indf0	equ	0xFEF
  4702                           postinc0	equ	0xFEE
  4703                           postdec0	equ	0xFED
  4704                           preinc0	equ	0xFEC
  4705                           plusw0	equ	0xFEB
  4706                           fsr0h	equ	0xFEA
  4707                           fsr0l	equ	0xFE9
  4708                           wreg	equ	0xFE8
  4709                           indf1	equ	0xFE7
  4710                           postinc1	equ	0xFE6
  4711                           postdec1	equ	0xFE5
  4712                           preinc1	equ	0xFE4
  4713                           plusw1	equ	0xFE3
  4714                           fsr1h	equ	0xFE2
  4715                           fsr1l	equ	0xFE1
  4716                           bsr	equ	0xFE0
  4717                           indf2	equ	0xFDF
  4718                           postinc2	equ	0xFDE
  4719                           postdec2	equ	0xFDD
  4720                           preinc2	equ	0xFDC
  4721                           plusw2	equ	0xFDB
  4722                           fsr2h	equ	0xFDA
  4723                           fsr2l	equ	0xFD9
  4724                           status	equ	0xFD8

Data Sizes:
    Strings     59
    Constant    0
    Data        0
    BSS         54
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160     15      68
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S956_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 35
		 -> STR_2(CODE[35]), STR_1(CODE[24]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 35
		 -> STR_2(CODE[35]), STR_1(CODE[24]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 35
		 -> STR_2(CODE[35]), STR_1(CODE[24]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 35
		 -> STR_2(CODE[35]), STR_1(CODE[24]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    DS1307_Read_Date@year	PTR unsigned char  size(2) Largest target is 1
		 -> YEAR(BANK0[1]), 

    DS1307_Read_Date@mes	PTR unsigned char  size(2) Largest target is 1
		 -> MES(BANK0[1]), 

    DS1307_Read_Date@dia_mes	PTR unsigned char  size(2) Largest target is 1
		 -> DIA_MES(BANK0[1]), 

    DS1307_Read_Date@dia_semana	PTR unsigned char  size(2) Largest target is 1
		 -> DIA_SEMANA(BANK0[1]), 

    DS1307_Read_H_24@horas	PTR unsigned char  size(2) Largest target is 1
		 -> HORA(BANK0[1]), 

    DS1307_Read_H_24@minutos	PTR unsigned char  size(2) Largest target is 1
		 -> MINUTO(BANK0[1]), 

    DS1307_Read_H_24@segundos	PTR unsigned char  size(2) Largest target is 1
		 -> SEGUNDO(BANK0[1]), 

    I2C_ReadData@Ptr_data	PTR unsigned char  size(2) Largest target is 1
		 -> DIA_SEMANA(BANK0[1]), DIA_MES(BANK0[1]), MES(BANK0[1]), YEAR(BANK0[1]), 
		 -> SEGUNDO(BANK0[1]), MINUTO(BANK0[1]), HORA(BANK0[1]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _atoi->_isspace
    _Serial_begin->___lldiv
    _DS1307_Write_Hours_24->___awdiv
    _DS1307_Write_Date->___awdiv
    _DS1307_Read_H_24->_I2C_ReadData
    _DS1307_Read_Date->_I2C_ReadData
    _DS1307_Config->_I2C_Write_Slave

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     2      5   17665
                                             92 COMRAM     2     2      0
                                             10 BANK0      5     0      5
                        _ConfigClock
                      _DS1307_Config
                   _DS1307_Read_Date
                   _DS1307_Read_H_24
                  _DS1307_Write_Date
              _DS1307_Write_Hours_24
                           _I2C_Init
                       _Serial_begin
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              14     4     10    7347
                                             90 COMRAM     2     2      0
                                              0 BANK0     10     0     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7139
                                             82 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6    6767
                                             60 COMRAM    22    16      6
                               _atoi
                              _fputc
                            _isdigit
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    3671
                                             28 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2621
                                             17 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1191
                                             10 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     790
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1198
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     357
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Serial_begin                                         6     2      4     458
                                             13 COMRAM     6     2      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DS1307_Write_Hours_24                                8     6      2    3100
                                              8 COMRAM     8     6      2
                           _I2C_Stop
                    _I2C_Write_Slave
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _DS1307_Write_Date                                    6     3      3    3242
                                              8 COMRAM     6     3      3
                          _I2C_Start
                           _I2C_Stop
                    _I2C_Write_Slave
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1360
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1364
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _DS1307_Read_H_24                                     8     2      6    1666
                                              3 COMRAM     8     2      6
                       _I2C_ReadData
                        _I2C_Restart
                          _I2C_Start
                           _I2C_Stop
                    _I2C_Write_Slave
 ---------------------------------------------------------------------------------
 (1) _DS1307_Read_Date                                    10     2      8    1830
                                              3 COMRAM    10     2      8
                       _I2C_ReadData
                        _I2C_Restart
                          _I2C_Start
                           _I2C_Stop
                    _I2C_Write_Slave
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_ReadData                                         3     0      3    1152
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _DS1307_Config                                        0     0      0      22
                          _I2C_Start
                    _I2C_Write_Slave
 ---------------------------------------------------------------------------------
 (2) _I2C_Write_Slave                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigClock                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigClock
   _DS1307_Config
     _I2C_Start
     _I2C_Write_Slave
   _DS1307_Read_Date
     _I2C_ReadData
     _I2C_Restart
     _I2C_Start
     _I2C_Stop
     _I2C_Write_Slave
   _DS1307_Read_H_24
     _I2C_ReadData
     _I2C_Restart
     _I2C_Start
     _I2C_Stop
     _I2C_Write_Slave
   _DS1307_Write_Date
     _I2C_Start
     _I2C_Stop
     _I2C_Write_Slave
     ___awdiv
     ___awmod
   _DS1307_Write_Hours_24
     _I2C_Stop
     _I2C_Write_Slave
     ___awdiv
     ___awmod
   _I2C_Init
   _Serial_begin
     ___lldiv
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _fputc
           _putch
         _isdigit
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
             _fputs
               _fputc
             _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      F      44       5       42.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A3      20        0.0%
DATA                 0      0      A3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Sep 04 18:46:53 2022

                             l5 1C44                               _i 0068              __size_of_I2C_Start 0012  
                   _SSPSTATbits 000FC7                              l20 1BFC                              l23 1C24  
                            l32 1C0E                              l26 1C32                              l50 1B9C  
                            l35 1C12                              l60 191A                              l53 1BAA  
                            l29 1C00                              l70 1974                              l38 1C20  
                            l63 1938                              l56 1BB8                              l73 1982  
                            l67 1956                    ___awdiv@sign 0006             ___wmul@multiplicand 0003  
                           l202 1B94                             l171 1BD8                             l236 1870  
                           l229 1860                             l190 171C                             l174 1BE6  
                           l168 1A44                             l433 1660                             l193 114A  
                           l187 1C3E                             l196 1406                             l446 17CC  
                           l199 104A                             l640 121A                             l650 14B6  
                           l647 123A                             l912 1560                             l657 14D6  
                           l921 0BD2                             l914 159C                             l909 151E  
                           l919 0BCA                             l943 093A                             l880 1B6E  
                           l929 0D92                             l962 19DC                             l963 19E4  
                           l956 0B90                             l991 0F1A                             l994 0F22  
                           l997 1B12                             _MES 0090                             u810 1BE6  
                           u811 1BE2                             u900 11A0                             u820 1884  
                           u901 119C                             u821 1880                             u910 11E0  
                           u830 1896                             u911 11DC                             u831 1892  
                           u920 1426                             u840 18BE                             u921 1422  
                           u841 18BA                             u930 1450                             u850 18F4  
                           u931 144C                             u851 18F0                             u940 147E  
                           u860 1ADA                             u941 147A                             u861 1AD6  
                           u870 1B3C                             u950 14E8                             u871 1B38  
                           u951 14E4                             u960 150A                             u881 1152  
                           u961 1506                             u890 1176                             u970 1560  
                           u891 1172                             u971 155C                             u980 1570  
                           u981 156C                             u990 1B0C                             u991 1B06  
                           _pad 14D8                    ___awmod@sign 0006                             wreg 000FE8  
             _DS1307_Write_Date 104C            __size_of_I2C_Restart 0012              ?_DS1307_Write_Date 0009  
                          l1020 1906                            l1005 1A96                            l2000 15F8  
                          l2010 1632                            l2002 1600                            l1034 1B48  
                          l2020 1658                            l2012 1634                            l2004 160E  
                          l2100 1698                            l1028 1ADA                            l2014 163A  
                          l2006 1614                            l2030 1738                            l2110 1712  
                          l2102 16CC                            l2008 162A                            l2016 1640  
                          l2040 176C                            l2032 173C                            l2024 171E  
                          l2120 1128                            l2112 1718                            l2104 1700  
                          l2200 1298                            l2018 1650                            l2050 17A6  
                          l2042 1774                            l2034 174A                            l2026 1722  
                          l2130 1146                            l2122 112E                            l2114 104E  
                          l2106 1706                            l2202 12BC                            l2140 133C  
                          l2132 1322                            l2044 1782                            l2052 17AC  
                          l2036 1752                            l2028 1730                            l2124 1134  
                          l2116 111E                            l2108 170C                            l2060 1984  
                          l2204 12DC                            l2150 13A2                            l2142 134C  
                          l2134 1326                            l2054 17BC                            l2046 1798  
                          l2038 1764                            l2126 113A                            l2118 1122  
                          l2070 1BE8                            l2062 198C                            l2206 1302  
                          l2160 0F38                            l2152 13D4                            l2144 135C  
                          l2136 132C                            l2056 17C4                            l2048 17A0  
                          l2128 1140                            l2072 1BEC                            l2080 19E6  
                          l2064 199A                            l2170 0F7E                            l2162 0F3E  
                          l2154 0F24                            l2146 136C                            l2138 1336  
                          l2074 1BEE                            l2090 1A40                            l2082 19E6  
                          l2066 19C0                            l2068 1C40                            l2092 1C34  
                          l2172 0F82                            l2164 0F4E                            l2156 0F28  
                          l2148 1370                            l2076 1BF0                            l2084 19E8  
                          l2260 0E50                            l1700 1408                            l2180 1B4A  
                          l2094 1C38                            l2174 0FB4                            l2166 0F5E  
                          l2158 0F2E                            l2078 1BF8                            l2086 19F6  
                          l1710 147E                            l1702 1426                            l2182 1B52  
                          l2190 1244                            l2176 0FE6                            l2168 0F6E  
                          l2096 1664                            l2088 1A3C                            l1800 0E02  
                          l1712 149E                            l1704 142E                            l1640 1872  
                          l1720 14FC                            l2192 1258                            l2178 1018  
                          l2098 1664                            l1810 0E2A                            l1802 0E06  
                          l1714 14B0                            l1706 1442                            l1650 18F4  
                          l1642 1884                            l1730 1542                            l1722 150A  
                          l2258 08FA                            l2194 125C                            l2186 123C  
                          l1812 0E32                            l1708 1450                            l1644 1896  
                          l1660 1ABA                            l1732 1570                            l1724 1516  
                          l1716 14D8                            l1900 0B12                            l2196 126A  
                          l2188 1240                            l1750 1A90                            l1742 1A46  
                          l1822 0EDA                            l1814 0E66                            l1806 0E0C  
                          l1638 1BD4                            l1646 18A0                            l1654 1A98  
                          l1662 1B14                            l1734 1584                            l1726 152A  
                          l1718 14E8                            l1910 0B4E                            l1902 0B20  
                          l2198 127C                            l1672 1B70                            l1744 1A4A  
                          l1824 0EEC                            l1808 0E22                            l1680 1158  
                          l1648 18BE                            l1656 1AA4                            l1664 1B20  
                          l1728 153E                            l1760 0BBE                            l1904 0B34  
                          l1840 0886                            l1832 083E                            l1930 1BFE  
                          l1674 1B8C                            l1738 1ADC                            l1746 1A5E  
                          l1826 0EFE                            l1818 0E9C                            l1690 11B2  
                          l1682 1176                            l1658 1AB6                            l1666 1B24  
                          l1770 0C86                            l1762 0BFA                            l1754 0B92  
                          l1850 08B0                            l1842 0892                            l1834 0862  
                          l1914 0B5A                            l1932 1C10                            l1748 1A8C  
                          l1692 11E0                            l1684 117E                            l1668 1B3C  
                          l1780 0D26                            l1772 0C8C                            l1764 0C02  
                          l1756 0BA2                            l1916 0B7E                            l1908 0B40  
                          l1844 0896                            l1836 0870                            l1934 1B98  
                          l1942 1928                            l1790 0D94                            l1694 1200  
                          l1686 1192                            l1678 114C                            l1782 0D40  
                          l1774 0C92                            l1766 0C0A                            l1758 0BA4  
                          l1870 094A                            l1862 08C8                            l1854 08B8  
                          l1846 08A8                            l1838 0882                            l1928 1C22  
                          l1952 1964                            l1944 1934                            l1936 1908  
                          l1960 17DE                            l1792 0DA8                            l1696 1202  
                          l1688 11A0                            l1784 0D5A                            l1768 0C10  
                          l1776 0CF6                            l1880 09C2                            l1872 094C  
                          l1954 1970                            l1946 1936                            l1938 190A  
                          l1970 1820                            l1962 17F4                            l1794 0DAC  
                          l1698 1214                            l1778 0D08                            l1786 0D6A  
                          l1882 09E2                            l1890 0A48                            l1874 0970  
                          l1866 08D4                            l1858 08C0                            l1956 1972  
                          l1948 1946                            l1980 159E                            l1972 183E  
                          l1964 17FC                            l1796 0DB0                            l1892 0A6C  
                          l1884 09F0                            l1876 09A6                            l1868 0928  
                          l1990 15CA                            l1982 15A2                            l1974 184E  
                          l1966 1808                            l1958 17CE                            l1798 0DCC  
                          l1894 0AB6                            l1878 09B4                            ?_pad 0012  
                          l1992 15D2                            l1984 15B0                            l1976 1850  
                          l1968 1816                            l1888 0A36                            l1994 15D6  
                          l1986 15B8                            l1978 185A                            l1898 0AEE  
                          l1996 15DE                            l1988 15BC                            l1998 15F0  
                          STR_1 0824                            STR_2 0801                            u1000 1B0E  
                          u1010 1A5E                            u1011 1A5A                            u1020 1A8C  
                          u1100 0DCC                            u1021 1A88                            u1101 0DC8  
                          u1110 0E02                            u1030 0BA2                            u1111 0DFE  
                          u1031 0B9E                            u1120 0E1E                            u1040 0BBE  
                          u1200 0970                            u1121 0E1A                            u1041 0BBA  
                          u1201 096C                            u1130 0ED4                            u1050 0D08  
                          u1210 09B4                            u1131 0ECE                            u1051 0D04  
                          u1211 09B0                            u1300 1BAA                            u1140 0ED6  
                          u1060 0D26                            u1220 0A30                            u1301 1BA6  
                          u1061 0D22                            u1221 0A2A                            u1310 1BB8  
                          u1150 0EEC                            u1070 0D40                            u1230 0A32  
                          u1311 1BB4                            u1151 0EE8                            u1071 0D3C  
                          u1320 191A                            u1400 183E                            u1160 0EFE  
                          u1080 0D5A                            u1240 0A48                            u1321 1916  
                          u1401 183A                            u1161 0EFA                            u1081 0D56  
                          u1241 0A44                            u1330 1928                            u1410 15B0  
                          u1090 0D6A                            u1250 0A6C                            u1170 0862  
                          u1331 1924                            u1411 15AC                            u1091 0D66  
                          u1251 0A68                            u1171 085E                            u1340 1946  
                          u1420 15CA                            u1500 1782                            u1260 0B12  
                          u1180 093A                            u1341 1942                            u1421 15C6  
                          u1501 177E                            u1261 0B0E                            u1181 0936  
                          u1270 1C32                            u1350 1956                            u1430 15F0  
                          u1510 1798                            u1190 094A                            u1271 1C2E  
                          u1351 1952                            u1431 15EC                            u1511 1794  
                          u1191 0946                            u1360 1964                            u1280 1C0E  
                          u1440 160E                            u1520 17BC                            u1361 1960  
                          u1281 1C0A                            u1441 160A                            u1521 17B8  
                          u1370 1982                            u1290 1C20                            u1450 162A  
                          u1530 19DC                            u1371 197E                            u1291 1C1C  
                          u1451 1626                            u1531 19D8                            u1460 1650  
                          u1380 17F4                            u1540 1A2A                            u1461 164C  
                          u1381 17F0                            u1470 1730                            u1390 1816  
                          u1471 172C                            u1391 1812                            u1480 174A  
                          u1481 1746                            u1545 1A20                            u1490 1764  
                          u1491 1760                            u1557 130C                            _HORA 0094  
                          _YEAR 0091           __size_of_I2C_ReadData 007C                            _dbuf 006E  
                          _atoi 0D94                            _main 123C                   _DS1307_Config 1C34  
                          _prec 0064                __end_of_I2C_Init 1BFE                            _nout 0060  
           ??_DS1307_Write_Date 000C                            pad@i 0019                            pad@p 0016  
                          fsr1h 000FE2                            fsr2h 000FDA                            indf2 000FDF  
                          fsr1l 000FE1                            pad@w 001B                            fsr2l 000FD9  
                          _utoa 0B92            DS1307_Write_Date@mes 0009                __end_of_I2C_Stop 1C10  
                          prodh 000FF4                            prodl 000FF3                            start 0000  
           __end_of_ConfigClock 1C46                    ___param_bank 000000                           ??_pad 0018  
                         ?_atoi 0008                           ?_main 009F                 __end_of___awdiv 1662  
               __end_of___awmod 17CE                 __end_of___lldiv 1872                           ?_utoa 001D  
               __end_of___lodiv 123C                 ___awdiv@divisor 0003       __end_of_DS1307_Write_Date 114C  
               __end_of___lomod 14D8                 _I2C_Write_Slave 1B96                 ___awdiv@counter 0005  
                         _RCSTA 000FAB                    vfpfcnvrt@fmt 003F                    vfpfcnvrt@llu 0047  
                         _SPBRG 000FAF                           _TRISB 000F93                           _TXREG 000FAD  
                         _TXSTA 000FAC                           _Val_H 005F                           _Val_L 006D  
                  _I2C_ReadData 1908                           _flags 0066                           _fputc 1872  
                         _fputs 1A98                 __end_of_isdigit 1B14                           atoi@n 0015  
                         pad@fp 0012                           atoi@s 0008                           _width 0062  
                         _putch 1BD2                 __end_of_isspace 1A98               __end_of_I2C_Start 1C34  
         DS1307_Write_Date@year 000A                           tablat 000FF5                  ?_DS1307_Config 0001  
                         utoa@d 001F                           utoa@i 003B                           utoa@n 0033  
                         utoa@p 002F                           utoa@w 0031                           status 000FD8  
              ___lodiv@dividend 0001                 __initialization 1BBA                    __end_of_atoi 0F24  
                  __end_of_main 1322             I2C_Write_Slave@data 0001                    __end_of_utoa 0D94  
 DS1307_Write_Hours_24@segundos 000A                          ??_atoi 000A                          ??_main 005D  
                        ??_utoa 0027                   __activetblptr 000002                ___lodiv@quotient 0011  
    DS1307_Read_Date@dia_semana 000A  __size_of_DS1307_Write_Hours_24 00BC   __end_of_DS1307_Write_Hours_24 171E  
                        ?_fputc 0002                          ?_fputs 000B                ___awdiv@dividend 0001  
                        ?_putch 0001                          _MINUTO 0093                     _ConfigClock 1C40  
                 vfpfcnvrt@done 004F                          _SPBRGH 000FB0                          _SSPADD 000FC8  
                        _SSPBUF 000FC9                    vfprintf@cfmt 0059                          ___wmul 1B70  
       __end_of_I2C_Write_Slave 1BBA                       ??___awdiv 0005                       ??___awmod 0005  
                     ??___lldiv 0009                       ??___lodiv 0011                       ??___lomod 0011  
                        clear_0 1BC0                ___awdiv@quotient 0007                 ___awmod@divisor 0003  
                        isa$std 000001                 ___awmod@counter 0005                          _printf 1B4A  
                        pad@buf 0014                          _strlen 1B14      __size_of_DS1307_Write_Date 0100  
       DS1307_Read_H_24@minutos 0006                          fputc@c 0002                          fputs@c 000F  
                        fputs@i 0010                          fputs@s 000B                       ??_isdigit 0003  
                     ?_I2C_Init 0001                       ?_I2C_Stop 0001                    __mediumconst 0000  
                     ??_isspace 0003                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                          putch@c 0001                __end_of_vfprintf 19E6  
                        utoa@fp 001D                 ??_DS1307_Config 0002       __size_of_DS1307_Read_H_24 00E6  
     __size_of_DS1307_Read_Date 0128                      __accesstop 0060         __end_of__initialization 1BC8  
                 ___rparam_used 000001     DS1307_Write_Hours_24@Hor_ds 000F     DS1307_Write_Hours_24@Min_ds 000E  
   DS1307_Write_Hours_24@Seg_ds 000D                  __pcstackCOMRAM 0001                   __end_of_fputc 1908  
                 __end_of_fputs 1ADC                   __end_of_putch 1BE8                      ??_I2C_Init 0001  
                    ??_I2C_Stop 0001                         ??_fputc 0006                         ??_fputs 000F  
                       ??_putch 0001                      __pbssBANK0 0060                   ?_Serial_begin 000E  
   DS1307_Write_Date@dia_semana 000B                         ?___wmul 0001                ?_I2C_Write_Slave 0001  
                       _BAUDCON 000FB8                         ?_printf 0095                         _DIA_MES 008F  
                       ?_strlen 0001                   ??_I2C_Restart 0001                         _SEGUNDO 0092  
            __size_of_vfpfcnvrt 0354                ___lomod@dividend 0001                  ??_Serial_begin 0012  
                     _I2C_Start 1C22                         __Hparam 0000                         __Lparam 0000  
                 Serial_begin@n 0012                         ___awdiv 159E                         ___awmod 171E  
                       ___lldiv 17CE                 __size_of___wmul 0026                         ___lodiv 114C  
                       ___lomod 1408                       ?_vfprintf 0053                    __psmallconst 0800  
                       _decenas 006C                         __pcinit 1BBA                         __ramtop 0800  
                       __ptext0 123C                         __ptext1 1B4A                         __ptext2 1984  
                       __ptext3 083E                         __ptext4 0B92                         __ptext5 14D8  
                       __ptext6 1B14                         __ptext7 1A98                         __ptext8 1872  
                       __ptext9 1BD2                 __size_of_printf 0026                 __size_of_strlen 0036  
                  __size_of_pad 00C6                         _isdigit 1ADC                ___awmod@dividend 0001  
           DS1307_Read_Date@mes 0006                         _isspace 1A46                         atoi@neg 000E  
           __end_of_I2C_Restart 1C22            end_of_initialization 1BC8                _DS1307_Read_H_24 1322  
              _DS1307_Read_Date 0F24                    ?_ConfigClock 0001                         fputc@fp 0004  
                 __Lmediumconst 0000        DS1307_Read_H_24@segundos 0008                         fputs@fp 000D  
                    ?_I2C_Start 0001                 ___lldiv@divisor 0005                 ___lldiv@counter 000D  
             __end_of_vfpfcnvrt 0B92                         postdec2 000FDD                         postinc0 000FEE  
                       postinc1 000FE6                         postinc2 000FDE                      ??_vfprintf 0059  
                       strlen@a 0003                         strlen@s 0001                       _TRISCbits 000F94  
             __size_of_I2C_Init 0016               __size_of_I2C_Stop 0012           _DS1307_Write_Hours_24 1662  
                     _TXSTAbits 000FAC                     vfpfcnvrt@ap 0041                     vfpfcnvrt@fp 003D  
                __end_of___wmul 1B96            __end_of_Serial_begin 1A46           DS1307_Read_H_24@horas 0004  
                __end_of_printf 1B70                     _I2C_Restart 1C10                  __end_of_strlen 1B4A  
           start_initialization 1BBA                 ___lodiv@divisor 0009        I2C_ReadData@var_Ack_nAck 0003  
               ___lodiv@counter 0019                     __end_of_pad 159E    DS1307_Write_Hours_24@minutos 0009  
         __end_of_DS1307_Config 1C40                     ??_I2C_Start 0001                     vfprintf@fmt 0055  
          I2C_ReadData@Ptr_data 0001                        ??___wmul 0005                        ??_printf 005B  
                      ??_strlen 0003                     __pbssCOMRAM 005F                   ?_I2C_ReadData 0001  
                 __pcstackBANK0 0095      DS1307_Write_Hours_24@horas 0010          ?_DS1307_Write_Hours_24 0009  
                     _atoi$1056 0010                       _atoi$1057 0014                       _atoi$1058 0012  
          __size_of_ConfigClock 0006                        ?___awdiv 0001                        ?___awmod 0001  
                      ?___lldiv 0001                        ?___lodiv 0001                        ?___lomod 0001  
      __end_of_DS1307_Read_H_24 1408        __end_of_DS1307_Read_Date 104C               __size_of_vfprintf 0062  
               ___lomod@divisor 0009                     __smallconst 0800                 ___lomod@counter 0011  
                      ?_isdigit 0001                        _I2C_Init 1BE8                  ??_I2C_ReadData 0004  
      __size_of_I2C_Write_Slave 0024                        _I2C_Stop 1BFE                        ?_isspace 0001  
                __size_of_fputc 0096                  __size_of_fputs 0044                  __size_of_putch 0016  
                ___wmul@product 0005           __size_of_Serial_begin 0060                       _vfpfcnvrt 083E  
             ___wmul@multiplier 0001                    _isspace$1074 0007                    _Serial_begin 19E6  
                      __Hrparam 0000                      vfprintf@ap 0057                        __Lrparam 0000  
                    vfprintf@fp 0053                __size_of___awdiv 00C4                __size_of___awmod 00B0  
                    _DIA_SEMANA 008E                __size_of___lldiv 00A4                __size_of___lodiv 00F0  
              __size_of___lomod 00D0                      ?_vfpfcnvrt 003D                    ?_I2C_Restart 0001  
              __size_of_isdigit 0038                        _centenas 006B                __size_of_isspace 0052  
                      __ptext10 1408                        __ptext11 114C                        __ptext20 104C  
                      __ptext12 0D94                        __ptext21 171E                        __ptext13 1A46  
                      __ptext30 1C22                        __ptext22 159E                        __ptext14 1ADC  
                      __ptext31 1C40                        __ptext23 1322                        __ptext15 1B70  
                      __ptext24 0F24                        __ptext16 19E6                        __ptext25 1BFE  
                      __ptext17 17CE                        __ptext26 1C10                        __ptext18 1BE8  
                      __ptext27 1908                        __ptext19 1662                        __ptext28 1C34  
                      __ptext29 1B96               ??_I2C_Write_Slave 0001                   __size_of_atoi 0190  
                 __size_of_main 00E6                   __size_of_utoa 0202            DS1307_Read_Date@year 0004  
          __end_of_I2C_ReadData 1984                        isa$xinst 000000        DS1307_Write_Date@dia_mes 000E  
       DS1307_Read_Date@dia_mes 0008                        _unidades 006A                        _vfprintf 1984  
                     printf@fmt 0095                        main@argc 009F                        main@argv 00A1  
                _vfpfcnvrt$1038 0051         ??_DS1307_Write_Hours_24 000B                        isdigit@c 0001  
                      isspace@c 0001                ___lldiv@dividend 0001                      _OSCCONbits 000FD3  
                      printf@ap 005B                     ??_vfpfcnvrt 0043               ?_DS1307_Read_H_24 0004  
             ?_DS1307_Read_Date 0004          __size_of_DS1307_Config 000C             Serial_begin@baudios 000E  
            ??_DS1307_Read_H_24 000A              ??_DS1307_Read_Date 000C                ___lldiv@quotient 0009  
                   _SSPCON1bits 000FC6                     _SSPCON2bits 000FC5                   ??_ConfigClock 0001  
