

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Aug 07 18:54:47 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19  0000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4550 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     
    56                           	psect	idataCOMRAM
    57  007D92                     __pidataCOMRAM:
    58                           	callstack 0
    59                           
    60                           ;initializer for _Display_7Seg_A
    61  007D92  C0                 	db	192
    62  007D93  F9                 	db	249
    63  007D94  A4                 	db	164
    64  007D95  B0                 	db	176
    65  007D96  99                 	db	153
    66  007D97  92                 	db	146
    67  007D98  82                 	db	130
    68  007D99  F8                 	db	248
    69  007D9A  80                 	db	128
    70  007D9B  90                 	db	144
    71                           
    72                           	psect	nvCOMRAM
    73  000019                     __pnvCOMRAM:
    74                           	callstack 0
    75  000019                     _unidades:
    76                           	callstack 0
    77  000019                     	ds	1
    78  00001A                     _decenas:
    79                           	callstack 0
    80  00001A                     	ds	1
    81  00001B                     _i:
    82                           	callstack 0
    83  00001B                     	ds	1
    84  0000                     _PORTC	set	3970
    85  0000                     _LATC	set	3979
    86  0000                     _TRISC	set	3988
    87  0000                     _LATB	set	3978
    88  0000                     _TRISB	set	3987
    89  0000                     _LATD	set	3980
    90  0000                     _TRISD	set	3989
    91  0000                     _OSCCONbits	set	4051
    92                           
    93                           ; #config settings
    94                           
    95                           	psect	cinit
    96  007D9C                     __pcinit:
    97                           	callstack 0
    98  007D9C                     start_initialization:
    99                           	callstack 0
   100  007D9C                     __initialization:
   101                           	callstack 0
   102                           
   103                           ; Initialize objects allocated to COMRAM (10 bytes)
   104                           ; load TBLPTR registers with __pidataCOMRAM
   105  007D9C  0E92               	movlw	low __pidataCOMRAM
   106  007D9E  6EF6               	movwf	tblptrl,c
   107  007DA0  0E7D               	movlw	high __pidataCOMRAM
   108  007DA2  6EF7               	movwf	tblptrh,c
   109  007DA4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   110  007DA6  6EF8               	movwf	tblptru,c
   111  007DA8  EE00  F00F         	lfsr	0,__pdataCOMRAM
   112  007DAC  EE10 F00A          	lfsr	1,10
   113  007DB0                     copy_data0:
   114  007DB0  0009               	tblrd		*+
   115  007DB2  CFF5 FFEE          	movff	tablat,postinc0
   116  007DB6  50E5               	movf	postdec1,w,c
   117  007DB8  50E1               	movf	fsr1l,w,c
   118  007DBA  E1FA               	bnz	copy_data0
   119                           
   120                           ; Clear objects allocated to COMRAM (2 bytes)
   121  007DBC  6A1D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   122  007DBE  6A1C               	clrf	__pbssCOMRAM& (0+255),c
   123  007DC0                     end_of_initialization:
   124                           	callstack 0
   125  007DC0                     __end_of__initialization:
   126                           	callstack 0
   127  007DC0  0100               	movlb	0
   128  007DC2  EF9D  F03F         	goto	_main	;jump to C main() function
   129                           
   130                           	psect	bssCOMRAM
   131  00001C                     __pbssCOMRAM:
   132                           	callstack 0
   133  00001C                     _Cuenta:
   134                           	callstack 0
   135  00001C                     	ds	1
   136  00001D                     _j:
   137                           	callstack 0
   138  00001D                     	ds	1
   139                           
   140                           	psect	dataCOMRAM
   141  00000F                     __pdataCOMRAM:
   142                           	callstack 0
   143  00000F                     _Display_7Seg_A:
   144                           	callstack 0
   145  00000F                     	ds	10
   146                           
   147                           	psect	cstackCOMRAM
   148  000001                     __pcstackCOMRAM:
   149                           	callstack 0
   150  000001                     ?___awdiv:
   151                           	callstack 0
   152  000001                     ?___awmod:
   153                           	callstack 0
   154  000001                     ___awdiv@dividend:
   155                           	callstack 0
   156  000001                     ___awmod@dividend:
   157                           	callstack 0
   158                           
   159                           ; 2 bytes @ 0x0
   160  000001                     	ds	2
   161  000003                     ___awdiv@divisor:
   162                           	callstack 0
   163  000003                     ___awmod@divisor:
   164                           	callstack 0
   165                           
   166                           ; 2 bytes @ 0x2
   167  000003                     	ds	2
   168  000005                     ___awdiv@counter:
   169                           	callstack 0
   170  000005                     ___awmod@counter:
   171                           	callstack 0
   172                           
   173                           ; 1 bytes @ 0x4
   174  000005                     	ds	1
   175  000006                     ___awdiv@sign:
   176                           	callstack 0
   177  000006                     ___awmod@sign:
   178                           	callstack 0
   179                           
   180                           ; 1 bytes @ 0x5
   181  000006                     	ds	1
   182  000007                     ___awdiv@quotient:
   183                           	callstack 0
   184                           
   185                           ; 2 bytes @ 0x6
   186  000007                     	ds	2
   187  000009                     
   188                           ; 2 bytes @ 0x8
   189  000009                     	ds	2
   190  00000B                     
   191                           ; 3 bytes @ 0xA
   192  00000B                     	ds	3
   193  00000E                     ??_main:
   194                           
   195                           ; 1 bytes @ 0xD
   196  00000E                     	ds	1
   197                           
   198 ;;
   199 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   200 ;;
   201 ;; *************** function _main *****************
   202 ;; Defined at:
   203 ;;		line 22 in file "main.c"
   204 ;; Parameters:    Size  Location     Type
   205 ;;  argc            2    8[COMRAM] int 
   206 ;;  argv            3   10[COMRAM] PTR PTR unsigned char 
   207 ;; Auto vars:     Size  Location     Type
   208 ;;		None
   209 ;; Return value:  Size  Location     Type
   210 ;;                  2    8[COMRAM] int 
   211 ;; Registers used:
   212 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   213 ;; Tracked objects:
   214 ;;		On entry : 0/0
   215 ;;		On exit  : 0/0
   216 ;;		Unchanged: 0/0
   217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   218 ;;      Params:         5       0       0       0       0       0       0       0       0
   219 ;;      Locals:         0       0       0       0       0       0       0       0       0
   220 ;;      Temps:          1       0       0       0       0       0       0       0       0
   221 ;;      Totals:         6       0       0       0       0       0       0       0       0
   222 ;;Total ram usage:        6 bytes
   223 ;; Hardware stack levels required when called: 1
   224 ;; This function calls:
   225 ;;		_ConfigClock
   226 ;;		___awdiv
   227 ;;		___awmod
   228 ;; This function is called by:
   229 ;;		Startup code after reset
   230 ;; This function uses a non-reentrant model
   231 ;;
   232                           
   233                           	psect	text0
   234  007F3A                     __ptext0:
   235                           	callstack 0
   236  007F3A                     _main:
   237                           	callstack 30
   238  007F3A                     
   239                           ;main.c: 24:     ConfigClock();
   240  007F3A  ECC6  F03E         	call	_ConfigClock	;wreg free
   241  007F3E                     
   242                           ;main.c: 25:     TRISD = 0X00;
   243  007F3E  0E00               	movlw	0
   244  007F40  6E95               	movwf	149,c	;volatile
   245  007F42                     
   246                           ;main.c: 26:     LATD = 0XFF;
   247  007F42  688C               	setf	140,c	;volatile
   248  007F44                     
   249                           ;main.c: 27:     TRISB = 0X00;
   250  007F44  0E00               	movlw	0
   251  007F46  6E93               	movwf	147,c	;volatile
   252  007F48                     
   253                           ;main.c: 28:     LATB = 0XFF;
   254  007F48  688A               	setf	138,c	;volatile
   255  007F4A                     
   256                           ;main.c: 31:     TRISC |= (1<<0) | (1<<1);
   257  007F4A  0E03               	movlw	3
   258  007F4C  1294               	iorwf	148,f,c	;volatile
   259  007F4E                     
   260                           ;main.c: 33:     TRISC &= ~(1<<6) & ~(1<<7);
   261  007F4E  0E3F               	movlw	63
   262  007F50  1694               	andwf	148,f,c	;volatile
   263  007F52                     l1030:
   264                           
   265                           ;main.c: 37:         unidades = Cuenta%10 ;
   266  007F52  C01C  F001         	movff	_Cuenta,___awmod@dividend
   267  007F56  6A02               	clrf	(___awmod@dividend+1)^0,c
   268  007F58  0E00               	movlw	0
   269  007F5A  6E04               	movwf	(___awmod@divisor+1)^0,c
   270  007F5C  0E0A               	movlw	10
   271  007F5E  6E03               	movwf	___awmod@divisor^0,c
   272  007F60  ECE3  F03E         	call	___awmod	;wreg free
   273  007F64  5001               	movf	?___awmod^0,w,c
   274  007F66  6E19               	movwf	_unidades^0,c
   275  007F68                     
   276                           ;main.c: 38:         decenas = Cuenta/10;
   277  007F68  C01C  F001         	movff	_Cuenta,___awdiv@dividend
   278  007F6C  6A02               	clrf	(___awdiv@dividend+1)^0,c
   279  007F6E  0E00               	movlw	0
   280  007F70  6E04               	movwf	(___awdiv@divisor+1)^0,c
   281  007F72  0E0A               	movlw	10
   282  007F74  6E03               	movwf	___awdiv@divisor^0,c
   283  007F76  EC3B  F03F         	call	___awdiv	;wreg free
   284  007F7A  5001               	movf	?___awdiv^0,w,c
   285  007F7C  6E1A               	movwf	_decenas^0,c
   286  007F7E                     
   287                           ;main.c: 39:         for(i=0;i<255;i++){
   288  007F7E  0E00               	movlw	0
   289  007F80  6E1B               	movwf	_i^0,c
   290  007F82                     l1036:
   291  007F82  281B               	incf	_i^0,w,c
   292  007F84  A4D8               	btfss	status,2,c
   293  007F86  EFC7  F03F         	goto	u391
   294  007F8A  EFC9  F03F         	goto	u390
   295  007F8E                     u391:
   296  007F8E  EFCB  F03F         	goto	l1040
   297  007F92                     u390:
   298  007F92  EFF0  F03F         	goto	l1056
   299  007F96                     l1040:
   300                           
   301                           ;main.c: 40:         LATD = Display_7Seg_A[unidades];
   302  007F96  0E0F               	movlw	low _Display_7Seg_A
   303  007F98  2419               	addwf	_unidades^0,w,c
   304  007F9A  6ED9               	movwf	fsr2l,c
   305  007F9C  6ADA               	clrf	fsr2h,c
   306  007F9E  0E00               	movlw	high _Display_7Seg_A
   307  007FA0  22DA               	addwfc	fsr2h,f,c
   308  007FA2  50DF               	movf	indf2,w,c
   309  007FA4  6E8C               	movwf	140,c	;volatile
   310  007FA6                     
   311                           ;main.c: 43:         LATC &= ~(1<<7);
   312  007FA6  9E8B               	bcf	139,7,c	;volatile
   313  007FA8                     
   314                           ;main.c: 44:         _delay((unsigned long)((1)*(8000000UL/4000.0)));
   315  007FA8  0E03               	movlw	3
   316  007FAA  6E0E               	movwf	??_main^0,c
   317  007FAC  0E98               	movlw	152
   318  007FAE                     u417:
   319  007FAE  2EE8               	decfsz	wreg,f,c
   320  007FB0  D7FE               	bra	u417
   321  007FB2  2E0E               	decfsz	??_main^0,f,c
   322  007FB4  D7FC               	bra	u417
   323  007FB6                     
   324                           ;main.c: 45:         LATC |= (1<<7);
   325  007FB6  8E8B               	bsf	139,7,c	;volatile
   326  007FB8                     
   327                           ;main.c: 47:         LATD = Display_7Seg_A[decenas];
   328  007FB8  0E0F               	movlw	low _Display_7Seg_A
   329  007FBA  241A               	addwf	_decenas^0,w,c
   330  007FBC  6ED9               	movwf	fsr2l,c
   331  007FBE  6ADA               	clrf	fsr2h,c
   332  007FC0  0E00               	movlw	high _Display_7Seg_A
   333  007FC2  22DA               	addwfc	fsr2h,f,c
   334  007FC4  50DF               	movf	indf2,w,c
   335  007FC6  6E8C               	movwf	140,c	;volatile
   336  007FC8                     
   337                           ;main.c: 49:         LATC &= ~(1<<6);
   338  007FC8  9C8B               	bcf	139,6,c	;volatile
   339  007FCA                     
   340                           ;main.c: 50:         _delay((unsigned long)((1)*(8000000UL/4000.0)));
   341  007FCA  0E03               	movlw	3
   342  007FCC  6E0E               	movwf	??_main^0,c
   343  007FCE  0E98               	movlw	152
   344  007FD0                     u427:
   345  007FD0  2EE8               	decfsz	wreg,f,c
   346  007FD2  D7FE               	bra	u427
   347  007FD4  2E0E               	decfsz	??_main^0,f,c
   348  007FD6  D7FC               	bra	u427
   349                           
   350                           ;main.c: 51:         LATC |= (1<<6);
   351  007FD8  8C8B               	bsf	139,6,c	;volatile
   352                           
   353                           ;main.c: 52:         }
   354  007FDA  2A1B               	incf	_i^0,f,c
   355  007FDC  EFC1  F03F         	goto	l1036
   356  007FE0                     l1056:
   357                           
   358                           ;main.c: 53:         Cuenta++;
   359  007FE0  2A1C               	incf	_Cuenta^0,f,c
   360  007FE2                     
   361                           ;main.c: 54:         if (Cuenta == 100 ) Cuenta =0;
   362  007FE2  0E64               	movlw	100
   363  007FE4  181C               	xorwf	_Cuenta^0,w,c
   364  007FE6  A4D8               	btfss	status,2,c
   365  007FE8  EFF8  F03F         	goto	u401
   366  007FEC  EFFA  F03F         	goto	u400
   367  007FF0                     u401:
   368  007FF0  EFA9  F03F         	goto	l1030
   369  007FF4                     u400:
   370  007FF4  0E00               	movlw	0
   371  007FF6  6E1C               	movwf	_Cuenta^0,c
   372  007FF8  EFA9  F03F         	goto	l1030
   373  007FFC  EF00  F000         	goto	start
   374  008000                     __end_of_main:
   375                           	callstack 0
   376                           
   377 ;; *************** function ___awmod *****************
   378 ;; Defined at:
   379 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
   380 ;; Parameters:    Size  Location     Type
   381 ;;  dividend        2    0[COMRAM] int 
   382 ;;  divisor         2    2[COMRAM] int 
   383 ;; Auto vars:     Size  Location     Type
   384 ;;  sign            1    5[COMRAM] unsigned char 
   385 ;;  counter         1    4[COMRAM] unsigned char 
   386 ;; Return value:  Size  Location     Type
   387 ;;                  2    0[COMRAM] int 
   388 ;; Registers used:
   389 ;;		wreg, status,2, status,0
   390 ;; Tracked objects:
   391 ;;		On entry : 0/0
   392 ;;		On exit  : 0/0
   393 ;;		Unchanged: 0/0
   394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   395 ;;      Params:         4       0       0       0       0       0       0       0       0
   396 ;;      Locals:         2       0       0       0       0       0       0       0       0
   397 ;;      Temps:          0       0       0       0       0       0       0       0       0
   398 ;;      Totals:         6       0       0       0       0       0       0       0       0
   399 ;;Total ram usage:        6 bytes
   400 ;; Hardware stack levels used: 1
   401 ;; This function calls:
   402 ;;		Nothing
   403 ;; This function is called by:
   404 ;;		_main
   405 ;; This function uses a non-reentrant model
   406 ;;
   407                           
   408                           	psect	text1
   409  007DC6                     __ptext1:
   410                           	callstack 0
   411  007DC6                     ___awmod:
   412                           	callstack 30
   413  007DC6  0E00               	movlw	0
   414  007DC8  6E06               	movwf	___awmod@sign^0,c
   415  007DCA  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
   416  007DCC  EFEC  F03E         	goto	u330
   417  007DD0  EFEA  F03E         	goto	u331
   418  007DD4                     u331:
   419  007DD4  EFF2  F03E         	goto	l988
   420  007DD8                     u330:
   421  007DD8  6C01               	negf	___awmod@dividend^0,c
   422  007DDA  1E02               	comf	(___awmod@dividend+1)^0,f,c
   423  007DDC  B0D8               	btfsc	status,0,c
   424  007DDE  2A02               	incf	(___awmod@dividend+1)^0,f,c
   425  007DE0  0E01               	movlw	1
   426  007DE2  6E06               	movwf	___awmod@sign^0,c
   427  007DE4                     l988:
   428  007DE4  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
   429  007DE6  EFF9  F03E         	goto	u340
   430  007DEA  EFF7  F03E         	goto	u341
   431  007DEE                     u341:
   432  007DEE  EFFD  F03E         	goto	l992
   433  007DF2                     u340:
   434  007DF2  6C03               	negf	___awmod@divisor^0,c
   435  007DF4  1E04               	comf	(___awmod@divisor+1)^0,f,c
   436  007DF6  B0D8               	btfsc	status,0,c
   437  007DF8  2A04               	incf	(___awmod@divisor+1)^0,f,c
   438  007DFA                     l992:
   439  007DFA  5003               	movf	___awmod@divisor^0,w,c
   440  007DFC  1004               	iorwf	(___awmod@divisor+1)^0,w,c
   441  007DFE  B4D8               	btfsc	status,2,c
   442  007E00  EF04  F03F         	goto	u351
   443  007E04  EF06  F03F         	goto	u350
   444  007E08                     u351:
   445  007E08  EF2A  F03F         	goto	l1008
   446  007E0C                     u350:
   447  007E0C  0E01               	movlw	1
   448  007E0E  6E05               	movwf	___awmod@counter^0,c
   449  007E10  EF0E  F03F         	goto	l998
   450  007E14                     l996:
   451  007E14  90D8               	bcf	status,0,c
   452  007E16  3603               	rlcf	___awmod@divisor^0,f,c
   453  007E18  3604               	rlcf	(___awmod@divisor+1)^0,f,c
   454  007E1A  2A05               	incf	___awmod@counter^0,f,c
   455  007E1C                     l998:
   456  007E1C  AE04               	btfss	(___awmod@divisor+1)^0,7,c
   457  007E1E  EF13  F03F         	goto	u361
   458  007E22  EF15  F03F         	goto	u360
   459  007E26                     u361:
   460  007E26  EF0A  F03F         	goto	l996
   461  007E2A                     u360:
   462  007E2A                     l1000:
   463  007E2A  5003               	movf	___awmod@divisor^0,w,c
   464  007E2C  5C01               	subwf	___awmod@dividend^0,w,c
   465  007E2E  5004               	movf	(___awmod@divisor+1)^0,w,c
   466  007E30  5802               	subwfb	(___awmod@dividend+1)^0,w,c
   467  007E32  A0D8               	btfss	status,0,c
   468  007E34  EF1E  F03F         	goto	u371
   469  007E38  EF20  F03F         	goto	u370
   470  007E3C                     u371:
   471  007E3C  EF24  F03F         	goto	l1004
   472  007E40                     u370:
   473  007E40  5003               	movf	___awmod@divisor^0,w,c
   474  007E42  5E01               	subwf	___awmod@dividend^0,f,c
   475  007E44  5004               	movf	(___awmod@divisor+1)^0,w,c
   476  007E46  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
   477  007E48                     l1004:
   478  007E48  90D8               	bcf	status,0,c
   479  007E4A  3204               	rrcf	(___awmod@divisor+1)^0,f,c
   480  007E4C  3203               	rrcf	___awmod@divisor^0,f,c
   481  007E4E  2E05               	decfsz	___awmod@counter^0,f,c
   482  007E50  EF15  F03F         	goto	l1000
   483  007E54                     l1008:
   484  007E54  5006               	movf	___awmod@sign^0,w,c
   485  007E56  B4D8               	btfsc	status,2,c
   486  007E58  EF30  F03F         	goto	u381
   487  007E5C  EF32  F03F         	goto	u380
   488  007E60                     u381:
   489  007E60  EF36  F03F         	goto	l1012
   490  007E64                     u380:
   491  007E64  6C01               	negf	___awmod@dividend^0,c
   492  007E66  1E02               	comf	(___awmod@dividend+1)^0,f,c
   493  007E68  B0D8               	btfsc	status,0,c
   494  007E6A  2A02               	incf	(___awmod@dividend+1)^0,f,c
   495  007E6C                     l1012:
   496  007E6C  C001  F001         	movff	___awmod@dividend,?___awmod
   497  007E70  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
   498  007E74  0012               	return		;funcret
   499  007E76                     __end_of___awmod:
   500                           	callstack 0
   501                           
   502 ;; *************** function ___awdiv *****************
   503 ;; Defined at:
   504 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
   505 ;; Parameters:    Size  Location     Type
   506 ;;  dividend        2    0[COMRAM] int 
   507 ;;  divisor         2    2[COMRAM] int 
   508 ;; Auto vars:     Size  Location     Type
   509 ;;  quotient        2    6[COMRAM] int 
   510 ;;  sign            1    5[COMRAM] unsigned char 
   511 ;;  counter         1    4[COMRAM] unsigned char 
   512 ;; Return value:  Size  Location     Type
   513 ;;                  2    0[COMRAM] int 
   514 ;; Registers used:
   515 ;;		wreg, status,2, status,0
   516 ;; Tracked objects:
   517 ;;		On entry : 0/0
   518 ;;		On exit  : 0/0
   519 ;;		Unchanged: 0/0
   520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   521 ;;      Params:         4       0       0       0       0       0       0       0       0
   522 ;;      Locals:         4       0       0       0       0       0       0       0       0
   523 ;;      Temps:          0       0       0       0       0       0       0       0       0
   524 ;;      Totals:         8       0       0       0       0       0       0       0       0
   525 ;;Total ram usage:        8 bytes
   526 ;; Hardware stack levels used: 1
   527 ;; This function calls:
   528 ;;		Nothing
   529 ;; This function is called by:
   530 ;;		_main
   531 ;; This function uses a non-reentrant model
   532 ;;
   533                           
   534                           	psect	text2
   535  007E76                     __ptext2:
   536                           	callstack 0
   537  007E76                     ___awdiv:
   538                           	callstack 30
   539  007E76  0E00               	movlw	0
   540  007E78  6E06               	movwf	___awdiv@sign^0,c
   541  007E7A  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
   542  007E7C  EF44  F03F         	goto	u270
   543  007E80  EF42  F03F         	goto	u271
   544  007E84                     u271:
   545  007E84  EF4A  F03F         	goto	l944
   546  007E88                     u270:
   547  007E88  6C03               	negf	___awdiv@divisor^0,c
   548  007E8A  1E04               	comf	(___awdiv@divisor+1)^0,f,c
   549  007E8C  B0D8               	btfsc	status,0,c
   550  007E8E  2A04               	incf	(___awdiv@divisor+1)^0,f,c
   551  007E90  0E01               	movlw	1
   552  007E92  6E06               	movwf	___awdiv@sign^0,c
   553  007E94                     l944:
   554  007E94  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
   555  007E96  EF51  F03F         	goto	u280
   556  007E9A  EF4F  F03F         	goto	u281
   557  007E9E                     u281:
   558  007E9E  EF57  F03F         	goto	l950
   559  007EA2                     u280:
   560  007EA2  6C01               	negf	___awdiv@dividend^0,c
   561  007EA4  1E02               	comf	(___awdiv@dividend+1)^0,f,c
   562  007EA6  B0D8               	btfsc	status,0,c
   563  007EA8  2A02               	incf	(___awdiv@dividend+1)^0,f,c
   564  007EAA  0E01               	movlw	1
   565  007EAC  1A06               	xorwf	___awdiv@sign^0,f,c
   566  007EAE                     l950:
   567  007EAE  0E00               	movlw	0
   568  007EB0  6E08               	movwf	(___awdiv@quotient+1)^0,c
   569  007EB2  0E00               	movlw	0
   570  007EB4  6E07               	movwf	___awdiv@quotient^0,c
   571  007EB6  5003               	movf	___awdiv@divisor^0,w,c
   572  007EB8  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
   573  007EBA  B4D8               	btfsc	status,2,c
   574  007EBC  EF62  F03F         	goto	u291
   575  007EC0  EF64  F03F         	goto	u290
   576  007EC4                     u291:
   577  007EC4  EF8C  F03F         	goto	l972
   578  007EC8                     u290:
   579  007EC8  0E01               	movlw	1
   580  007ECA  6E05               	movwf	___awdiv@counter^0,c
   581  007ECC  EF6C  F03F         	goto	l958
   582  007ED0                     l956:
   583  007ED0  90D8               	bcf	status,0,c
   584  007ED2  3603               	rlcf	___awdiv@divisor^0,f,c
   585  007ED4  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
   586  007ED6  2A05               	incf	___awdiv@counter^0,f,c
   587  007ED8                     l958:
   588  007ED8  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
   589  007EDA  EF71  F03F         	goto	u301
   590  007EDE  EF73  F03F         	goto	u300
   591  007EE2                     u301:
   592  007EE2  EF68  F03F         	goto	l956
   593  007EE6                     u300:
   594  007EE6                     l960:
   595  007EE6  90D8               	bcf	status,0,c
   596  007EE8  3607               	rlcf	___awdiv@quotient^0,f,c
   597  007EEA  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
   598  007EEC  5003               	movf	___awdiv@divisor^0,w,c
   599  007EEE  5C01               	subwf	___awdiv@dividend^0,w,c
   600  007EF0  5004               	movf	(___awdiv@divisor+1)^0,w,c
   601  007EF2  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
   602  007EF4  A0D8               	btfss	status,0,c
   603  007EF6  EF7F  F03F         	goto	u311
   604  007EFA  EF81  F03F         	goto	u310
   605  007EFE                     u311:
   606  007EFE  EF86  F03F         	goto	l968
   607  007F02                     u310:
   608  007F02  5003               	movf	___awdiv@divisor^0,w,c
   609  007F04  5E01               	subwf	___awdiv@dividend^0,f,c
   610  007F06  5004               	movf	(___awdiv@divisor+1)^0,w,c
   611  007F08  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
   612  007F0A  8007               	bsf	___awdiv@quotient^0,0,c
   613  007F0C                     l968:
   614  007F0C  90D8               	bcf	status,0,c
   615  007F0E  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
   616  007F10  3203               	rrcf	___awdiv@divisor^0,f,c
   617  007F12  2E05               	decfsz	___awdiv@counter^0,f,c
   618  007F14  EF73  F03F         	goto	l960
   619  007F18                     l972:
   620  007F18  5006               	movf	___awdiv@sign^0,w,c
   621  007F1A  B4D8               	btfsc	status,2,c
   622  007F1C  EF92  F03F         	goto	u321
   623  007F20  EF94  F03F         	goto	u320
   624  007F24                     u321:
   625  007F24  EF98  F03F         	goto	l976
   626  007F28                     u320:
   627  007F28  6C07               	negf	___awdiv@quotient^0,c
   628  007F2A  1E08               	comf	(___awdiv@quotient+1)^0,f,c
   629  007F2C  B0D8               	btfsc	status,0,c
   630  007F2E  2A08               	incf	(___awdiv@quotient+1)^0,f,c
   631  007F30                     l976:
   632  007F30  C007  F001         	movff	___awdiv@quotient,?___awdiv
   633  007F34  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   634  007F38  0012               	return		;funcret
   635  007F3A                     __end_of___awdiv:
   636                           	callstack 0
   637                           
   638 ;; *************** function _ConfigClock *****************
   639 ;; Defined at:
   640 ;;		line 78 in file "Configuracion.c"
   641 ;; Parameters:    Size  Location     Type
   642 ;;		None
   643 ;; Auto vars:     Size  Location     Type
   644 ;;		None
   645 ;; Return value:  Size  Location     Type
   646 ;;                  1    wreg      void 
   647 ;; Registers used:
   648 ;;		wreg, status,2
   649 ;; Tracked objects:
   650 ;;		On entry : 0/0
   651 ;;		On exit  : 0/0
   652 ;;		Unchanged: 0/0
   653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   654 ;;      Params:         0       0       0       0       0       0       0       0       0
   655 ;;      Locals:         0       0       0       0       0       0       0       0       0
   656 ;;      Temps:          0       0       0       0       0       0       0       0       0
   657 ;;      Totals:         0       0       0       0       0       0       0       0       0
   658 ;;Total ram usage:        0 bytes
   659 ;; Hardware stack levels used: 1
   660 ;; This function calls:
   661 ;;		Nothing
   662 ;; This function is called by:
   663 ;;		_main
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           
   667                           	psect	text3
   668  007D8C                     __ptext3:
   669                           	callstack 0
   670  007D8C                     _ConfigClock:
   671                           	callstack 30
   672  007D8C  0E70               	movlw	112
   673  007D8E  12D3               	iorwf	211,f,c	;volatile
   674  007D90  0012               	return		;funcret
   675  007D92                     __end_of_ConfigClock:
   676                           	callstack 0
   677  0000                     
   678                           	psect	rparam
   679  0000                     
   680                           	psect	idloc
   681                           
   682                           ;Config register IDLOC0 @ 0x200000
   683                           ;	unspecified, using default values
   684  200000                     	org	2097152
   685  200000  FF                 	db	255
   686                           
   687                           ;Config register IDLOC1 @ 0x200001
   688                           ;	unspecified, using default values
   689  200001                     	org	2097153
   690  200001  FF                 	db	255
   691                           
   692                           ;Config register IDLOC2 @ 0x200002
   693                           ;	unspecified, using default values
   694  200002                     	org	2097154
   695  200002  FF                 	db	255
   696                           
   697                           ;Config register IDLOC3 @ 0x200003
   698                           ;	unspecified, using default values
   699  200003                     	org	2097155
   700  200003  FF                 	db	255
   701                           
   702                           ;Config register IDLOC4 @ 0x200004
   703                           ;	unspecified, using default values
   704  200004                     	org	2097156
   705  200004  FF                 	db	255
   706                           
   707                           ;Config register IDLOC5 @ 0x200005
   708                           ;	unspecified, using default values
   709  200005                     	org	2097157
   710  200005  FF                 	db	255
   711                           
   712                           ;Config register IDLOC6 @ 0x200006
   713                           ;	unspecified, using default values
   714  200006                     	org	2097158
   715  200006  FF                 	db	255
   716                           
   717                           ;Config register IDLOC7 @ 0x200007
   718                           ;	unspecified, using default values
   719  200007                     	org	2097159
   720  200007  FF                 	db	255
   721                           
   722                           	psect	config
   723                           
   724                           ;Config register CONFIG1L @ 0x300000
   725                           ;	PLL Prescaler Selection bits
   726                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   727                           ;	System Clock Postscaler Selection bits
   728                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   729                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   730                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   731  300000                     	org	3145728
   732  300000  00                 	db	0
   733                           
   734                           ;Config register CONFIG1H @ 0x300001
   735                           ;	Oscillator Selection bits
   736                           ;	FOSC = INTOSC_XT, Internal oscillator, XT used by USB (INTXT)
   737                           ;	Fail-Safe Clock Monitor Enable bit
   738                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   739                           ;	Internal/External Oscillator Switchover bit
   740                           ;	IESO = OFF, Oscillator Switchover mode disabled
   741  300001                     	org	3145729
   742  300001  0A                 	db	10
   743                           
   744                           ;Config register CONFIG2L @ 0x300002
   745                           ;	Power-up Timer Enable bit
   746                           ;	PWRT = OFF, PWRT disabled
   747                           ;	Brown-out Reset Enable bits
   748                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   749                           ;	Brown-out Reset Voltage bits
   750                           ;	BORV = 3, Minimum setting 2.05V
   751                           ;	USB Voltage Regulator Enable bit
   752                           ;	VREGEN = OFF, USB voltage regulator disabled
   753  300002                     	org	3145730
   754  300002  1F                 	db	31
   755                           
   756                           ;Config register CONFIG2H @ 0x300003
   757                           ;	Watchdog Timer Enable bit
   758                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   759                           ;	Watchdog Timer Postscale Select bits
   760                           ;	WDTPS = 32768, 1:32768
   761  300003                     	org	3145731
   762  300003  1E                 	db	30
   763                           
   764                           ; Padding undefined space
   765  300004                     	org	3145732
   766  300004  FF                 	db	255
   767                           
   768                           ;Config register CONFIG3H @ 0x300005
   769                           ;	CCP2 MUX bit
   770                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   771                           ;	PORTB A/D Enable bit
   772                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   773                           ;	Low-Power Timer 1 Oscillator Enable bit
   774                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   775                           ;	MCLR Pin Enable bit
   776                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   777  300005                     	org	3145733
   778  300005  83                 	db	131
   779                           
   780                           ;Config register CONFIG4L @ 0x300006
   781                           ;	Stack Full/Underflow Reset Enable bit
   782                           ;	STVREN = ON, Stack full/underflow will cause Reset
   783                           ;	Single-Supply ICSP Enable bit
   784                           ;	LVP = ON, Single-Supply ICSP enabled
   785                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   786                           ;	ICPRT = OFF, ICPORT disabled
   787                           ;	Extended Instruction Set Enable bit
   788                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   789                           ;	Background Debugger Enable bit
   790                           ;	DEBUG = 0x1, unprogrammed default
   791  300006                     	org	3145734
   792  300006  85                 	db	133
   793                           
   794                           ; Padding undefined space
   795  300007                     	org	3145735
   796  300007  FF                 	db	255
   797                           
   798                           ;Config register CONFIG5L @ 0x300008
   799                           ;	Code Protection bit
   800                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   801                           ;	Code Protection bit
   802                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   803                           ;	Code Protection bit
   804                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   805                           ;	Code Protection bit
   806                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   807  300008                     	org	3145736
   808  300008  0F                 	db	15
   809                           
   810                           ;Config register CONFIG5H @ 0x300009
   811                           ;	Boot Block Code Protection bit
   812                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   813                           ;	Data EEPROM Code Protection bit
   814                           ;	CPD = OFF, Data EEPROM is not code-protected
   815  300009                     	org	3145737
   816  300009  C0                 	db	192
   817                           
   818                           ;Config register CONFIG6L @ 0x30000A
   819                           ;	Write Protection bit
   820                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   821                           ;	Write Protection bit
   822                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   823                           ;	Write Protection bit
   824                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   825                           ;	Write Protection bit
   826                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   827  30000A                     	org	3145738
   828  30000A  0F                 	db	15
   829                           
   830                           ;Config register CONFIG6H @ 0x30000B
   831                           ;	Configuration Register Write Protection bit
   832                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   833                           ;	Boot Block Write Protection bit
   834                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   835                           ;	Data EEPROM Write Protection bit
   836                           ;	WRTD = OFF, Data EEPROM is not write-protected
   837  30000B                     	org	3145739
   838  30000B  E0                 	db	224
   839                           
   840                           ;Config register CONFIG7L @ 0x30000C
   841                           ;	Table Read Protection bit
   842                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   843                           ;	Table Read Protection bit
   844                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   845                           ;	Table Read Protection bit
   846                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   847                           ;	Table Read Protection bit
   848                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   849  30000C                     	org	3145740
   850  30000C  0F                 	db	15
   851                           
   852                           ;Config register CONFIG7H @ 0x30000D
   853                           ;	Boot Block Table Read Protection bit
   854                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   855  30000D                     	org	3145741
   856  30000D  40                 	db	64
   857                           tosu	equ	0xFFF
   858                           tosh	equ	0xFFE
   859                           tosl	equ	0xFFD
   860                           stkptr	equ	0xFFC
   861                           pclatu	equ	0xFFB
   862                           pclath	equ	0xFFA
   863                           pcl	equ	0xFF9
   864                           tblptru	equ	0xFF8
   865                           tblptrh	equ	0xFF7
   866                           tblptrl	equ	0xFF6
   867                           tablat	equ	0xFF5
   868                           prodh	equ	0xFF4
   869                           prodl	equ	0xFF3
   870                           indf0	equ	0xFEF
   871                           postinc0	equ	0xFEE
   872                           postdec0	equ	0xFED
   873                           preinc0	equ	0xFEC
   874                           plusw0	equ	0xFEB
   875                           fsr0h	equ	0xFEA
   876                           fsr0l	equ	0xFE9
   877                           wreg	equ	0xFE8
   878                           indf1	equ	0xFE7
   879                           postinc1	equ	0xFE6
   880                           postdec1	equ	0xFE5
   881                           preinc1	equ	0xFE4
   882                           plusw1	equ	0xFE3
   883                           fsr1h	equ	0xFE2
   884                           fsr1l	equ	0xFE1
   885                           bsr	equ	0xFE0
   886                           indf2	equ	0xFDF
   887                           postinc2	equ	0xFDE
   888                           postdec2	equ	0xFDD
   889                           preinc2	equ	0xFDC
   890                           plusw2	equ	0xFDB
   891                           fsr2h	equ	0xFDA
   892                           fsr2l	equ	0xFD9
   893                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         2
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     14      29
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     1      5     900
                                              8 COMRAM     6     1      5
                        _ConfigClock
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _ConfigClock                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigClock
   ___awdiv
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      E      1D       1       30.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1D      20        0.0%
DATA                 0      0      1D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Aug 07 18:54:47 2022

                      l5 7D90                        _i 001B                        _j 001D  
           ___awdiv@sign 0006                      l304 7F38                      l317 7E74  
                    l746 7D8C                      l940 7E88                      l950 7EAE  
                    l942 7E90                      l960 7EE6                      l952 7EB6  
                    l944 7E94                      l936 7E76                      l970 7F12  
                    l962 7EEC                      l954 7EC8                      l946 7EA2  
                    l938 7E7A                      l964 7F02                      l956 7ED0  
                    l972 7F18                      l948 7EAA                      l980 7DC6  
                    l974 7F28                      l966 7F0A                      l958 7ED8  
                    l990 7DF2                      l982 7DCA                      l976 7F30  
                    l968 7F0C                      l992 7DFA                      l984 7DD8  
                    l994 7E0C                      l986 7DE0                      l996 7E14  
                    l988 7DE4                      l998 7E1C                      u300 7EE6  
                    u301 7EE2                      u310 7F02                      u311 7EFE  
                    u320 7F28                      u400 7FF4                      u321 7F24  
                    u401 7FF0                      u330 7DD8                      u331 7DD4  
                    u340 7DF2                      u341 7DEE                      u270 7E88  
                    u350 7E0C                      u271 7E84                      u351 7E08  
                    u280 7EA2                      u360 7E2A                      u281 7E9E  
                    u361 7E26                      u417 7FAE                      u290 7EC8  
                    u370 7E40                      u291 7EC4                      u371 7E3C  
                    u427 7FD0                      u380 7E64                      u381 7E60  
                    u390 7F92                      u391 7F8E             ___awmod@sign 0006  
                    wreg 000FE8                     l1000 7E2A                     l1010 7E64  
                   l1002 7E40                     l1012 7E6C                     l1004 7E48  
                   l1020 7F42                     l1006 7E4E                     l1030 7F52  
                   l1022 7F44                     l1008 7E54                     l1040 7F96  
                   l1032 7F68                     l1024 7F48                     l1016 7F3A  
                   l1050 7FC8                     l1042 7FA6                     l1034 7F7E  
                   l1026 7F4A                     l1018 7F3E                     l1060 7FF4  
                   l1052 7FCA                     l1044 7FA8                     l1036 7F82  
                   l1028 7F4E                     l1046 7FB6                     l1048 7FB8  
                   l1056 7FE0                     l1058 7FE2                     _LATB 000F8A  
                   _LATC 000F8B                     _LATD 000F8C                     _main 7F3A  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
                   start 0000      __end_of_ConfigClock 7D92             ___param_bank 000000  
                  ?_main 0009          __end_of___awdiv 7F3A          __end_of___awmod 7E76  
        ___awdiv@divisor 0003          ___awdiv@counter 0005                    _PORTC 000F82  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  tablat 000FF5                    status 000FD8          __initialization 7D9C  
           __end_of_main 8000                   ??_main 000E            __activetblptr 000000  
       ___awdiv@dividend 0001              _ConfigClock 7D8C                   _Cuenta 001C  
              ??___awdiv 0005                ??___awmod 0005         ___awdiv@quotient 0007  
        ___awmod@divisor 0003                   isa$std 000001          ___awmod@counter 0005  
           __pdataCOMRAM 000F                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 7DC0  
          ___rparam_used 000001           __pcstackCOMRAM 0001               __pnvCOMRAM 0019  
                __Hparam 0000                  __Lparam 0000                  ___awdiv 7E76  
                ___awmod 7DC6                  _decenas 001A                  __pcinit 7D9C  
                __ramtop 0800                  __ptext0 7F3A                  __ptext1 7DC6  
                __ptext2 7E76                  __ptext3 7D8C         ___awmod@dividend 0001  
   end_of_initialization 7DC0             ?_ConfigClock 0001                  postdec1 000FE5  
                postinc0 000FEE            __pidataCOMRAM 7D92      start_initialization 7D9C  
         _Display_7Seg_A 000F              __pbssCOMRAM 001C     __size_of_ConfigClock 0006  
               ?___awdiv 0001                 ?___awmod 0001                copy_data0 7DB0  
               __Hrparam 0000                 __Lrparam 0000         __size_of___awdiv 00C4  
       __size_of___awmod 00B0            __size_of_main 00C6                 isa$xinst 000000  
               _unidades 0019                 main@argc 0009                 main@argv 000B  
             _OSCCONbits 000FD3            ??_ConfigClock 0001  
