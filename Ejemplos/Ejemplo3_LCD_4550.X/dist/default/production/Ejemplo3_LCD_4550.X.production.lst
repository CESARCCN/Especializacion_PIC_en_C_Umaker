

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Aug 13 17:39:34 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24  0000                     
    25                           ; Version 2.40
    26                           ; Generated 17/11/2021 GMT
    27                           ; 
    28                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F4550 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     _LATD	set	3980
    61  0000                     _TRISD	set	3989
    62  0000                     _LATDbits	set	3980
    63  0000                     _OSCCONbits	set	4051
    64                           
    65                           	psect	smallconst
    66  000800                     __psmallconst:
    67                           	callstack 0
    68  000800  00                 	db	0
    69  000801                     STR_7:
    70  000801  50                 	db	80	;'P'
    71  000802  49                 	db	73	;'I'
    72  000803  43                 	db	67	;'C'
    73  000804  20                 	db	32
    74  000805  65                 	db	101	;'e'
    75  000806  6E                 	db	110	;'n'
    76  000807  20                 	db	32
    77  000808  41                 	db	65	;'A'
    78  000809  73                 	db	115	;'s'
    79  00080A  73                 	db	115	;'s'
    80  00080B  65                 	db	101	;'e'
    81  00080C  6D                 	db	109	;'m'
    82  00080D  62                 	db	98	;'b'
    83  00080E  6C                 	db	108	;'l'
    84  00080F  65                 	db	101	;'e'
    85  000810  72                 	db	114	;'r'
    86  000811  00                 	db	0
    87  000812                     STR_1:
    88  000812  42                 	db	66	;'B'
    89  000813  69                 	db	105	;'i'
    90  000814  65                 	db	101	;'e'
    91  000815  6E                 	db	110	;'n'
    92  000816  76                 	db	118	;'v'
    93  000817  65                 	db	101	;'e'
    94  000818  6E                 	db	110	;'n'
    95  000819  69                 	db	105	;'i'
    96  00081A  64                 	db	100	;'d'
    97  00081B  6F                 	db	111	;'o'
    98  00081C  73                 	db	115	;'s'
    99  00081D  20                 	db	32
   100  00081E  3A                 	db	58	;':'
   101  00081F  33                 	db	51	;'3'
   102  000820  00                 	db	0
   103  000821                     STR_8:
   104  000821  50                 	db	80	;'P'
   105  000822  65                 	db	101	;'e'
   106  000823  72                 	db	114	;'r'
   107  000824  75                 	db	117	;'u'
   108  000825  2D                 	db	45
   109  000826  55                 	db	85	;'U'
   110  000827  6D                 	db	109	;'m'
   111  000828  61                 	db	97	;'a'
   112  000829  6B                 	db	107	;'k'
   113  00082A  65                 	db	101	;'e'
   114  00082B  72                 	db	114	;'r'
   115  00082C  20                 	db	32
   116  00082D  00                 	db	0
   117  00082E                     STR_6:
   118  00082E  50                 	db	80	;'P'
   119  00082F  49                 	db	73	;'I'
   120  000830  43                 	db	67	;'C'
   121  000831  31                 	db	49	;'1'
   122  000832  38                 	db	56	;'8'
   123  000833  46                 	db	70	;'F'
   124  000834  35                 	db	53	;'5'
   125  000835  37                 	db	55	;'7'
   126  000836  51                 	db	81	;'Q'
   127  000837  34                 	db	52	;'4'
   128  000838  33                 	db	51	;'3'
   129  000839  00                 	db	0
   130  00083A                     STR_2:
   131  00083A  41                 	db	65	;'A'
   132  00083B  6C                 	db	108	;'l'
   133  00083C  20                 	db	32
   134  00083D  43                 	db	67	;'C'
   135  00083E  75                 	db	117	;'u'
   136  00083F  72                 	db	114	;'r'
   137  000840  73                 	db	115	;'s'
   138  000841  6F                 	db	111	;'o'
   139  000842  20                 	db	32
   140  000843  64                 	db	100	;'d'
   141  000844  65                 	db	101	;'e'
   142  000845  00                 	db	0
   143  000846                     STR_3:
   144  000846  50                 	db	80	;'P'
   145  000847  49                 	db	73	;'I'
   146  000848  43                 	db	67	;'C'
   147  000849  20                 	db	32
   148  00084A  65                 	db	101	;'e'
   149  00084B  6E                 	db	110	;'n'
   150  00084C  20                 	db	32
   151  00084D  43                 	db	67	;'C'
   152  00084E  00                 	db	0
   153  00084F                     STR_4:
   154  00084F  55                 	db	85	;'U'
   155  000850  6D                 	db	109	;'m'
   156  000851  61                 	db	97	;'a'
   157  000852  6B                 	db	107	;'k'
   158  000853  65                 	db	101	;'e'
   159  000854  72                 	db	114	;'r'
   160  000855  00                 	db	0
   161  000856  00                 	db	0	; dummy byte at the end
   162  0000                     
   163                           ; #config settings
   164                           
   165                           	psect	cinit
   166  000F26                     __pcinit:
   167                           	callstack 0
   168  000F26                     start_initialization:
   169                           	callstack 0
   170  000F26                     __initialization:
   171                           	callstack 0
   172  000F26                     end_of_initialization:
   173                           	callstack 0
   174  000F26                     __end_of__initialization:
   175                           	callstack 0
   176  000F26  0E00               	movlw	low (__Lmediumconst shr (0+16))
   177  000F28  6EF8               	movwf	tblptru,c
   178  000F2A  0100               	movlb	0
   179  000F2C  EF98  F005         	goto	_main	;jump to C main() function
   180                           
   181                           	psect	cstackCOMRAM
   182  000001                     __pcstackCOMRAM:
   183                           	callstack 0
   184  000001                     LCD_PIC_DataBus@a:
   185                           	callstack 0
   186                           
   187                           ; 1 bytes @ 0x0
   188  000001                     	ds	1
   189  000002                     ??_LCD_PIC_Cmd:
   190                           
   191                           ; 1 bytes @ 0x1
   192  000002                     	ds	1
   193  000003                     LCD_PIC_Cmd@a:
   194                           	callstack 0
   195                           
   196                           ; 1 bytes @ 0x2
   197  000003                     	ds	1
   198  000004                     LCD_PIC_SetCursor@y:
   199                           	callstack 0
   200  000004                     LCD_PIC_Char@m:
   201                           	callstack 0
   202  000004                     LCD_PIC_New_Char@b:
   203                           	callstack 0
   204  000004                     LCD_PIC_Write_New_Char@a:
   205                           	callstack 0
   206                           
   207                           ; 1 bytes @ 0x3
   208  000004                     	ds	1
   209  000005                     ??_LCD_PIC_SetCursor:
   210  000005                     LCD_PIC_Char@n:
   211                           	callstack 0
   212  000005                     LCD_PIC_New_Char@c:
   213                           	callstack 0
   214                           
   215                           ; 1 bytes @ 0x4
   216  000005                     	ds	1
   217  000006                     LCD_PIC_Char@c:
   218                           	callstack 0
   219  000006                     LCD_PIC_New_Char@d:
   220                           	callstack 0
   221                           
   222                           ; 1 bytes @ 0x5
   223  000006                     	ds	1
   224  000007                     LCD_PIC_New_Char@e:
   225                           	callstack 0
   226  000007                     LCD_PIC_String@a:
   227                           	callstack 0
   228                           
   229                           ; 2 bytes @ 0x6
   230  000007                     	ds	1
   231  000008                     LCD_PIC_SetCursor@m:
   232                           	callstack 0
   233  000008                     LCD_PIC_New_Char@f:
   234                           	callstack 0
   235                           
   236                           ; 1 bytes @ 0x7
   237  000008                     	ds	1
   238  000009                     LCD_PIC_SetCursor@n:
   239                           	callstack 0
   240  000009                     LCD_PIC_New_Char@g:
   241                           	callstack 0
   242  000009                     LCD_PIC_String@ptr:
   243                           	callstack 0
   244                           
   245                           ; 2 bytes @ 0x8
   246  000009                     	ds	1
   247  00000A                     LCD_PIC_SetCursor@x:
   248                           	callstack 0
   249  00000A                     LCD_PIC_New_Char@h:
   250                           	callstack 0
   251                           
   252                           ; 1 bytes @ 0x9
   253  00000A                     	ds	1
   254  00000B                     LCD_PIC_New_Char@i:
   255                           	callstack 0
   256                           
   257                           ; 1 bytes @ 0xA
   258  00000B                     	ds	1
   259  00000C                     ??_LCD_PIC_New_Char:
   260                           
   261                           ; 1 bytes @ 0xB
   262  00000C                     	ds	2
   263  00000E                     LCD_PIC_New_Char@a:
   264                           	callstack 0
   265                           
   266                           ; 1 bytes @ 0xD
   267  00000E                     	ds	1
   268  00000F                     LCD_PIC_New_Char@m:
   269                           	callstack 0
   270                           
   271                           ; 1 bytes @ 0xE
   272  00000F                     	ds	1
   273  000010                     LCD_PIC_New_Char@n:
   274                           	callstack 0
   275                           
   276                           ; 1 bytes @ 0xF
   277  000010                     	ds	1
   278  000011                     
   279                           ; 2 bytes @ 0x10
   280  000011                     	ds	2
   281  000013                     
   282                           ; 3 bytes @ 0x12
   283  000013                     	ds	3
   284  000016                     ??_main:
   285                           
   286                           ; 1 bytes @ 0x15
   287  000016                     	ds	2
   288                           
   289 ;;
   290 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   291 ;;
   292 ;; *************** function _main *****************
   293 ;; Defined at:
   294 ;;		line 26 in file "Main.c"
   295 ;; Parameters:    Size  Location     Type
   296 ;;  argc            2   16[COMRAM] int 
   297 ;;  argv            3   18[COMRAM] PTR PTR unsigned char 
   298 ;; Auto vars:     Size  Location     Type
   299 ;;		None
   300 ;; Return value:  Size  Location     Type
   301 ;;                  2   16[COMRAM] int 
   302 ;; Registers used:
   303 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   304 ;; Tracked objects:
   305 ;;		On entry : 0/0
   306 ;;		On exit  : 0/0
   307 ;;		Unchanged: 0/0
   308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   309 ;;      Params:         5       0       0       0       0       0       0       0       0
   310 ;;      Locals:         0       0       0       0       0       0       0       0       0
   311 ;;      Temps:          2       0       0       0       0       0       0       0       0
   312 ;;      Totals:         7       0       0       0       0       0       0       0       0
   313 ;;Total ram usage:        7 bytes
   314 ;; Hardware stack levels required when called: 4
   315 ;; This function calls:
   316 ;;		_ConfigClock
   317 ;;		_LCD_PIC_Clear
   318 ;;		_LCD_PIC_Home
   319 ;;		_LCD_PIC_Init
   320 ;;		_LCD_PIC_New_Char
   321 ;;		_LCD_PIC_SetCursor
   322 ;;		_LCD_PIC_String
   323 ;;		_LCD_PIC_Write_New_Char
   324 ;; This function is called by:
   325 ;;		Startup code after reset
   326 ;; This function uses a non-reentrant model
   327 ;;
   328                           
   329                           	psect	text0
   330  000B30                     __ptext0:
   331                           	callstack 0
   332  000B30                     _main:
   333                           	callstack 27
   334  000B30                     
   335                           ;Main.c: 28:     ConfigClock();
   336  000B30  EC98  F007         	call	_ConfigClock	;wreg free
   337  000B34                     
   338                           ;Main.c: 29:     LCD_PIC_Init();
   339  000B34  EC14  F007         	call	_LCD_PIC_Init	;wreg free
   340  000B38                     
   341                           ;Main.c: 31:     LCD_PIC_New_Char(1,0x0A,0x1F,0x1F,0x1F,0x0E,0x04,0x00,0X00);
   342  000B38  0E0A               	movlw	10
   343  000B3A  6E04               	movwf	LCD_PIC_New_Char@b^0,c
   344  000B3C  0E1F               	movlw	31
   345  000B3E  6E05               	movwf	LCD_PIC_New_Char@c^0,c
   346  000B40  0E1F               	movlw	31
   347  000B42  6E06               	movwf	LCD_PIC_New_Char@d^0,c
   348  000B44  0E1F               	movlw	31
   349  000B46  6E07               	movwf	LCD_PIC_New_Char@e^0,c
   350  000B48  0E0E               	movlw	14
   351  000B4A  6E08               	movwf	LCD_PIC_New_Char@f^0,c
   352  000B4C  0E04               	movlw	4
   353  000B4E  6E09               	movwf	LCD_PIC_New_Char@g^0,c
   354  000B50  0E00               	movlw	0
   355  000B52  6E0A               	movwf	LCD_PIC_New_Char@h^0,c
   356  000B54  0E00               	movlw	0
   357  000B56  6E0B               	movwf	LCD_PIC_New_Char@i^0,c
   358  000B58  0E01               	movlw	1
   359  000B5A  EC2C  F004         	call	_LCD_PIC_New_Char
   360  000B5E                     
   361                           ;Main.c: 32:     LCD_PIC_New_Char(2,0x0E,0x1F,0x15,0x1F,0x0E,0x0E,0x00,0x00);
   362  000B5E  0E0E               	movlw	14
   363  000B60  6E04               	movwf	LCD_PIC_New_Char@b^0,c
   364  000B62  0E1F               	movlw	31
   365  000B64  6E05               	movwf	LCD_PIC_New_Char@c^0,c
   366  000B66  0E15               	movlw	21
   367  000B68  6E06               	movwf	LCD_PIC_New_Char@d^0,c
   368  000B6A  0E1F               	movlw	31
   369  000B6C  6E07               	movwf	LCD_PIC_New_Char@e^0,c
   370  000B6E  0E0E               	movlw	14
   371  000B70  6E08               	movwf	LCD_PIC_New_Char@f^0,c
   372  000B72  0E0E               	movlw	14
   373  000B74  6E09               	movwf	LCD_PIC_New_Char@g^0,c
   374  000B76  0E00               	movlw	0
   375  000B78  6E0A               	movwf	LCD_PIC_New_Char@h^0,c
   376  000B7A  0E00               	movlw	0
   377  000B7C  6E0B               	movwf	LCD_PIC_New_Char@i^0,c
   378  000B7E  0E02               	movlw	2
   379  000B80  EC2C  F004         	call	_LCD_PIC_New_Char
   380  000B84                     
   381                           ;Main.c: 33:     LCD_PIC_New_Char(3,0x03,0x07,0x09,0x09,0x09,0x1B,0x1B,0x00);
   382  000B84  0E03               	movlw	3
   383  000B86  6E04               	movwf	LCD_PIC_New_Char@b^0,c
   384  000B88  0E07               	movlw	7
   385  000B8A  6E05               	movwf	LCD_PIC_New_Char@c^0,c
   386  000B8C  0E09               	movlw	9
   387  000B8E  6E06               	movwf	LCD_PIC_New_Char@d^0,c
   388  000B90  0E09               	movlw	9
   389  000B92  6E07               	movwf	LCD_PIC_New_Char@e^0,c
   390  000B94  0E09               	movlw	9
   391  000B96  6E08               	movwf	LCD_PIC_New_Char@f^0,c
   392  000B98  0E1B               	movlw	27
   393  000B9A  6E09               	movwf	LCD_PIC_New_Char@g^0,c
   394  000B9C  0E1B               	movlw	27
   395  000B9E  6E0A               	movwf	LCD_PIC_New_Char@h^0,c
   396  000BA0  0E00               	movlw	0
   397  000BA2  6E0B               	movwf	LCD_PIC_New_Char@i^0,c
   398  000BA4  0E03               	movlw	3
   399  000BA6  EC2C  F004         	call	_LCD_PIC_New_Char
   400  000BAA                     
   401                           ;Main.c: 34:     LCD_PIC_SetCursor(0,Fila1);
   402  000BAA  0E00               	movlw	0
   403  000BAC  6E04               	movwf	LCD_PIC_SetCursor@y^0,c
   404  000BAE  0E00               	movlw	0
   405  000BB0  EC54  F006         	call	_LCD_PIC_SetCursor
   406  000BB4                     
   407                           ;Main.c: 35:     LCD_PIC_String("Bienvenidos :3");
   408  000BB4  0E12               	movlw	low STR_1
   409  000BB6  6E07               	movwf	LCD_PIC_String@a^0,c
   410  000BB8  0E08               	movlw	high STR_1
   411  000BBA  6E08               	movwf	(LCD_PIC_String@a+1)^0,c
   412  000BBC  EC3D  F007         	call	_LCD_PIC_String	;wreg free
   413  000BC0                     
   414                           ;Main.c: 36:     LCD_PIC_SetCursor(0,Fila2);
   415  000BC0  0E01               	movlw	1
   416  000BC2  6E04               	movwf	LCD_PIC_SetCursor@y^0,c
   417  000BC4  0E00               	movlw	0
   418  000BC6  EC54  F006         	call	_LCD_PIC_SetCursor
   419  000BCA                     
   420                           ;Main.c: 37:     LCD_PIC_String("Al Curso de");
   421  000BCA  0E3A               	movlw	low STR_2
   422  000BCC  6E07               	movwf	LCD_PIC_String@a^0,c
   423  000BCE  0E08               	movlw	high STR_2
   424  000BD0  6E08               	movwf	(LCD_PIC_String@a+1)^0,c
   425  000BD2  EC3D  F007         	call	_LCD_PIC_String	;wreg free
   426  000BD6                     
   427                           ;Main.c: 38:     LCD_PIC_SetCursor(0,Fila3);
   428  000BD6  0E02               	movlw	2
   429  000BD8  6E04               	movwf	LCD_PIC_SetCursor@y^0,c
   430  000BDA  0E00               	movlw	0
   431  000BDC  EC54  F006         	call	_LCD_PIC_SetCursor
   432  000BE0                     
   433                           ;Main.c: 39:     LCD_PIC_String("PIC en C");
   434  000BE0  0E46               	movlw	low STR_3
   435  000BE2  6E07               	movwf	LCD_PIC_String@a^0,c
   436  000BE4  0E08               	movlw	high STR_3
   437  000BE6  6E08               	movwf	(LCD_PIC_String@a+1)^0,c
   438  000BE8  EC3D  F007         	call	_LCD_PIC_String	;wreg free
   439  000BEC                     
   440                           ;Main.c: 40:     LCD_PIC_SetCursor(0,Fila4);
   441  000BEC  0E03               	movlw	3
   442  000BEE  6E04               	movwf	LCD_PIC_SetCursor@y^0,c
   443  000BF0  0E00               	movlw	0
   444  000BF2  EC54  F006         	call	_LCD_PIC_SetCursor
   445  000BF6                     
   446                           ;Main.c: 41:     LCD_PIC_String("Umaker");
   447  000BF6  0E4F               	movlw	low STR_4
   448  000BF8  6E07               	movwf	LCD_PIC_String@a^0,c
   449  000BFA  0E08               	movlw	high STR_4
   450  000BFC  6E08               	movwf	(LCD_PIC_String@a+1)^0,c
   451  000BFE  EC3D  F007         	call	_LCD_PIC_String	;wreg free
   452  000C02                     
   453                           ;Main.c: 42:     _delay((unsigned long)((1000)*(8000000UL/4000.0)));
   454  000C02  0E0B               	movlw	11
   455  000C04  6E17               	movwf	(??_main+1)^0,c
   456  000C06  0E26               	movlw	38
   457  000C08  6E16               	movwf	??_main^0,c
   458  000C0A  0E5E               	movlw	94
   459  000C0C                     u157:
   460  000C0C  2EE8               	decfsz	wreg,f,c
   461  000C0E  D7FE               	bra	u157
   462  000C10  2E16               	decfsz	??_main^0,f,c
   463  000C12  D7FC               	bra	u157
   464  000C14  2E17               	decfsz	(??_main+1)^0,f,c
   465  000C16  D7FA               	bra	u157
   466  000C18                     
   467                           ;Main.c: 43:     _delay((unsigned long)((1000)*(8000000UL/4000.0)));
   468  000C18  0E0B               	movlw	11
   469  000C1A  6E17               	movwf	(??_main+1)^0,c
   470  000C1C  0E26               	movlw	38
   471  000C1E  6E16               	movwf	??_main^0,c
   472  000C20  0E5E               	movlw	94
   473  000C22                     u167:
   474  000C22  2EE8               	decfsz	wreg,f,c
   475  000C24  D7FE               	bra	u167
   476  000C26  2E16               	decfsz	??_main^0,f,c
   477  000C28  D7FC               	bra	u167
   478  000C2A  2E17               	decfsz	(??_main+1)^0,f,c
   479  000C2C  D7FA               	bra	u167
   480                           
   481                           ;Main.c: 44:     LCD_PIC_Clear();
   482  000C2E  EC8B  F007         	call	_LCD_PIC_Clear	;wreg free
   483                           
   484                           ;Main.c: 45:     LCD_PIC_Home();
   485  000C32  EC83  F007         	call	_LCD_PIC_Home	;wreg free
   486  000C36                     
   487                           ;Main.c: 46:     LCD_PIC_SetCursor(0,Fila1);
   488  000C36  0E00               	movlw	0
   489  000C38  6E04               	movwf	LCD_PIC_SetCursor@y^0,c
   490  000C3A  0E00               	movlw	0
   491  000C3C  EC54  F006         	call	_LCD_PIC_SetCursor
   492  000C40                     
   493                           ;Main.c: 47:     LCD_PIC_String("Bienvenidos :3");
   494  000C40  0E12               	movlw	low STR_1
   495  000C42  6E07               	movwf	LCD_PIC_String@a^0,c
   496  000C44  0E08               	movlw	high STR_1
   497  000C46  6E08               	movwf	(LCD_PIC_String@a+1)^0,c
   498  000C48  EC3D  F007         	call	_LCD_PIC_String	;wreg free
   499  000C4C                     
   500                           ;Main.c: 48:     LCD_PIC_SetCursor(0,Fila2);
   501  000C4C  0E01               	movlw	1
   502  000C4E  6E04               	movwf	LCD_PIC_SetCursor@y^0,c
   503  000C50  0E00               	movlw	0
   504  000C52  EC54  F006         	call	_LCD_PIC_SetCursor
   505  000C56                     
   506                           ;Main.c: 49:     LCD_PIC_String("PIC18F57Q43");
   507  000C56  0E2E               	movlw	low STR_6
   508  000C58  6E07               	movwf	LCD_PIC_String@a^0,c
   509  000C5A  0E08               	movlw	high STR_6
   510  000C5C  6E08               	movwf	(LCD_PIC_String@a+1)^0,c
   511  000C5E  EC3D  F007         	call	_LCD_PIC_String	;wreg free
   512  000C62                     
   513                           ;Main.c: 50:     LCD_PIC_Write_New_Char(1);
   514  000C62  0E01               	movlw	1
   515  000C64  EC79  F007         	call	_LCD_PIC_Write_New_Char
   516  000C68                     
   517                           ;Main.c: 51:     LCD_PIC_SetCursor(0,Fila3);
   518  000C68  0E02               	movlw	2
   519  000C6A  6E04               	movwf	LCD_PIC_SetCursor@y^0,c
   520  000C6C  0E00               	movlw	0
   521  000C6E  EC54  F006         	call	_LCD_PIC_SetCursor
   522  000C72                     
   523                           ;Main.c: 52:     LCD_PIC_String("PIC en Assembler");
   524  000C72  0E01               	movlw	low STR_7
   525  000C74  6E07               	movwf	LCD_PIC_String@a^0,c
   526  000C76  0E08               	movlw	high STR_7
   527  000C78  6E08               	movwf	(LCD_PIC_String@a+1)^0,c
   528  000C7A  EC3D  F007         	call	_LCD_PIC_String	;wreg free
   529  000C7E                     
   530                           ;Main.c: 53:     LCD_PIC_Write_New_Char(2);
   531  000C7E  0E02               	movlw	2
   532  000C80  EC79  F007         	call	_LCD_PIC_Write_New_Char
   533  000C84                     
   534                           ;Main.c: 54:     LCD_PIC_SetCursor(0,Fila4);
   535  000C84  0E03               	movlw	3
   536  000C86  6E04               	movwf	LCD_PIC_SetCursor@y^0,c
   537  000C88  0E00               	movlw	0
   538  000C8A  EC54  F006         	call	_LCD_PIC_SetCursor
   539  000C8E                     
   540                           ;Main.c: 55:     LCD_PIC_String("Peru-Umaker ");
   541  000C8E  0E21               	movlw	low STR_8
   542  000C90  6E07               	movwf	LCD_PIC_String@a^0,c
   543  000C92  0E08               	movlw	high STR_8
   544  000C94  6E08               	movwf	(LCD_PIC_String@a+1)^0,c
   545  000C96  EC3D  F007         	call	_LCD_PIC_String	;wreg free
   546  000C9A                     
   547                           ;Main.c: 56:     LCD_PIC_Write_New_Char(3);
   548  000C9A  0E03               	movlw	3
   549  000C9C  EC79  F007         	call	_LCD_PIC_Write_New_Char
   550  000CA0                     l28:
   551                           
   552                           ;Main.c: 60:     }
   553  000CA0  EF50  F006         	goto	l28
   554  000CA4  EF00  F000         	goto	start
   555  000CA8                     __end_of_main:
   556                           	callstack 0
   557                           
   558 ;; *************** function _LCD_PIC_Write_New_Char *****************
   559 ;; Defined at:
   560 ;;		line 243 in file "LCD_PIC.c"
   561 ;; Parameters:    Size  Location     Type
   562 ;;  a               1    wreg     unsigned char 
   563 ;; Auto vars:     Size  Location     Type
   564 ;;  a               1    3[COMRAM] unsigned char 
   565 ;; Return value:  Size  Location     Type
   566 ;;                  1    wreg      void 
   567 ;; Registers used:
   568 ;;		wreg, status,2, status,0, cstack
   569 ;; Tracked objects:
   570 ;;		On entry : 0/0
   571 ;;		On exit  : 0/0
   572 ;;		Unchanged: 0/0
   573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   574 ;;      Params:         0       0       0       0       0       0       0       0       0
   575 ;;      Locals:         1       0       0       0       0       0       0       0       0
   576 ;;      Temps:          0       0       0       0       0       0       0       0       0
   577 ;;      Totals:         1       0       0       0       0       0       0       0       0
   578 ;;Total ram usage:        1 bytes
   579 ;; Hardware stack levels used: 1
   580 ;; Hardware stack levels required when called: 2
   581 ;; This function calls:
   582 ;;		_LCD_PIC_Cmd
   583 ;; This function is called by:
   584 ;;		_main
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588                           	psect	text1
   589  000EF2                     __ptext1:
   590                           	callstack 0
   591  000EF2                     _LCD_PIC_Write_New_Char:
   592                           	callstack 28
   593                           
   594                           ;incstack = 0
   595                           ;LCD_PIC_Write_New_Char@a stored from wreg
   596  000EF2  6E04               	movwf	LCD_PIC_Write_New_Char@a^0,c
   597  000EF4                     
   598                           ;LCD_PIC.c: 244:     LATDbits.LATD3 = 1;
   599  000EF4  868C               	bsf	140,3,c	;volatile
   600  000EF6                     
   601                           ;LCD_PIC.c: 245:     LCD_PIC_Cmd(0x00);
   602  000EF6  0E00               	movlw	0
   603  000EF8  EC5C  F007         	call	_LCD_PIC_Cmd
   604  000EFC                     
   605                           ;LCD_PIC.c: 246:     LCD_PIC_Cmd(a-1);
   606  000EFC  0404               	decf	LCD_PIC_Write_New_Char@a^0,w,c
   607  000EFE  EC5C  F007         	call	_LCD_PIC_Cmd
   608  000F02                     
   609                           ;LCD_PIC.c: 247:     LATDbits.LATD3 = 0;
   610  000F02  968C               	bcf	140,3,c	;volatile
   611  000F04  0012               	return		;funcret
   612  000F06                     __end_of_LCD_PIC_Write_New_Char:
   613                           	callstack 0
   614                           
   615 ;; *************** function _LCD_PIC_String *****************
   616 ;; Defined at:
   617 ;;		line 91 in file "LCD_PIC.c"
   618 ;; Parameters:    Size  Location     Type
   619 ;;  a               2    6[COMRAM] PTR unsigned char 
   620 ;;		 -> STR_8(13), STR_7(17), STR_6(12), STR_5(15), 
   621 ;;		 -> STR_4(7), STR_3(9), STR_2(12), STR_1(15), 
   622 ;; Auto vars:     Size  Location     Type
   623 ;;  ptr             2    8[COMRAM] PTR unsigned char 
   624 ;;		 -> STR_8(13), STR_7(17), STR_6(12), STR_5(15), 
   625 ;;		 -> STR_4(7), STR_3(9), STR_2(12), STR_1(15), 
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1    wreg      void 
   628 ;; Registers used:
   629 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   635 ;;      Params:         2       0       0       0       0       0       0       0       0
   636 ;;      Locals:         2       0       0       0       0       0       0       0       0
   637 ;;      Temps:          0       0       0       0       0       0       0       0       0
   638 ;;      Totals:         4       0       0       0       0       0       0       0       0
   639 ;;Total ram usage:        4 bytes
   640 ;; Hardware stack levels used: 1
   641 ;; Hardware stack levels required when called: 3
   642 ;; This function calls:
   643 ;;		_LCD_PIC_Char
   644 ;; This function is called by:
   645 ;;		_main
   646 ;; This function uses a non-reentrant model
   647 ;;
   648                           
   649                           	psect	text2
   650  000E7A                     __ptext2:
   651                           	callstack 0
   652  000E7A                     _LCD_PIC_String:
   653                           	callstack 27
   654  000E7A                     
   655                           ;LCD_PIC.c: 92:     char *ptr;;LCD_PIC.c: 93:     ptr = a;
   656  000E7A  C007  F009         	movff	LCD_PIC_String@a,LCD_PIC_String@ptr
   657  000E7E  C008  F00A         	movff	LCD_PIC_String@a+1,LCD_PIC_String@ptr+1
   658                           
   659                           ;LCD_PIC.c: 94:     while(*ptr)
   660  000E82  EF4D  F007         	goto	l1366
   661  000E86                     l1362:
   662                           
   663                           ;LCD_PIC.c: 95:         LCD_PIC_Char(*ptr++);
   664  000E86  C009  FFF6         	movff	LCD_PIC_String@ptr,tblptrl
   665  000E8A  C00A  FFF7         	movff	LCD_PIC_String@ptr+1,tblptrh
   666  000E8E                     	if	0	;tblptru may be non-zero
   667  000E8E                     	endif
   668  000E8E                     	if	0	;tblptru may be non-zero
   669  000E8E                     	endif
   670  000E8E  0008               	tblrd		*
   671  000E90  50F5               	movf	tablat,w,c
   672  000E92  EC6B  F007         	call	_LCD_PIC_Char
   673  000E96  4A09               	infsnz	LCD_PIC_String@ptr^0,f,c
   674  000E98  2A0A               	incf	(LCD_PIC_String@ptr+1)^0,f,c
   675  000E9A                     l1366:
   676                           
   677                           ;LCD_PIC.c: 94:     while(*ptr)
   678  000E9A  C009  FFF6         	movff	LCD_PIC_String@ptr,tblptrl
   679  000E9E  C00A  FFF7         	movff	LCD_PIC_String@ptr+1,tblptrh
   680  000EA2                     	if	0	;tblptru may be non-zero
   681  000EA2                     	endif
   682  000EA2                     	if	0	;tblptru may be non-zero
   683  000EA2                     	endif
   684  000EA2  0008               	tblrd		*
   685  000EA4  50F5               	movf	tablat,w,c
   686  000EA6  0900               	iorlw	0
   687  000EA8  A4D8               	btfss	status,2,c
   688  000EAA  EF59  F007         	goto	u141
   689  000EAE  EF5B  F007         	goto	u140
   690  000EB2                     u141:
   691  000EB2  EF43  F007         	goto	l1362
   692  000EB6                     u140:
   693  000EB6  0012               	return		;funcret
   694  000EB8                     __end_of_LCD_PIC_String:
   695                           	callstack 0
   696                           
   697 ;; *************** function _LCD_PIC_Char *****************
   698 ;; Defined at:
   699 ;;		line 82 in file "LCD_PIC.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;  c               1    wreg     unsigned char 
   702 ;; Auto vars:     Size  Location     Type
   703 ;;  c               1    5[COMRAM] unsigned char 
   704 ;;  n               1    4[COMRAM] unsigned char 
   705 ;;  m               1    3[COMRAM] unsigned char 
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      void 
   708 ;; Registers used:
   709 ;;		wreg, status,2, status,0, cstack
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   715 ;;      Params:         0       0       0       0       0       0       0       0       0
   716 ;;      Locals:         3       0       0       0       0       0       0       0       0
   717 ;;      Temps:          0       0       0       0       0       0       0       0       0
   718 ;;      Totals:         3       0       0       0       0       0       0       0       0
   719 ;;Total ram usage:        3 bytes
   720 ;; Hardware stack levels used: 1
   721 ;; Hardware stack levels required when called: 2
   722 ;; This function calls:
   723 ;;		_LCD_PIC_Cmd
   724 ;; This function is called by:
   725 ;;		_LCD_PIC_String
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729                           	psect	text3
   730  000ED6                     __ptext3:
   731                           	callstack 0
   732  000ED6                     _LCD_PIC_Char:
   733                           	callstack 27
   734                           
   735                           ;incstack = 0
   736                           ;LCD_PIC_Char@c stored from wreg
   737  000ED6  6E06               	movwf	LCD_PIC_Char@c^0,c
   738  000ED8                     
   739                           ;LCD_PIC.c: 83:     uint8_t m,n;;LCD_PIC.c: 84:     m = c;
   740  000ED8  C006  F004         	movff	LCD_PIC_Char@c,LCD_PIC_Char@m
   741  000EDC                     
   742                           ;LCD_PIC.c: 85:     n = (c>>4);
   743  000EDC  3806               	swapf	LCD_PIC_Char@c^0,w,c
   744  000EDE  0B0F               	andlw	15
   745  000EE0  6E05               	movwf	LCD_PIC_Char@n^0,c
   746  000EE2                     
   747                           ;LCD_PIC.c: 86:     LATDbits.LATD3 = 1;
   748  000EE2  868C               	bsf	140,3,c	;volatile
   749  000EE4                     
   750                           ;LCD_PIC.c: 87:     LCD_PIC_Cmd(n);
   751  000EE4  5005               	movf	LCD_PIC_Char@n^0,w,c
   752  000EE6  EC5C  F007         	call	_LCD_PIC_Cmd
   753  000EEA                     
   754                           ;LCD_PIC.c: 88:     LCD_PIC_Cmd(m);
   755  000EEA  5004               	movf	LCD_PIC_Char@m^0,w,c
   756  000EEC  EC5C  F007         	call	_LCD_PIC_Cmd
   757  000EF0  0012               	return		;funcret
   758  000EF2                     __end_of_LCD_PIC_Char:
   759                           	callstack 0
   760                           
   761 ;; *************** function _LCD_PIC_SetCursor *****************
   762 ;; Defined at:
   763 ;;		line 41 in file "LCD_PIC.c"
   764 ;; Parameters:    Size  Location     Type
   765 ;;  x               1    wreg     unsigned char 
   766 ;;  y               1    3[COMRAM] enum E3193
   767 ;; Auto vars:     Size  Location     Type
   768 ;;  x               1    9[COMRAM] unsigned char 
   769 ;;  n               1    8[COMRAM] unsigned char 
   770 ;;  m               1    7[COMRAM] unsigned char 
   771 ;; Return value:  Size  Location     Type
   772 ;;                  1    wreg      void 
   773 ;; Registers used:
   774 ;;		wreg, status,2, status,0, cstack
   775 ;; Tracked objects:
   776 ;;		On entry : 0/0
   777 ;;		On exit  : 0/0
   778 ;;		Unchanged: 0/0
   779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   780 ;;      Params:         1       0       0       0       0       0       0       0       0
   781 ;;      Locals:         3       0       0       0       0       0       0       0       0
   782 ;;      Temps:          3       0       0       0       0       0       0       0       0
   783 ;;      Totals:         7       0       0       0       0       0       0       0       0
   784 ;;Total ram usage:        7 bytes
   785 ;; Hardware stack levels used: 1
   786 ;; Hardware stack levels required when called: 2
   787 ;; This function calls:
   788 ;;		_LCD_PIC_Cmd
   789 ;; This function is called by:
   790 ;;		_main
   791 ;; This function uses a non-reentrant model
   792 ;;
   793                           
   794                           	psect	text4
   795  000CA8                     __ptext4:
   796                           	callstack 0
   797  000CA8                     _LCD_PIC_SetCursor:
   798                           	callstack 28
   799                           
   800                           ;incstack = 0
   801                           ;LCD_PIC_SetCursor@x stored from wreg
   802  000CA8  6E0A               	movwf	LCD_PIC_SetCursor@x^0,c
   803  000CAA                     
   804                           ;LCD_PIC.c: 42:     LATDbits.LATD3 = 0;
   805  000CAA  968C               	bcf	140,3,c	;volatile
   806                           
   807                           ;LCD_PIC.c: 43:     uint8_t m,n;;LCD_PIC.c: 45:     switch(y){
   808  000CAC  EFC8  F006         	goto	l1354
   809  000CB0                     l1328:
   810                           
   811                           ;LCD_PIC.c: 47:             m = 0x80+x;
   812  000CB0  500A               	movf	LCD_PIC_SetCursor@x^0,w,c
   813  000CB2  0F80               	addlw	128
   814  000CB4  6E08               	movwf	LCD_PIC_SetCursor@m^0,c
   815                           
   816                           ;LCD_PIC.c: 48:             n = (0x80+x)>>4;
   817  000CB6  500A               	movf	LCD_PIC_SetCursor@x^0,w,c
   818  000CB8  6E05               	movwf	??_LCD_PIC_SetCursor^0,c
   819  000CBA  6A06               	clrf	(??_LCD_PIC_SetCursor+1)^0,c
   820  000CBC  0E80               	movlw	128
   821  000CBE  2605               	addwf	??_LCD_PIC_SetCursor^0,f,c
   822  000CC0  0E00               	movlw	0
   823  000CC2  2206               	addwfc	(??_LCD_PIC_SetCursor+1)^0,f,c
   824  000CC4  0E04               	movlw	4
   825  000CC6  6E07               	movwf	(??_LCD_PIC_SetCursor+2)^0,c
   826  000CC8                     u105:
   827  000CC8  3406               	rlcf	(??_LCD_PIC_SetCursor+1)^0,w,c
   828  000CCA  3206               	rrcf	(??_LCD_PIC_SetCursor+1)^0,f,c
   829  000CCC  3205               	rrcf	??_LCD_PIC_SetCursor^0,f,c
   830  000CCE  2E07               	decfsz	(??_LCD_PIC_SetCursor+2)^0,f,c
   831  000CD0  EF64  F006         	goto	u105
   832  000CD4  5005               	movf	??_LCD_PIC_SetCursor^0,w,c
   833  000CD6  6E09               	movwf	LCD_PIC_SetCursor@n^0,c
   834  000CD8                     
   835                           ;LCD_PIC.c: 49:             LCD_PIC_Cmd(n);
   836  000CD8  5009               	movf	LCD_PIC_SetCursor@n^0,w,c
   837  000CDA  EC5C  F007         	call	_LCD_PIC_Cmd
   838  000CDE                     
   839                           ;LCD_PIC.c: 50:             LCD_PIC_Cmd(m);
   840  000CDE  5008               	movf	LCD_PIC_SetCursor@m^0,w,c
   841  000CE0  EC5C  F007         	call	_LCD_PIC_Cmd
   842                           
   843                           ;LCD_PIC.c: 52:             break;
   844  000CE4  EFE5  F006         	goto	l64
   845  000CE8                     l1334:
   846                           
   847                           ;LCD_PIC.c: 55:             m = 0xC0+x;
   848  000CE8  500A               	movf	LCD_PIC_SetCursor@x^0,w,c
   849  000CEA  0FC0               	addlw	192
   850  000CEC  6E08               	movwf	LCD_PIC_SetCursor@m^0,c
   851                           
   852                           ;LCD_PIC.c: 56:             n = (0xC0+x)>>4;
   853  000CEE  500A               	movf	LCD_PIC_SetCursor@x^0,w,c
   854  000CF0  6E05               	movwf	??_LCD_PIC_SetCursor^0,c
   855  000CF2  6A06               	clrf	(??_LCD_PIC_SetCursor+1)^0,c
   856  000CF4  0EC0               	movlw	192
   857  000CF6  2605               	addwf	??_LCD_PIC_SetCursor^0,f,c
   858  000CF8  0E00               	movlw	0
   859  000CFA  2206               	addwfc	(??_LCD_PIC_SetCursor+1)^0,f,c
   860  000CFC  0E04               	movlw	4
   861  000CFE  6E07               	movwf	(??_LCD_PIC_SetCursor+2)^0,c
   862  000D00                     u115:
   863  000D00  3406               	rlcf	(??_LCD_PIC_SetCursor+1)^0,w,c
   864  000D02  3206               	rrcf	(??_LCD_PIC_SetCursor+1)^0,f,c
   865  000D04  3205               	rrcf	??_LCD_PIC_SetCursor^0,f,c
   866  000D06  2E07               	decfsz	(??_LCD_PIC_SetCursor+2)^0,f,c
   867  000D08  EF80  F006         	goto	u115
   868  000D0C  5005               	movf	??_LCD_PIC_SetCursor^0,w,c
   869  000D0E  6E09               	movwf	LCD_PIC_SetCursor@n^0,c
   870  000D10                     
   871                           ;LCD_PIC.c: 57:             LCD_PIC_Cmd(n);
   872  000D10  5009               	movf	LCD_PIC_SetCursor@n^0,w,c
   873  000D12  EC5C  F007         	call	_LCD_PIC_Cmd
   874  000D16                     
   875                           ;LCD_PIC.c: 58:             LCD_PIC_Cmd(m);
   876  000D16  5008               	movf	LCD_PIC_SetCursor@m^0,w,c
   877  000D18  EC5C  F007         	call	_LCD_PIC_Cmd
   878                           
   879                           ;LCD_PIC.c: 60:             break;
   880  000D1C  EFE5  F006         	goto	l64
   881  000D20                     l1340:
   882                           
   883                           ;LCD_PIC.c: 63:             m = 0x94+x;
   884  000D20  500A               	movf	LCD_PIC_SetCursor@x^0,w,c
   885  000D22  0F94               	addlw	148
   886  000D24  6E08               	movwf	LCD_PIC_SetCursor@m^0,c
   887                           
   888                           ;LCD_PIC.c: 64:             n = (0x94+x)>>4;
   889  000D26  500A               	movf	LCD_PIC_SetCursor@x^0,w,c
   890  000D28  6E05               	movwf	??_LCD_PIC_SetCursor^0,c
   891  000D2A  6A06               	clrf	(??_LCD_PIC_SetCursor+1)^0,c
   892  000D2C  0E94               	movlw	148
   893  000D2E  2605               	addwf	??_LCD_PIC_SetCursor^0,f,c
   894  000D30  0E00               	movlw	0
   895  000D32  2206               	addwfc	(??_LCD_PIC_SetCursor+1)^0,f,c
   896  000D34  0E04               	movlw	4
   897  000D36  6E07               	movwf	(??_LCD_PIC_SetCursor+2)^0,c
   898  000D38                     u125:
   899  000D38  3406               	rlcf	(??_LCD_PIC_SetCursor+1)^0,w,c
   900  000D3A  3206               	rrcf	(??_LCD_PIC_SetCursor+1)^0,f,c
   901  000D3C  3205               	rrcf	??_LCD_PIC_SetCursor^0,f,c
   902  000D3E  2E07               	decfsz	(??_LCD_PIC_SetCursor+2)^0,f,c
   903  000D40  EF9C  F006         	goto	u125
   904  000D44  5005               	movf	??_LCD_PIC_SetCursor^0,w,c
   905  000D46  6E09               	movwf	LCD_PIC_SetCursor@n^0,c
   906  000D48                     
   907                           ;LCD_PIC.c: 65:             LCD_PIC_Cmd(n);
   908  000D48  5009               	movf	LCD_PIC_SetCursor@n^0,w,c
   909  000D4A  EC5C  F007         	call	_LCD_PIC_Cmd
   910  000D4E                     
   911                           ;LCD_PIC.c: 66:             LCD_PIC_Cmd(m);
   912  000D4E  5008               	movf	LCD_PIC_SetCursor@m^0,w,c
   913  000D50  EC5C  F007         	call	_LCD_PIC_Cmd
   914                           
   915                           ;LCD_PIC.c: 68:             break;
   916  000D54  EFE5  F006         	goto	l64
   917  000D58                     l1346:
   918                           
   919                           ;LCD_PIC.c: 71:             m = 0xD4+x;
   920  000D58  500A               	movf	LCD_PIC_SetCursor@x^0,w,c
   921  000D5A  0FD4               	addlw	212
   922  000D5C  6E08               	movwf	LCD_PIC_SetCursor@m^0,c
   923                           
   924                           ;LCD_PIC.c: 72:             n = (0xD4+x)>>4;
   925  000D5E  500A               	movf	LCD_PIC_SetCursor@x^0,w,c
   926  000D60  6E05               	movwf	??_LCD_PIC_SetCursor^0,c
   927  000D62  6A06               	clrf	(??_LCD_PIC_SetCursor+1)^0,c
   928  000D64  0ED4               	movlw	212
   929  000D66  2605               	addwf	??_LCD_PIC_SetCursor^0,f,c
   930  000D68  0E00               	movlw	0
   931  000D6A  2206               	addwfc	(??_LCD_PIC_SetCursor+1)^0,f,c
   932  000D6C  0E04               	movlw	4
   933  000D6E  6E07               	movwf	(??_LCD_PIC_SetCursor+2)^0,c
   934  000D70                     u135:
   935  000D70  3406               	rlcf	(??_LCD_PIC_SetCursor+1)^0,w,c
   936  000D72  3206               	rrcf	(??_LCD_PIC_SetCursor+1)^0,f,c
   937  000D74  3205               	rrcf	??_LCD_PIC_SetCursor^0,f,c
   938  000D76  2E07               	decfsz	(??_LCD_PIC_SetCursor+2)^0,f,c
   939  000D78  EFB8  F006         	goto	u135
   940  000D7C  5005               	movf	??_LCD_PIC_SetCursor^0,w,c
   941  000D7E  6E09               	movwf	LCD_PIC_SetCursor@n^0,c
   942  000D80                     
   943                           ;LCD_PIC.c: 73:             LCD_PIC_Cmd(n);
   944  000D80  5009               	movf	LCD_PIC_SetCursor@n^0,w,c
   945  000D82  EC5C  F007         	call	_LCD_PIC_Cmd
   946  000D86                     
   947                           ;LCD_PIC.c: 74:             LCD_PIC_Cmd(m);
   948  000D86  5008               	movf	LCD_PIC_SetCursor@m^0,w,c
   949  000D88  EC5C  F007         	call	_LCD_PIC_Cmd
   950                           
   951                           ;LCD_PIC.c: 76:             break;
   952  000D8C  EFE5  F006         	goto	l64
   953  000D90                     l1354:
   954  000D90  5004               	movf	LCD_PIC_SetCursor@y^0,w,c
   955  000D92  6E05               	movwf	??_LCD_PIC_SetCursor^0,c
   956  000D94  6A06               	clrf	(??_LCD_PIC_SetCursor+1)^0,c
   957                           
   958                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   959                           ; Switch size 1, requested type "simple"
   960                           ; Number of cases is 1, Range of values is 0 to 0
   961                           ; switch strategies available:
   962                           ; Name         Instructions Cycles
   963                           ; simple_byte            4     3 (average)
   964                           ;	Chosen strategy is simple_byte
   965  000D96  5006               	movf	(??_LCD_PIC_SetCursor+1)^0,w,c
   966  000D98  0A00               	xorlw	0	; case 0
   967  000D9A  B4D8               	btfsc	status,2,c
   968  000D9C  EFD2  F006         	goto	l1428
   969  000DA0  EFE5  F006         	goto	l64
   970  000DA4                     l1428:
   971                           
   972                           ; Switch size 1, requested type "simple"
   973                           ; Number of cases is 4, Range of values is 0 to 3
   974                           ; switch strategies available:
   975                           ; Name         Instructions Cycles
   976                           ; simple_byte           13     7 (average)
   977                           ;	Chosen strategy is simple_byte
   978  000DA4  5005               	movf	??_LCD_PIC_SetCursor^0,w,c
   979  000DA6  0A00               	xorlw	0	; case 0
   980  000DA8  B4D8               	btfsc	status,2,c
   981  000DAA  EF58  F006         	goto	l1328
   982  000DAE  0A01               	xorlw	1	; case 1
   983  000DB0  B4D8               	btfsc	status,2,c
   984  000DB2  EF74  F006         	goto	l1334
   985  000DB6  0A03               	xorlw	3	; case 2
   986  000DB8  B4D8               	btfsc	status,2,c
   987  000DBA  EF90  F006         	goto	l1340
   988  000DBE  0A01               	xorlw	1	; case 3
   989  000DC0  B4D8               	btfsc	status,2,c
   990  000DC2  EFAC  F006         	goto	l1346
   991  000DC6  EFE5  F006         	goto	l64
   992  000DCA                     l64:
   993  000DCA  0012               	return		;funcret
   994  000DCC                     __end_of_LCD_PIC_SetCursor:
   995                           	callstack 0
   996                           
   997 ;; *************** function _LCD_PIC_New_Char *****************
   998 ;; Defined at:
   999 ;;		line 110 in file "LCD_PIC.c"
  1000 ;; Parameters:    Size  Location     Type
  1001 ;;  a               1    wreg     unsigned char 
  1002 ;;  b               1    3[COMRAM] unsigned char 
  1003 ;;  c               1    4[COMRAM] unsigned char 
  1004 ;;  d               1    5[COMRAM] unsigned char 
  1005 ;;  e               1    6[COMRAM] unsigned char 
  1006 ;;  f               1    7[COMRAM] unsigned char 
  1007 ;;  g               1    8[COMRAM] unsigned char 
  1008 ;;  h               1    9[COMRAM] unsigned char 
  1009 ;;  i               1   10[COMRAM] unsigned char 
  1010 ;; Auto vars:     Size  Location     Type
  1011 ;;  a               1   13[COMRAM] unsigned char 
  1012 ;;  n               1   15[COMRAM] unsigned char 
  1013 ;;  m               1   14[COMRAM] unsigned char 
  1014 ;; Return value:  Size  Location     Type
  1015 ;;                  1    wreg      void 
  1016 ;; Registers used:
  1017 ;;		wreg, status,2, status,0, cstack
  1018 ;; Tracked objects:
  1019 ;;		On entry : 0/0
  1020 ;;		On exit  : 0/0
  1021 ;;		Unchanged: 0/0
  1022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1023 ;;      Params:         8       0       0       0       0       0       0       0       0
  1024 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1025 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1026 ;;      Totals:        13       0       0       0       0       0       0       0       0
  1027 ;;Total ram usage:       13 bytes
  1028 ;; Hardware stack levels used: 1
  1029 ;; Hardware stack levels required when called: 2
  1030 ;; This function calls:
  1031 ;;		_LCD_PIC_Cmd
  1032 ;; This function is called by:
  1033 ;;		_main
  1034 ;; This function uses a non-reentrant model
  1035 ;;
  1036                           
  1037                           	psect	text5
  1038  000858                     __ptext5:
  1039                           	callstack 0
  1040  000858                     _LCD_PIC_New_Char:
  1041                           	callstack 28
  1042                           
  1043                           ;incstack = 0
  1044                           ;LCD_PIC_New_Char@a stored from wreg
  1045  000858  6E0E               	movwf	LCD_PIC_New_Char@a^0,c
  1046  00085A                     
  1047                           ;LCD_PIC.c: 111:     uint8_t m,n;;LCD_PIC.c: 112:     switch(a){
  1048  00085A  EF7E  F005         	goto	l1320
  1049  00085E                     l1138:
  1050                           
  1051                           ;LCD_PIC.c: 114:         LCD_PIC_Cmd(0x04);
  1052  00085E  0E04               	movlw	4
  1053  000860  EC5C  F007         	call	_LCD_PIC_Cmd
  1054                           
  1055                           ;LCD_PIC.c: 115:         LCD_PIC_Cmd(0x00);
  1056  000864  0E00               	movlw	0
  1057  000866  EC5C  F007         	call	_LCD_PIC_Cmd
  1058  00086A                     
  1059                           ;LCD_PIC.c: 116:         LATDbits.LATD3 = 1;
  1060  00086A  868C               	bsf	140,3,c	;volatile
  1061  00086C                     
  1062                           ;LCD_PIC.c: 117:         m=b>>4;
  1063  00086C  3804               	swapf	LCD_PIC_New_Char@b^0,w,c
  1064  00086E  0B0F               	andlw	15
  1065  000870  6E0F               	movwf	LCD_PIC_New_Char@m^0,c
  1066  000872                     
  1067                           ;LCD_PIC.c: 118:         n=b;
  1068  000872  C004  F010         	movff	LCD_PIC_New_Char@b,LCD_PIC_New_Char@n
  1069  000876                     
  1070                           ;LCD_PIC.c: 119:         LCD_PIC_Cmd(m);
  1071  000876  500F               	movf	LCD_PIC_New_Char@m^0,w,c
  1072  000878  EC5C  F007         	call	_LCD_PIC_Cmd
  1073  00087C                     
  1074                           ;LCD_PIC.c: 120:         LCD_PIC_Cmd(n);
  1075  00087C  5010               	movf	LCD_PIC_New_Char@n^0,w,c
  1076  00087E  EC5C  F007         	call	_LCD_PIC_Cmd
  1077  000882                     
  1078                           ;LCD_PIC.c: 121:         m=c>>4;
  1079  000882  3805               	swapf	LCD_PIC_New_Char@c^0,w,c
  1080  000884  0B0F               	andlw	15
  1081  000886  6E0F               	movwf	LCD_PIC_New_Char@m^0,c
  1082  000888                     
  1083                           ;LCD_PIC.c: 122:         n=c;
  1084  000888  C005  F010         	movff	LCD_PIC_New_Char@c,LCD_PIC_New_Char@n
  1085                           
  1086                           ;LCD_PIC.c: 123:         LCD_PIC_Cmd(m);
  1087  00088C  500F               	movf	LCD_PIC_New_Char@m^0,w,c
  1088  00088E  EC5C  F007         	call	_LCD_PIC_Cmd
  1089                           
  1090                           ;LCD_PIC.c: 124:         LCD_PIC_Cmd(n);
  1091  000892  5010               	movf	LCD_PIC_New_Char@n^0,w,c
  1092  000894  EC5C  F007         	call	_LCD_PIC_Cmd
  1093  000898                     
  1094                           ;LCD_PIC.c: 125:         m=d>>4;
  1095  000898  3806               	swapf	LCD_PIC_New_Char@d^0,w,c
  1096  00089A  0B0F               	andlw	15
  1097  00089C  6E0F               	movwf	LCD_PIC_New_Char@m^0,c
  1098  00089E                     
  1099                           ;LCD_PIC.c: 126:         n=d;
  1100  00089E  C006  F010         	movff	LCD_PIC_New_Char@d,LCD_PIC_New_Char@n
  1101  0008A2                     
  1102                           ;LCD_PIC.c: 127:         LCD_PIC_Cmd(m);
  1103  0008A2  500F               	movf	LCD_PIC_New_Char@m^0,w,c
  1104  0008A4  EC5C  F007         	call	_LCD_PIC_Cmd
  1105  0008A8                     
  1106                           ;LCD_PIC.c: 128:         LCD_PIC_Cmd(n);
  1107  0008A8  5010               	movf	LCD_PIC_New_Char@n^0,w,c
  1108  0008AA  EC5C  F007         	call	_LCD_PIC_Cmd
  1109  0008AE                     
  1110                           ;LCD_PIC.c: 129:         m=e>>4;
  1111  0008AE  3807               	swapf	LCD_PIC_New_Char@e^0,w,c
  1112  0008B0  0B0F               	andlw	15
  1113  0008B2  6E0F               	movwf	LCD_PIC_New_Char@m^0,c
  1114  0008B4                     
  1115                           ;LCD_PIC.c: 130:         n=e;
  1116  0008B4  C007  F010         	movff	LCD_PIC_New_Char@e,LCD_PIC_New_Char@n
  1117                           
  1118                           ;LCD_PIC.c: 131:         LCD_PIC_Cmd(m);
  1119  0008B8  500F               	movf	LCD_PIC_New_Char@m^0,w,c
  1120  0008BA  EC5C  F007         	call	_LCD_PIC_Cmd
  1121                           
  1122                           ;LCD_PIC.c: 132:         LCD_PIC_Cmd(n);
  1123  0008BE  5010               	movf	LCD_PIC_New_Char@n^0,w,c
  1124  0008C0  EC5C  F007         	call	_LCD_PIC_Cmd
  1125  0008C4                     
  1126                           ;LCD_PIC.c: 133:         m=f>>4;
  1127  0008C4  3808               	swapf	LCD_PIC_New_Char@f^0,w,c
  1128  0008C6  0B0F               	andlw	15
  1129  0008C8  6E0F               	movwf	LCD_PIC_New_Char@m^0,c
  1130  0008CA                     
  1131                           ;LCD_PIC.c: 134:         n=f;
  1132  0008CA  C008  F010         	movff	LCD_PIC_New_Char@f,LCD_PIC_New_Char@n
  1133  0008CE                     
  1134                           ;LCD_PIC.c: 135:         LCD_PIC_Cmd(m);
  1135  0008CE  500F               	movf	LCD_PIC_New_Char@m^0,w,c
  1136  0008D0  EC5C  F007         	call	_LCD_PIC_Cmd
  1137  0008D4                     
  1138                           ;LCD_PIC.c: 136:         LCD_PIC_Cmd(n);
  1139  0008D4  5010               	movf	LCD_PIC_New_Char@n^0,w,c
  1140  0008D6  EC5C  F007         	call	_LCD_PIC_Cmd
  1141  0008DA                     
  1142                           ;LCD_PIC.c: 137:         m=g>>4;
  1143  0008DA  3809               	swapf	LCD_PIC_New_Char@g^0,w,c
  1144  0008DC  0B0F               	andlw	15
  1145  0008DE  6E0F               	movwf	LCD_PIC_New_Char@m^0,c
  1146  0008E0                     
  1147                           ;LCD_PIC.c: 138:         n=g;
  1148  0008E0  C009  F010         	movff	LCD_PIC_New_Char@g,LCD_PIC_New_Char@n
  1149                           
  1150                           ;LCD_PIC.c: 139:         LCD_PIC_Cmd(m);
  1151  0008E4  500F               	movf	LCD_PIC_New_Char@m^0,w,c
  1152  0008E6  EC5C  F007         	call	_LCD_PIC_Cmd
  1153                           
  1154                           ;LCD_PIC.c: 140:         LCD_PIC_Cmd(n);
  1155  0008EA  5010               	movf	LCD_PIC_New_Char@n^0,w,c
  1156  0008EC  EC5C  F007         	call	_LCD_PIC_Cmd
  1157  0008F0                     
  1158                           ;LCD_PIC.c: 141:         m=h>>4;
  1159  0008F0  380A               	swapf	LCD_PIC_New_Char@h^0,w,c
  1160  0008F2  0B0F               	andlw	15
  1161  0008F4  6E0F               	movwf	LCD_PIC_New_Char@m^0,c
  1162  0008F6                     
  1163                           ;LCD_PIC.c: 142:         n=h;
  1164  0008F6  C00A  F010         	movff	LCD_PIC_New_Char@h,LCD_PIC_New_Char@n
  1165  0008FA                     
  1166                           ;LCD_PIC.c: 143:         LCD_PIC_Cmd(m);
  1167  0008FA  500F               	movf	LCD_PIC_New_Char@m^0,w,c
  1168  0008FC  EC5C  F007         	call	_LCD_PIC_Cmd
  1169  000900                     
  1170                           ;LCD_PIC.c: 144:         LCD_PIC_Cmd(n);
  1171  000900  5010               	movf	LCD_PIC_New_Char@n^0,w,c
  1172  000902  EC5C  F007         	call	_LCD_PIC_Cmd
  1173  000906                     
  1174                           ;LCD_PIC.c: 145:         m=i>>4;
  1175  000906  380B               	swapf	LCD_PIC_New_Char@i^0,w,c
  1176  000908  0B0F               	andlw	15
  1177  00090A  6E0F               	movwf	LCD_PIC_New_Char@m^0,c
  1178  00090C                     
  1179                           ;LCD_PIC.c: 146:         n=i;
  1180  00090C  C00B  F010         	movff	LCD_PIC_New_Char@i,LCD_PIC_New_Char@n
  1181                           
  1182                           ;LCD_PIC.c: 147:         LCD_PIC_Cmd(m);
  1183  000910  500F               	movf	LCD_PIC_New_Char@m^0,w,c
  1184  000912  EC5C  F007         	call	_LCD_PIC_Cmd
  1185                           
  1186                           ;LCD_PIC.c: 148:         LCD_PIC_Cmd(n);
  1187  000916  5010               	movf	LCD_PIC_New_Char@n^0,w,c
  1188  000918  EC5C  F007         	call	_LCD_PIC_Cmd
  1189  00091C                     
  1190                           ;LCD_PIC.c: 149:         LATDbits.LATD3 = 0;
  1191  00091C  968C               	bcf	140,3,c	;volatile
  1192                           
  1193                           ;LCD_PIC.c: 150:         LCD_PIC_Cmd(0x00);
  1194  00091E  0E00               	movlw	0
  1195  000920  EC5C  F007         	call	_LCD_PIC_Cmd
  1196                           
  1197                           ;LCD_PIC.c: 151:         LCD_PIC_Cmd(0x01);
  1198  000924  0E01               	movlw	1
  1199  000926  EC5C  F007         	call	_LCD_PIC_Cmd
  1200  00092A                     l1192:
  1201                           
  1202                           ;LCD_PIC.c: 152:         _delay((unsigned long)((100)*(8000000UL/4000.0)));
  1203  00092A  0E02               	movlw	2
  1204  00092C  6E0D               	movwf	(??_LCD_PIC_New_Char+1)^0,c
  1205  00092E  0E04               	movlw	4
  1206  000930  6E0C               	movwf	??_LCD_PIC_New_Char^0,c
  1207  000932  0EBA               	movlw	186
  1208  000934                     u177:
  1209  000934  2EE8               	decfsz	wreg,f,c
  1210  000936  D7FE               	bra	u177
  1211  000938  2E0C               	decfsz	??_LCD_PIC_New_Char^0,f,c
  1212  00093A  D7FC               	bra	u177
  1213  00093C  2E0D               	decfsz	(??_LCD_PIC_New_Char+1)^0,f,c
  1214  00093E  D7FA               	bra	u177
  1215  000940  D000               	nop2	
  1216                           
  1217                           ;LCD_PIC.c: 153:         break;
  1218  000942  EF97  F005         	goto	l87
  1219  000946                     l1194:
  1220                           
  1221                           ;LCD_PIC.c: 155:             LCD_PIC_Cmd(0x04);
  1222  000946  0E04               	movlw	4
  1223  000948  EC5C  F007         	call	_LCD_PIC_Cmd
  1224                           
  1225                           ;LCD_PIC.c: 156:             LCD_PIC_Cmd(0x08);
  1226  00094C  0E08               	movlw	8
  1227  00094E  EC5C  F007         	call	_LCD_PIC_Cmd
  1228  000952                     
  1229                           ;LCD_PIC.c: 157:            LATDbits.LATD3 = 1;
  1230  000952  868C               	bsf	140,3,c	;volatile
  1231  000954                     
  1232                           ;LCD_PIC.c: 158:         m=b>>4;
  1233  000954  3804               	swapf	LCD_PIC_New_Char@b^0,w,c
  1234  000956  0B0F               	andlw	15
  1235  000958  6E0F               	movwf	LCD_PIC_New_Char@m^0,c
  1236  00095A                     
  1237                           ;LCD_PIC.c: 159:         n=b;
  1238  00095A  C004  F010         	movff	LCD_PIC_New_Char@b,LCD_PIC_New_Char@n
  1239  00095E                     
  1240                           ;LCD_PIC.c: 160:         LCD_PIC_Cmd(m);
  1241  00095E  500F               	movf	LCD_PIC_New_Char@m^0,w,c
  1242  000960  EC5C  F007         	call	_LCD_PIC_Cmd
  1243  000964                     
  1244                           ;LCD_PIC.c: 161:         LCD_PIC_Cmd(n);
  1245  000964  5010               	movf	LCD_PIC_New_Char@n^0,w,c
  1246  000966  EC5C  F007         	call	_LCD_PIC_Cmd
  1247  00096A                     
  1248                           ;LCD_PIC.c: 162:         m=c>>4;
  1249  00096A  3805               	swapf	LCD_PIC_New_Char@c^0,w,c
  1250  00096C  0B0F               	andlw	15
  1251  00096E  6E0F               	movwf	LCD_PIC_New_Char@m^0,c
  1252  000970                     
  1253                           ;LCD_PIC.c: 163:         n=c;
  1254  000970  C005  F010         	movff	LCD_PIC_New_Char@c,LCD_PIC_New_Char@n
  1255                           
  1256                           ;LCD_PIC.c: 164:         LCD_PIC_Cmd(m);
  1257  000974  500F               	movf	LCD_PIC_New_Char@m^0,w,c
  1258  000976  EC5C  F007         	call	_LCD_PIC_Cmd
  1259                           
  1260                           ;LCD_PIC.c: 165:         LCD_PIC_Cmd(n);
  1261  00097A  5010               	movf	LCD_PIC_New_Char@n^0,w,c
  1262  00097C  EC5C  F007         	call	_LCD_PIC_Cmd
  1263  000980                     
  1264                           ;LCD_PIC.c: 166:         m=c>>4;
  1265  000980  3805               	swapf	LCD_PIC_New_Char@c^0,w,c
  1266  000982  0B0F               	andlw	15
  1267  000984  6E0F               	movwf	LCD_PIC_New_Char@m^0,c
  1268  000986                     
  1269                           ;LCD_PIC.c: 167:         n=c;
  1270  000986  C005  F010         	movff	LCD_PIC_New_Char@c,LCD_PIC_New_Char@n
  1271  00098A                     
  1272                           ;LCD_PIC.c: 168:         LCD_PIC_Cmd(m);
  1273  00098A  500F               	movf	LCD_PIC_New_Char@m^0,w,c
  1274  00098C  EC5C  F007         	call	_LCD_PIC_Cmd
  1275  000990                     
  1276                           ;LCD_PIC.c: 169:         LCD_PIC_Cmd(n);
  1277  000990  5010               	movf	LCD_PIC_New_Char@n^0,w,c
  1278  000992  EC5C  F007         	call	_LCD_PIC_Cmd
  1279  000996                     
  1280                           ;LCD_PIC.c: 170:         m=d>>4;
  1281  000996  3806               	swapf	LCD_PIC_New_Char@d^0,w,c
  1282  000998  0B0F               	andlw	15
  1283  00099A  6E0F               	movwf	LCD_PIC_New_Char@m^0,c
  1284  00099C                     
  1285                           ;LCD_PIC.c: 171:         n=d;
  1286  00099C  C006  F010         	movff	LCD_PIC_New_Char@d,LCD_PIC_New_Char@n
  1287                           
  1288                           ;LCD_PIC.c: 172:         LCD_PIC_Cmd(m);
  1289  0009A0  500F               	movf	LCD_PIC_New_Char@m^0,w,c
  1290  0009A2  EC5C  F007         	call	_LCD_PIC_Cmd
  1291                           
  1292                           ;LCD_PIC.c: 173:         LCD_PIC_Cmd(n);
  1293  0009A6  5010               	movf	LCD_PIC_New_Char@n^0,w,c
  1294  0009A8  EC5C  F007         	call	_LCD_PIC_Cmd
  1295  0009AC                     
  1296                           ;LCD_PIC.c: 174:         m=e>>4;
  1297  0009AC  3807               	swapf	LCD_PIC_New_Char@e^0,w,c
  1298  0009AE  0B0F               	andlw	15
  1299  0009B0  6E0F               	movwf	LCD_PIC_New_Char@m^0,c
  1300  0009B2                     
  1301                           ;LCD_PIC.c: 175:         n=e;
  1302  0009B2  C007  F010         	movff	LCD_PIC_New_Char@e,LCD_PIC_New_Char@n
  1303  0009B6                     
  1304                           ;LCD_PIC.c: 176:         LCD_PIC_Cmd(m);
  1305  0009B6  500F               	movf	LCD_PIC_New_Char@m^0,w,c
  1306  0009B8  EC5C  F007         	call	_LCD_PIC_Cmd
  1307  0009BC                     
  1308                           ;LCD_PIC.c: 177:         LCD_PIC_Cmd(n);
  1309  0009BC  5010               	movf	LCD_PIC_New_Char@n^0,w,c
  1310  0009BE  EC5C  F007         	call	_LCD_PIC_Cmd
  1311  0009C2                     
  1312                           ;LCD_PIC.c: 178:         m=f>>4;
  1313  0009C2  3808               	swapf	LCD_PIC_New_Char@f^0,w,c
  1314  0009C4  0B0F               	andlw	15
  1315  0009C6  6E0F               	movwf	LCD_PIC_New_Char@m^0,c
  1316  0009C8                     
  1317                           ;LCD_PIC.c: 179:         n=f;
  1318  0009C8  C008  F010         	movff	LCD_PIC_New_Char@f,LCD_PIC_New_Char@n
  1319                           
  1320                           ;LCD_PIC.c: 180:         LCD_PIC_Cmd(m);
  1321  0009CC  500F               	movf	LCD_PIC_New_Char@m^0,w,c
  1322  0009CE  EC5C  F007         	call	_LCD_PIC_Cmd
  1323                           
  1324                           ;LCD_PIC.c: 181:         LCD_PIC_Cmd(n);
  1325  0009D2  5010               	movf	LCD_PIC_New_Char@n^0,w,c
  1326  0009D4  EC5C  F007         	call	_LCD_PIC_Cmd
  1327  0009D8                     
  1328                           ;LCD_PIC.c: 182:         m=g>>4;
  1329  0009D8  3809               	swapf	LCD_PIC_New_Char@g^0,w,c
  1330  0009DA  0B0F               	andlw	15
  1331  0009DC  6E0F               	movwf	LCD_PIC_New_Char@m^0,c
  1332  0009DE                     
  1333                           ;LCD_PIC.c: 183:         n=g;
  1334  0009DE  C009  F010         	movff	LCD_PIC_New_Char@g,LCD_PIC_New_Char@n
  1335  0009E2                     
  1336                           ;LCD_PIC.c: 184:         LCD_PIC_Cmd(m);
  1337  0009E2  500F               	movf	LCD_PIC_New_Char@m^0,w,c
  1338  0009E4  EC5C  F007         	call	_LCD_PIC_Cmd
  1339  0009E8                     
  1340                           ;LCD_PIC.c: 185:         LCD_PIC_Cmd(n);
  1341  0009E8  5010               	movf	LCD_PIC_New_Char@n^0,w,c
  1342  0009EA  EC5C  F007         	call	_LCD_PIC_Cmd
  1343  0009EE                     
  1344                           ;LCD_PIC.c: 186:         m=h>>4;
  1345  0009EE  380A               	swapf	LCD_PIC_New_Char@h^0,w,c
  1346  0009F0  0B0F               	andlw	15
  1347  0009F2  6E0F               	movwf	LCD_PIC_New_Char@m^0,c
  1348  0009F4                     
  1349                           ;LCD_PIC.c: 187:         n=h;
  1350  0009F4  C00A  F010         	movff	LCD_PIC_New_Char@h,LCD_PIC_New_Char@n
  1351                           
  1352                           ;LCD_PIC.c: 188:         LCD_PIC_Cmd(m);
  1353  0009F8  500F               	movf	LCD_PIC_New_Char@m^0,w,c
  1354  0009FA  EC5C  F007         	call	_LCD_PIC_Cmd
  1355                           
  1356                           ;LCD_PIC.c: 189:         LCD_PIC_Cmd(n);
  1357  0009FE  5010               	movf	LCD_PIC_New_Char@n^0,w,c
  1358  000A00  EC5C  F007         	call	_LCD_PIC_Cmd
  1359  000A04                     
  1360                           ;LCD_PIC.c: 190:         m=i>>4;
  1361  000A04  380B               	swapf	LCD_PIC_New_Char@i^0,w,c
  1362  000A06  0B0F               	andlw	15
  1363  000A08  6E0F               	movwf	LCD_PIC_New_Char@m^0,c
  1364  000A0A                     
  1365                           ;LCD_PIC.c: 191:         n=i;
  1366  000A0A  C00B  F010         	movff	LCD_PIC_New_Char@i,LCD_PIC_New_Char@n
  1367  000A0E                     
  1368                           ;LCD_PIC.c: 192:         LCD_PIC_Cmd(m);
  1369  000A0E  500F               	movf	LCD_PIC_New_Char@m^0,w,c
  1370  000A10  EC5C  F007         	call	_LCD_PIC_Cmd
  1371  000A14                     
  1372                           ;LCD_PIC.c: 193:         LCD_PIC_Cmd(n);
  1373  000A14  5010               	movf	LCD_PIC_New_Char@n^0,w,c
  1374  000A16  EC5C  F007         	call	_LCD_PIC_Cmd
  1375  000A1A                     
  1376                           ;LCD_PIC.c: 194:         LATDbits.LATD3 = 0;
  1377  000A1A  968C               	bcf	140,3,c	;volatile
  1378  000A1C                     
  1379                           ;LCD_PIC.c: 195:         LCD_PIC_Cmd(0x00);
  1380  000A1C  0E00               	movlw	0
  1381  000A1E  EC5C  F007         	call	_LCD_PIC_Cmd
  1382  000A22                     
  1383                           ;LCD_PIC.c: 196:         LCD_PIC_Cmd(0x01);
  1384  000A22  0E01               	movlw	1
  1385  000A24  EC5C  F007         	call	_LCD_PIC_Cmd
  1386  000A28  EF95  F004         	goto	l1192
  1387  000A2C                     l1262:
  1388                           
  1389                           ;LCD_PIC.c: 200:             LCD_PIC_Cmd(0x04);
  1390  000A2C  0E04               	movlw	4
  1391  000A2E  EC5C  F007         	call	_LCD_PIC_Cmd
  1392                           
  1393                           ;LCD_PIC.c: 201:             LCD_PIC_Cmd(0xFF);
  1394  000A32  0EFF               	movlw	255
  1395  000A34  EC5C  F007         	call	_LCD_PIC_Cmd
  1396  000A38                     
  1397                           ;LCD_PIC.c: 202:         LATDbits.LATD3 = 1;
  1398  000A38  868C               	bsf	140,3,c	;volatile
  1399  000A3A                     
  1400                           ;LCD_PIC.c: 203:         m=b>>4;
  1401  000A3A  3804               	swapf	LCD_PIC_New_Char@b^0,w,c
  1402  000A3C  0B0F               	andlw	15
  1403  000A3E  6E0F               	movwf	LCD_PIC_New_Char@m^0,c
  1404  000A40                     
  1405                           ;LCD_PIC.c: 204:         n=b;
  1406  000A40  C004  F010         	movff	LCD_PIC_New_Char@b,LCD_PIC_New_Char@n
  1407  000A44                     
  1408                           ;LCD_PIC.c: 205:         LCD_PIC_Cmd(m);
  1409  000A44  500F               	movf	LCD_PIC_New_Char@m^0,w,c
  1410  000A46  EC5C  F007         	call	_LCD_PIC_Cmd
  1411  000A4A                     
  1412                           ;LCD_PIC.c: 206:         LCD_PIC_Cmd(n);
  1413  000A4A  5010               	movf	LCD_PIC_New_Char@n^0,w,c
  1414  000A4C  EC5C  F007         	call	_LCD_PIC_Cmd
  1415  000A50                     
  1416                           ;LCD_PIC.c: 207:         m=c>>4;
  1417  000A50  3805               	swapf	LCD_PIC_New_Char@c^0,w,c
  1418  000A52  0B0F               	andlw	15
  1419  000A54  6E0F               	movwf	LCD_PIC_New_Char@m^0,c
  1420  000A56                     
  1421                           ;LCD_PIC.c: 208:         n=c;
  1422  000A56  C005  F010         	movff	LCD_PIC_New_Char@c,LCD_PIC_New_Char@n
  1423                           
  1424                           ;LCD_PIC.c: 209:         LCD_PIC_Cmd(m);
  1425  000A5A  500F               	movf	LCD_PIC_New_Char@m^0,w,c
  1426  000A5C  EC5C  F007         	call	_LCD_PIC_Cmd
  1427                           
  1428                           ;LCD_PIC.c: 210:         LCD_PIC_Cmd(n);
  1429  000A60  5010               	movf	LCD_PIC_New_Char@n^0,w,c
  1430  000A62  EC5C  F007         	call	_LCD_PIC_Cmd
  1431  000A66                     
  1432                           ;LCD_PIC.c: 211:         m=d>>4;
  1433  000A66  3806               	swapf	LCD_PIC_New_Char@d^0,w,c
  1434  000A68  0B0F               	andlw	15
  1435  000A6A  6E0F               	movwf	LCD_PIC_New_Char@m^0,c
  1436  000A6C                     
  1437                           ;LCD_PIC.c: 212:         n=d;
  1438  000A6C  C006  F010         	movff	LCD_PIC_New_Char@d,LCD_PIC_New_Char@n
  1439  000A70                     
  1440                           ;LCD_PIC.c: 213:         LCD_PIC_Cmd(m);
  1441  000A70  500F               	movf	LCD_PIC_New_Char@m^0,w,c
  1442  000A72  EC5C  F007         	call	_LCD_PIC_Cmd
  1443  000A76                     
  1444                           ;LCD_PIC.c: 214:         LCD_PIC_Cmd(n);
  1445  000A76  5010               	movf	LCD_PIC_New_Char@n^0,w,c
  1446  000A78  EC5C  F007         	call	_LCD_PIC_Cmd
  1447  000A7C                     
  1448                           ;LCD_PIC.c: 215:         m=e>>4;
  1449  000A7C  3807               	swapf	LCD_PIC_New_Char@e^0,w,c
  1450  000A7E  0B0F               	andlw	15
  1451  000A80  6E0F               	movwf	LCD_PIC_New_Char@m^0,c
  1452  000A82                     
  1453                           ;LCD_PIC.c: 216:         n=e;
  1454  000A82  C007  F010         	movff	LCD_PIC_New_Char@e,LCD_PIC_New_Char@n
  1455                           
  1456                           ;LCD_PIC.c: 217:         LCD_PIC_Cmd(m);
  1457  000A86  500F               	movf	LCD_PIC_New_Char@m^0,w,c
  1458  000A88  EC5C  F007         	call	_LCD_PIC_Cmd
  1459                           
  1460                           ;LCD_PIC.c: 218:         LCD_PIC_Cmd(n);
  1461  000A8C  5010               	movf	LCD_PIC_New_Char@n^0,w,c
  1462  000A8E  EC5C  F007         	call	_LCD_PIC_Cmd
  1463  000A92                     
  1464                           ;LCD_PIC.c: 219:         m=f>>4;
  1465  000A92  3808               	swapf	LCD_PIC_New_Char@f^0,w,c
  1466  000A94  0B0F               	andlw	15
  1467  000A96  6E0F               	movwf	LCD_PIC_New_Char@m^0,c
  1468  000A98                     
  1469                           ;LCD_PIC.c: 220:         n=f;
  1470  000A98  C008  F010         	movff	LCD_PIC_New_Char@f,LCD_PIC_New_Char@n
  1471  000A9C                     
  1472                           ;LCD_PIC.c: 221:         LCD_PIC_Cmd(m);
  1473  000A9C  500F               	movf	LCD_PIC_New_Char@m^0,w,c
  1474  000A9E  EC5C  F007         	call	_LCD_PIC_Cmd
  1475  000AA2                     
  1476                           ;LCD_PIC.c: 222:         LCD_PIC_Cmd(n);
  1477  000AA2  5010               	movf	LCD_PIC_New_Char@n^0,w,c
  1478  000AA4  EC5C  F007         	call	_LCD_PIC_Cmd
  1479  000AA8                     
  1480                           ;LCD_PIC.c: 223:         m=g>>4;
  1481  000AA8  3809               	swapf	LCD_PIC_New_Char@g^0,w,c
  1482  000AAA  0B0F               	andlw	15
  1483  000AAC  6E0F               	movwf	LCD_PIC_New_Char@m^0,c
  1484  000AAE                     
  1485                           ;LCD_PIC.c: 224:         n=g;
  1486  000AAE  C009  F010         	movff	LCD_PIC_New_Char@g,LCD_PIC_New_Char@n
  1487                           
  1488                           ;LCD_PIC.c: 225:         LCD_PIC_Cmd(m);
  1489  000AB2  500F               	movf	LCD_PIC_New_Char@m^0,w,c
  1490  000AB4  EC5C  F007         	call	_LCD_PIC_Cmd
  1491                           
  1492                           ;LCD_PIC.c: 226:         LCD_PIC_Cmd(n);
  1493  000AB8  5010               	movf	LCD_PIC_New_Char@n^0,w,c
  1494  000ABA  EC5C  F007         	call	_LCD_PIC_Cmd
  1495  000ABE                     
  1496                           ;LCD_PIC.c: 227:         m=h>>4;
  1497  000ABE  380A               	swapf	LCD_PIC_New_Char@h^0,w,c
  1498  000AC0  0B0F               	andlw	15
  1499  000AC2  6E0F               	movwf	LCD_PIC_New_Char@m^0,c
  1500  000AC4                     
  1501                           ;LCD_PIC.c: 228:         n=h;
  1502  000AC4  C00A  F010         	movff	LCD_PIC_New_Char@h,LCD_PIC_New_Char@n
  1503  000AC8                     
  1504                           ;LCD_PIC.c: 229:         LCD_PIC_Cmd(m);
  1505  000AC8  500F               	movf	LCD_PIC_New_Char@m^0,w,c
  1506  000ACA  EC5C  F007         	call	_LCD_PIC_Cmd
  1507  000ACE                     
  1508                           ;LCD_PIC.c: 230:         LCD_PIC_Cmd(n);
  1509  000ACE  5010               	movf	LCD_PIC_New_Char@n^0,w,c
  1510  000AD0  EC5C  F007         	call	_LCD_PIC_Cmd
  1511  000AD4                     
  1512                           ;LCD_PIC.c: 231:         m=i>>4;
  1513  000AD4  380B               	swapf	LCD_PIC_New_Char@i^0,w,c
  1514  000AD6  0B0F               	andlw	15
  1515  000AD8  6E0F               	movwf	LCD_PIC_New_Char@m^0,c
  1516  000ADA                     
  1517                           ;LCD_PIC.c: 232:         n=i;
  1518  000ADA  C00B  F010         	movff	LCD_PIC_New_Char@i,LCD_PIC_New_Char@n
  1519                           
  1520                           ;LCD_PIC.c: 233:         LCD_PIC_Cmd(m);
  1521  000ADE  500F               	movf	LCD_PIC_New_Char@m^0,w,c
  1522  000AE0  EC5C  F007         	call	_LCD_PIC_Cmd
  1523                           
  1524                           ;LCD_PIC.c: 234:         LCD_PIC_Cmd(n);
  1525  000AE4  5010               	movf	LCD_PIC_New_Char@n^0,w,c
  1526  000AE6  EC5C  F007         	call	_LCD_PIC_Cmd
  1527  000AEA                     
  1528                           ;LCD_PIC.c: 235:         LATDbits.LATD3 = 0;
  1529  000AEA  968C               	bcf	140,3,c	;volatile
  1530                           
  1531                           ;LCD_PIC.c: 236:         LCD_PIC_Cmd(0x00);
  1532  000AEC  0E00               	movlw	0
  1533  000AEE  EC5C  F007         	call	_LCD_PIC_Cmd
  1534                           
  1535                           ;LCD_PIC.c: 237:         LCD_PIC_Cmd(0x01);
  1536  000AF2  0E01               	movlw	1
  1537  000AF4  EC5C  F007         	call	_LCD_PIC_Cmd
  1538  000AF8  EF95  F004         	goto	l1192
  1539  000AFC                     l1320:
  1540  000AFC  500E               	movf	LCD_PIC_New_Char@a^0,w,c
  1541  000AFE  6E0C               	movwf	??_LCD_PIC_New_Char^0,c
  1542  000B00  6A0D               	clrf	(??_LCD_PIC_New_Char+1)^0,c
  1543                           
  1544                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1545                           ; Switch size 1, requested type "simple"
  1546                           ; Number of cases is 1, Range of values is 0 to 0
  1547                           ; switch strategies available:
  1548                           ; Name         Instructions Cycles
  1549                           ; simple_byte            4     3 (average)
  1550                           ;	Chosen strategy is simple_byte
  1551  000B02  500D               	movf	(??_LCD_PIC_New_Char+1)^0,w,c
  1552  000B04  0A00               	xorlw	0	; case 0
  1553  000B06  B4D8               	btfsc	status,2,c
  1554  000B08  EF88  F005         	goto	l1430
  1555  000B0C  EF97  F005         	goto	l87
  1556  000B10                     l1430:
  1557                           
  1558                           ; Switch size 1, requested type "simple"
  1559                           ; Number of cases is 3, Range of values is 1 to 3
  1560                           ; switch strategies available:
  1561                           ; Name         Instructions Cycles
  1562                           ; simple_byte           10     6 (average)
  1563                           ;	Chosen strategy is simple_byte
  1564  000B10  500C               	movf	??_LCD_PIC_New_Char^0,w,c
  1565  000B12  0A01               	xorlw	1	; case 1
  1566  000B14  B4D8               	btfsc	status,2,c
  1567  000B16  EF2F  F004         	goto	l1138
  1568  000B1A  0A03               	xorlw	3	; case 2
  1569  000B1C  B4D8               	btfsc	status,2,c
  1570  000B1E  EFA3  F004         	goto	l1194
  1571  000B22  0A01               	xorlw	1	; case 3
  1572  000B24  B4D8               	btfsc	status,2,c
  1573  000B26  EF16  F005         	goto	l1262
  1574  000B2A  EF97  F005         	goto	l87
  1575  000B2E                     l87:
  1576  000B2E  0012               	return		;funcret
  1577  000B30                     __end_of_LCD_PIC_New_Char:
  1578                           	callstack 0
  1579                           
  1580 ;; *************** function _LCD_PIC_Init *****************
  1581 ;; Defined at:
  1582 ;;		line 21 in file "LCD_PIC.c"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;		None
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;		None
  1587 ;; Return value:  Size  Location     Type
  1588 ;;                  1    wreg      void 
  1589 ;; Registers used:
  1590 ;;		wreg, status,2, status,0, cstack
  1591 ;; Tracked objects:
  1592 ;;		On entry : 0/0
  1593 ;;		On exit  : 0/0
  1594 ;;		Unchanged: 0/0
  1595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1596 ;;      Params:         0       0       0       0       0       0       0       0       0
  1597 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1598 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1599 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1600 ;;Total ram usage:        0 bytes
  1601 ;; Hardware stack levels used: 1
  1602 ;; Hardware stack levels required when called: 2
  1603 ;; This function calls:
  1604 ;;		_LCD_PIC_Cmd
  1605 ;; This function is called by:
  1606 ;;		_main
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610                           	psect	text6
  1611  000E28                     __ptext6:
  1612                           	callstack 0
  1613  000E28                     _LCD_PIC_Init:
  1614                           	callstack 28
  1615  000E28                     
  1616                           ;LCD_PIC.c: 23:     TRISD &= ~( (1<<2) | (1<<3)| (1<<4)| (1<<5)| (1<<6)| (1<<7));
  1617  000E28  0E03               	movlw	3
  1618  000E2A  1695               	andwf	149,f,c	;volatile
  1619                           
  1620                           ;LCD_PIC.c: 24:     LATD &= ~( (1<<2) | (1<<3)| (1<<4)| (1<<5)| (1<<6)| (1<<7));
  1621  000E2C  0E03               	movlw	3
  1622  000E2E  168C               	andwf	140,f,c	;volatile
  1623  000E30                     
  1624                           ;LCD_PIC.c: 26:     LCD_PIC_Cmd(0x03);
  1625  000E30  0E03               	movlw	3
  1626  000E32  EC5C  F007         	call	_LCD_PIC_Cmd
  1627  000E36                     
  1628                           ;LCD_PIC.c: 27:     LCD_PIC_Cmd(0x03);
  1629  000E36  0E03               	movlw	3
  1630  000E38  EC5C  F007         	call	_LCD_PIC_Cmd
  1631  000E3C                     
  1632                           ;LCD_PIC.c: 28:     LCD_PIC_Cmd(0x03);
  1633  000E3C  0E03               	movlw	3
  1634  000E3E  EC5C  F007         	call	_LCD_PIC_Cmd
  1635  000E42                     
  1636                           ;LCD_PIC.c: 29:     LCD_PIC_Cmd(0x02);
  1637  000E42  0E02               	movlw	2
  1638  000E44  EC5C  F007         	call	_LCD_PIC_Cmd
  1639  000E48                     
  1640                           ;LCD_PIC.c: 30:     LCD_PIC_Cmd(0x02);
  1641  000E48  0E02               	movlw	2
  1642  000E4A  EC5C  F007         	call	_LCD_PIC_Cmd
  1643  000E4E                     
  1644                           ;LCD_PIC.c: 31:     LCD_PIC_Cmd(0x08);
  1645  000E4E  0E08               	movlw	8
  1646  000E50  EC5C  F007         	call	_LCD_PIC_Cmd
  1647  000E54                     
  1648                           ;LCD_PIC.c: 32:     LCD_PIC_Cmd(0x00);
  1649  000E54  0E00               	movlw	0
  1650  000E56  EC5C  F007         	call	_LCD_PIC_Cmd
  1651  000E5A                     
  1652                           ;LCD_PIC.c: 33:     LCD_PIC_Cmd(0x08);
  1653  000E5A  0E08               	movlw	8
  1654  000E5C  EC5C  F007         	call	_LCD_PIC_Cmd
  1655  000E60                     
  1656                           ;LCD_PIC.c: 34:     LCD_PIC_Cmd(0x00);
  1657  000E60  0E00               	movlw	0
  1658  000E62  EC5C  F007         	call	_LCD_PIC_Cmd
  1659  000E66                     
  1660                           ;LCD_PIC.c: 35:     LCD_PIC_Cmd(0x01);
  1661  000E66  0E01               	movlw	1
  1662  000E68  EC5C  F007         	call	_LCD_PIC_Cmd
  1663  000E6C                     
  1664                           ;LCD_PIC.c: 36:     LCD_PIC_Cmd(0x00);
  1665  000E6C  0E00               	movlw	0
  1666  000E6E  EC5C  F007         	call	_LCD_PIC_Cmd
  1667  000E72                     
  1668                           ;LCD_PIC.c: 37:     LCD_PIC_Cmd(0x0D);
  1669  000E72  0E0D               	movlw	13
  1670  000E74  EC5C  F007         	call	_LCD_PIC_Cmd
  1671  000E78  0012               	return		;funcret
  1672  000E7A                     __end_of_LCD_PIC_Init:
  1673                           	callstack 0
  1674                           
  1675 ;; *************** function _LCD_PIC_Home *****************
  1676 ;; Defined at:
  1677 ;;		line 104 in file "LCD_PIC.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;		None
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;		None
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  1    wreg      void 
  1684 ;; Registers used:
  1685 ;;		wreg, status,2, cstack
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1691 ;;      Params:         0       0       0       0       0       0       0       0       0
  1692 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1693 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1694 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1695 ;;Total ram usage:        0 bytes
  1696 ;; Hardware stack levels used: 1
  1697 ;; Hardware stack levels required when called: 2
  1698 ;; This function calls:
  1699 ;;		_LCD_PIC_Cmd
  1700 ;; This function is called by:
  1701 ;;		_main
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705                           	psect	text7
  1706  000F06                     __ptext7:
  1707                           	callstack 0
  1708  000F06                     _LCD_PIC_Home:
  1709                           	callstack 28
  1710  000F06                     
  1711                           ;LCD_PIC.c: 105:     LATDbits.LATD3 = 0;
  1712  000F06  968C               	bcf	140,3,c	;volatile
  1713  000F08                     
  1714                           ;LCD_PIC.c: 106:     LCD_PIC_Cmd(0x00);
  1715  000F08  0E00               	movlw	0
  1716  000F0A  EC5C  F007         	call	_LCD_PIC_Cmd
  1717                           
  1718                           ;LCD_PIC.c: 107:     LCD_PIC_Cmd(0x02);
  1719  000F0E  0E02               	movlw	2
  1720  000F10  EC5C  F007         	call	_LCD_PIC_Cmd
  1721  000F14  0012               	return		;funcret
  1722  000F16                     __end_of_LCD_PIC_Home:
  1723                           	callstack 0
  1724                           
  1725 ;; *************** function _LCD_PIC_Clear *****************
  1726 ;; Defined at:
  1727 ;;		line 98 in file "LCD_PIC.c"
  1728 ;; Parameters:    Size  Location     Type
  1729 ;;		None
  1730 ;; Auto vars:     Size  Location     Type
  1731 ;;		None
  1732 ;; Return value:  Size  Location     Type
  1733 ;;                  1    wreg      void 
  1734 ;; Registers used:
  1735 ;;		wreg, status,2, cstack
  1736 ;; Tracked objects:
  1737 ;;		On entry : 0/0
  1738 ;;		On exit  : 0/0
  1739 ;;		Unchanged: 0/0
  1740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1741 ;;      Params:         0       0       0       0       0       0       0       0       0
  1742 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1743 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1744 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1745 ;;Total ram usage:        0 bytes
  1746 ;; Hardware stack levels used: 1
  1747 ;; Hardware stack levels required when called: 2
  1748 ;; This function calls:
  1749 ;;		_LCD_PIC_Cmd
  1750 ;; This function is called by:
  1751 ;;		_main
  1752 ;; This function uses a non-reentrant model
  1753 ;;
  1754                           
  1755                           	psect	text8
  1756  000F16                     __ptext8:
  1757                           	callstack 0
  1758  000F16                     _LCD_PIC_Clear:
  1759                           	callstack 28
  1760  000F16                     
  1761                           ;LCD_PIC.c: 99:     LATDbits.LATD3 = 0;
  1762  000F16  968C               	bcf	140,3,c	;volatile
  1763  000F18                     
  1764                           ;LCD_PIC.c: 100:     LCD_PIC_Cmd(0x00);
  1765  000F18  0E00               	movlw	0
  1766  000F1A  EC5C  F007         	call	_LCD_PIC_Cmd
  1767                           
  1768                           ;LCD_PIC.c: 101:     LCD_PIC_Cmd(0x01);
  1769  000F1E  0E01               	movlw	1
  1770  000F20  EC5C  F007         	call	_LCD_PIC_Cmd
  1771  000F24  0012               	return		;funcret
  1772  000F26                     __end_of_LCD_PIC_Clear:
  1773                           	callstack 0
  1774                           
  1775 ;; *************** function _LCD_PIC_Cmd *****************
  1776 ;; Defined at:
  1777 ;;		line 13 in file "LCD_PIC.c"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;  a               1    wreg     unsigned char 
  1780 ;; Auto vars:     Size  Location     Type
  1781 ;;  a               1    2[COMRAM] unsigned char 
  1782 ;; Return value:  Size  Location     Type
  1783 ;;                  1    wreg      void 
  1784 ;; Registers used:
  1785 ;;		wreg, status,2, cstack
  1786 ;; Tracked objects:
  1787 ;;		On entry : 0/0
  1788 ;;		On exit  : 0/0
  1789 ;;		Unchanged: 0/0
  1790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1791 ;;      Params:         0       0       0       0       0       0       0       0       0
  1792 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1793 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1794 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1795 ;;Total ram usage:        2 bytes
  1796 ;; Hardware stack levels used: 1
  1797 ;; Hardware stack levels required when called: 1
  1798 ;; This function calls:
  1799 ;;		_LCD_PIC_DataBus
  1800 ;; This function is called by:
  1801 ;;		_LCD_PIC_Init
  1802 ;;		_LCD_PIC_SetCursor
  1803 ;;		_LCD_PIC_Char
  1804 ;;		_LCD_PIC_Clear
  1805 ;;		_LCD_PIC_Home
  1806 ;;		_LCD_PIC_New_Char
  1807 ;;		_LCD_PIC_Write_New_Char
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811                           	psect	text9
  1812  000EB8                     __ptext9:
  1813                           	callstack 0
  1814  000EB8                     _LCD_PIC_Cmd:
  1815                           	callstack 28
  1816                           
  1817                           ;incstack = 0
  1818                           ;LCD_PIC_Cmd@a stored from wreg
  1819  000EB8  6E03               	movwf	LCD_PIC_Cmd@a^0,c
  1820  000EBA                     
  1821                           ;LCD_PIC.c: 14:     LATDbits.LATD2 = 0;
  1822  000EBA  948C               	bcf	140,2,c	;volatile
  1823                           
  1824                           ;LCD_PIC.c: 15:     LATDbits.LATD2 = 1;
  1825  000EBC  848C               	bsf	140,2,c	;volatile
  1826  000EBE                     
  1827                           ;LCD_PIC.c: 16:     LCD_PIC_DataBus(a);
  1828  000EBE  5003               	movf	LCD_PIC_Cmd@a^0,w,c
  1829  000EC0  ECE6  F006         	call	_LCD_PIC_DataBus
  1830  000EC4                     
  1831                           ;LCD_PIC.c: 17:     _delay((unsigned long)((1)*(8000000UL/4000.0)));
  1832  000EC4  0E03               	movlw	3
  1833  000EC6  6E02               	movwf	??_LCD_PIC_Cmd^0,c
  1834  000EC8  0E98               	movlw	152
  1835  000ECA                     u187:
  1836  000ECA  2EE8               	decfsz	wreg,f,c
  1837  000ECC  D7FE               	bra	u187
  1838  000ECE  2E02               	decfsz	??_LCD_PIC_Cmd^0,f,c
  1839  000ED0  D7FC               	bra	u187
  1840  000ED2                     
  1841                           ;LCD_PIC.c: 18:     LATDbits.LATD2 = 0;
  1842  000ED2  948C               	bcf	140,2,c	;volatile
  1843  000ED4  0012               	return		;funcret
  1844  000ED6                     __end_of_LCD_PIC_Cmd:
  1845                           	callstack 0
  1846                           
  1847 ;; *************** function _LCD_PIC_DataBus *****************
  1848 ;; Defined at:
  1849 ;;		line 5 in file "LCD_PIC.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;  a               1    wreg     unsigned char 
  1852 ;; Auto vars:     Size  Location     Type
  1853 ;;  a               1    0[COMRAM] unsigned char 
  1854 ;; Return value:  Size  Location     Type
  1855 ;;                  1    wreg      void 
  1856 ;; Registers used:
  1857 ;;		wreg
  1858 ;; Tracked objects:
  1859 ;;		On entry : 0/0
  1860 ;;		On exit  : 0/0
  1861 ;;		Unchanged: 0/0
  1862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1863 ;;      Params:         0       0       0       0       0       0       0       0       0
  1864 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1865 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1866 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1867 ;;Total ram usage:        1 bytes
  1868 ;; Hardware stack levels used: 1
  1869 ;; This function calls:
  1870 ;;		Nothing
  1871 ;; This function is called by:
  1872 ;;		_LCD_PIC_Cmd
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876                           	psect	text10
  1877  000DCC                     __ptext10:
  1878                           	callstack 0
  1879  000DCC                     _LCD_PIC_DataBus:
  1880                           	callstack 28
  1881                           
  1882                           ;incstack = 0
  1883                           ;LCD_PIC_DataBus@a stored from wreg
  1884  000DCC  6E01               	movwf	LCD_PIC_DataBus@a^0,c
  1885  000DCE                     
  1886                           ;LCD_PIC.c: 8:     if(a & 0x1) LATDbits.LATD4 = 1;else LATDbits.LATD4 = 0;
  1887  000DCE  A001               	btfss	LCD_PIC_DataBus@a^0,0,c
  1888  000DD0  EFEC  F006         	goto	u11
  1889  000DD4  EFEE  F006         	goto	u10
  1890  000DD8                     u11:
  1891  000DD8  EFF1  F006         	goto	l41
  1892  000DDC                     u10:
  1893  000DDC  888C               	bsf	140,4,c	;volatile
  1894  000DDE  EFF2  F006         	goto	l770
  1895  000DE2                     l41:
  1896  000DE2  988C               	bcf	140,4,c	;volatile
  1897  000DE4                     l770:
  1898                           
  1899                           ;LCD_PIC.c: 9:     if(a & 0x2) LATDbits.LATD5 = 1;else LATDbits.LATD5 = 0;
  1900  000DE4  A201               	btfss	LCD_PIC_DataBus@a^0,1,c
  1901  000DE6  EFF7  F006         	goto	u21
  1902  000DEA  EFF9  F006         	goto	u20
  1903  000DEE                     u21:
  1904  000DEE  EFFC  F006         	goto	l43
  1905  000DF2                     u20:
  1906  000DF2  8A8C               	bsf	140,5,c	;volatile
  1907  000DF4  EFFD  F006         	goto	l774
  1908  000DF8                     l43:
  1909  000DF8  9A8C               	bcf	140,5,c	;volatile
  1910  000DFA                     l774:
  1911                           
  1912                           ;LCD_PIC.c: 10:     if(a & 0x4) LATDbits.LATD6 = 1;else LATDbits.LATD6 = 0;
  1913  000DFA  A401               	btfss	LCD_PIC_DataBus@a^0,2,c
  1914  000DFC  EF02  F007         	goto	u31
  1915  000E00  EF04  F007         	goto	u30
  1916  000E04                     u31:
  1917  000E04  EF07  F007         	goto	l45
  1918  000E08                     u30:
  1919  000E08  8C8C               	bsf	140,6,c	;volatile
  1920  000E0A  EF08  F007         	goto	l778
  1921  000E0E                     l45:
  1922  000E0E  9C8C               	bcf	140,6,c	;volatile
  1923  000E10                     l778:
  1924                           
  1925                           ;LCD_PIC.c: 11:     if(a & 0x8) LATDbits.LATD7 = 1;else LATDbits.LATD7 = 0;
  1926  000E10  A601               	btfss	LCD_PIC_DataBus@a^0,3,c
  1927  000E12  EF0D  F007         	goto	u41
  1928  000E16  EF0F  F007         	goto	u40
  1929  000E1A                     u41:
  1930  000E1A  EF12  F007         	goto	l47
  1931  000E1E                     u40:
  1932  000E1E  8E8C               	bsf	140,7,c	;volatile
  1933  000E20  EF13  F007         	goto	l49
  1934  000E24                     l47:
  1935  000E24  9E8C               	bcf	140,7,c	;volatile
  1936  000E26                     l49:
  1937  000E26  0012               	return		;funcret
  1938  000E28                     __end_of_LCD_PIC_DataBus:
  1939                           	callstack 0
  1940                           
  1941 ;; *************** function _ConfigClock *****************
  1942 ;; Defined at:
  1943 ;;		line 78 in file "Configuracion.c"
  1944 ;; Parameters:    Size  Location     Type
  1945 ;;		None
  1946 ;; Auto vars:     Size  Location     Type
  1947 ;;		None
  1948 ;; Return value:  Size  Location     Type
  1949 ;;                  1    wreg      void 
  1950 ;; Registers used:
  1951 ;;		wreg, status,2
  1952 ;; Tracked objects:
  1953 ;;		On entry : 0/0
  1954 ;;		On exit  : 0/0
  1955 ;;		Unchanged: 0/0
  1956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1957 ;;      Params:         0       0       0       0       0       0       0       0       0
  1958 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1959 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1960 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1961 ;;Total ram usage:        0 bytes
  1962 ;; Hardware stack levels used: 1
  1963 ;; This function calls:
  1964 ;;		Nothing
  1965 ;; This function is called by:
  1966 ;;		_main
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970                           	psect	text11
  1971  000F30                     __ptext11:
  1972                           	callstack 0
  1973  000F30                     _ConfigClock:
  1974                           	callstack 30
  1975  000F30  0E70               	movlw	112
  1976  000F32  12D3               	iorwf	211,f,c	;volatile
  1977  000F34  0012               	return		;funcret
  1978  000F36                     __end_of_ConfigClock:
  1979                           	callstack 0
  1980                           
  1981                           	psect	rparam
  1982  0000                     
  1983                           	psect	idloc
  1984                           
  1985                           ;Config register IDLOC0 @ 0x200000
  1986                           ;	unspecified, using default values
  1987  200000                     	org	2097152
  1988  200000  FF                 	db	255
  1989                           
  1990                           ;Config register IDLOC1 @ 0x200001
  1991                           ;	unspecified, using default values
  1992  200001                     	org	2097153
  1993  200001  FF                 	db	255
  1994                           
  1995                           ;Config register IDLOC2 @ 0x200002
  1996                           ;	unspecified, using default values
  1997  200002                     	org	2097154
  1998  200002  FF                 	db	255
  1999                           
  2000                           ;Config register IDLOC3 @ 0x200003
  2001                           ;	unspecified, using default values
  2002  200003                     	org	2097155
  2003  200003  FF                 	db	255
  2004                           
  2005                           ;Config register IDLOC4 @ 0x200004
  2006                           ;	unspecified, using default values
  2007  200004                     	org	2097156
  2008  200004  FF                 	db	255
  2009                           
  2010                           ;Config register IDLOC5 @ 0x200005
  2011                           ;	unspecified, using default values
  2012  200005                     	org	2097157
  2013  200005  FF                 	db	255
  2014                           
  2015                           ;Config register IDLOC6 @ 0x200006
  2016                           ;	unspecified, using default values
  2017  200006                     	org	2097158
  2018  200006  FF                 	db	255
  2019                           
  2020                           ;Config register IDLOC7 @ 0x200007
  2021                           ;	unspecified, using default values
  2022  200007                     	org	2097159
  2023  200007  FF                 	db	255
  2024                           
  2025                           	psect	config
  2026                           
  2027                           ;Config register CONFIG1L @ 0x300000
  2028                           ;	PLL Prescaler Selection bits
  2029                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  2030                           ;	System Clock Postscaler Selection bits
  2031                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  2032                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2033                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  2034  300000                     	org	3145728
  2035  300000  00                 	db	0
  2036                           
  2037                           ;Config register CONFIG1H @ 0x300001
  2038                           ;	Oscillator Selection bits
  2039                           ;	FOSC = INTOSC_XT, Internal oscillator, XT used by USB (INTXT)
  2040                           ;	Fail-Safe Clock Monitor Enable bit
  2041                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2042                           ;	Internal/External Oscillator Switchover bit
  2043                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2044  300001                     	org	3145729
  2045  300001  0A                 	db	10
  2046                           
  2047                           ;Config register CONFIG2L @ 0x300002
  2048                           ;	Power-up Timer Enable bit
  2049                           ;	PWRT = OFF, PWRT disabled
  2050                           ;	Brown-out Reset Enable bits
  2051                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2052                           ;	Brown-out Reset Voltage bits
  2053                           ;	BORV = 3, Minimum setting 2.05V
  2054                           ;	USB Voltage Regulator Enable bit
  2055                           ;	VREGEN = OFF, USB voltage regulator disabled
  2056  300002                     	org	3145730
  2057  300002  1F                 	db	31
  2058                           
  2059                           ;Config register CONFIG2H @ 0x300003
  2060                           ;	Watchdog Timer Enable bit
  2061                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2062                           ;	Watchdog Timer Postscale Select bits
  2063                           ;	WDTPS = 32768, 1:32768
  2064  300003                     	org	3145731
  2065  300003  1E                 	db	30
  2066                           
  2067                           ; Padding undefined space
  2068  300004                     	org	3145732
  2069  300004  FF                 	db	255
  2070                           
  2071                           ;Config register CONFIG3H @ 0x300005
  2072                           ;	CCP2 MUX bit
  2073                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  2074                           ;	PORTB A/D Enable bit
  2075                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  2076                           ;	Low-Power Timer 1 Oscillator Enable bit
  2077                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2078                           ;	MCLR Pin Enable bit
  2079                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2080  300005                     	org	3145733
  2081  300005  83                 	db	131
  2082                           
  2083                           ;Config register CONFIG4L @ 0x300006
  2084                           ;	Stack Full/Underflow Reset Enable bit
  2085                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2086                           ;	Single-Supply ICSP Enable bit
  2087                           ;	LVP = ON, Single-Supply ICSP enabled
  2088                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2089                           ;	ICPRT = OFF, ICPORT disabled
  2090                           ;	Extended Instruction Set Enable bit
  2091                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2092                           ;	Background Debugger Enable bit
  2093                           ;	DEBUG = 0x1, unprogrammed default
  2094  300006                     	org	3145734
  2095  300006  85                 	db	133
  2096                           
  2097                           ; Padding undefined space
  2098  300007                     	org	3145735
  2099  300007  FF                 	db	255
  2100                           
  2101                           ;Config register CONFIG5L @ 0x300008
  2102                           ;	Code Protection bit
  2103                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  2104                           ;	Code Protection bit
  2105                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  2106                           ;	Code Protection bit
  2107                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  2108                           ;	Code Protection bit
  2109                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  2110  300008                     	org	3145736
  2111  300008  0F                 	db	15
  2112                           
  2113                           ;Config register CONFIG5H @ 0x300009
  2114                           ;	Boot Block Code Protection bit
  2115                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  2116                           ;	Data EEPROM Code Protection bit
  2117                           ;	CPD = OFF, Data EEPROM is not code-protected
  2118  300009                     	org	3145737
  2119  300009  C0                 	db	192
  2120                           
  2121                           ;Config register CONFIG6L @ 0x30000A
  2122                           ;	Write Protection bit
  2123                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  2124                           ;	Write Protection bit
  2125                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  2126                           ;	Write Protection bit
  2127                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  2128                           ;	Write Protection bit
  2129                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  2130  30000A                     	org	3145738
  2131  30000A  0F                 	db	15
  2132                           
  2133                           ;Config register CONFIG6H @ 0x30000B
  2134                           ;	Configuration Register Write Protection bit
  2135                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2136                           ;	Boot Block Write Protection bit
  2137                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  2138                           ;	Data EEPROM Write Protection bit
  2139                           ;	WRTD = OFF, Data EEPROM is not write-protected
  2140  30000B                     	org	3145739
  2141  30000B  E0                 	db	224
  2142                           
  2143                           ;Config register CONFIG7L @ 0x30000C
  2144                           ;	Table Read Protection bit
  2145                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2146                           ;	Table Read Protection bit
  2147                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2148                           ;	Table Read Protection bit
  2149                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2150                           ;	Table Read Protection bit
  2151                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2152  30000C                     	org	3145740
  2153  30000C  0F                 	db	15
  2154                           
  2155                           ;Config register CONFIG7H @ 0x30000D
  2156                           ;	Boot Block Table Read Protection bit
  2157                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  2158  30000D                     	org	3145741
  2159  30000D  40                 	db	64
  2160                           tosu	equ	0xFFF
  2161                           tosh	equ	0xFFE
  2162                           tosl	equ	0xFFD
  2163                           stkptr	equ	0xFFC
  2164                           pclatu	equ	0xFFB
  2165                           pclath	equ	0xFFA
  2166                           pcl	equ	0xFF9
  2167                           tblptru	equ	0xFF8
  2168                           tblptrh	equ	0xFF7
  2169                           tblptrl	equ	0xFF6
  2170                           tablat	equ	0xFF5
  2171                           prodh	equ	0xFF4
  2172                           prodl	equ	0xFF3
  2173                           indf0	equ	0xFEF
  2174                           postinc0	equ	0xFEE
  2175                           postdec0	equ	0xFED
  2176                           preinc0	equ	0xFEC
  2177                           plusw0	equ	0xFEB
  2178                           fsr0h	equ	0xFEA
  2179                           fsr0l	equ	0xFE9
  2180                           wreg	equ	0xFE8
  2181                           indf1	equ	0xFE7
  2182                           postinc1	equ	0xFE6
  2183                           postdec1	equ	0xFE5
  2184                           preinc1	equ	0xFE4
  2185                           plusw1	equ	0xFE3
  2186                           fsr1h	equ	0xFE2
  2187                           fsr1l	equ	0xFE1
  2188                           bsr	equ	0xFE0
  2189                           indf2	equ	0xFDF
  2190                           postinc2	equ	0xFDE
  2191                           postdec2	equ	0xFDD
  2192                           preinc2	equ	0xFDC
  2193                           plusw2	equ	0xFDB
  2194                           fsr2h	equ	0xFDA
  2195                           fsr2l	equ	0xFD9
  2196                           status	equ	0xFD8

Data Sizes:
    Strings     85
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     23      23
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCD_PIC_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> STR_8(CODE[13]), STR_7(CODE[17]), STR_6(CODE[12]), STR_5(CODE[15]), 
		 -> STR_4(CODE[7]), STR_3(CODE[9]), STR_2(CODE[12]), STR_1(CODE[15]), 

    LCD_PIC_String@ptr	PTR unsigned char  size(2) Largest target is 17
		 -> STR_8(CODE[13]), STR_7(CODE[17]), STR_6(CODE[12]), STR_5(CODE[15]), 
		 -> STR_4(CODE[7]), STR_3(CODE[9]), STR_2(CODE[12]), STR_1(CODE[15]), 


Critical Paths under _main in COMRAM

    _main->_LCD_PIC_New_Char
    _LCD_PIC_Write_New_Char->_LCD_PIC_Cmd
    _LCD_PIC_String->_LCD_PIC_Char
    _LCD_PIC_Char->_LCD_PIC_Cmd
    _LCD_PIC_SetCursor->_LCD_PIC_Cmd
    _LCD_PIC_New_Char->_LCD_PIC_Cmd
    _LCD_PIC_Init->_LCD_PIC_Cmd
    _LCD_PIC_Home->_LCD_PIC_Cmd
    _LCD_PIC_Clear->_LCD_PIC_Cmd
    _LCD_PIC_Cmd->_LCD_PIC_DataBus

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     2      5    6362
                                             16 COMRAM     7     2      5
                        _ConfigClock
                      _LCD_PIC_Clear
                       _LCD_PIC_Home
                       _LCD_PIC_Init
                   _LCD_PIC_New_Char
                  _LCD_PIC_SetCursor
                     _LCD_PIC_String
             _LCD_PIC_Write_New_Char
 ---------------------------------------------------------------------------------
 (1) _LCD_PIC_Write_New_Char                               1     1      0      90
                                              3 COMRAM     1     1      0
                        _LCD_PIC_Cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_PIC_String                                       4     2      2     811
                                              6 COMRAM     4     2      2
                       _LCD_PIC_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_PIC_Char                                         3     3      0     135
                                              3 COMRAM     3     3      0
                        _LCD_PIC_Cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_PIC_SetCursor                                    7     6      1    1065
                                              3 COMRAM     7     6      1
                        _LCD_PIC_Cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_PIC_New_Char                                    13     5      8    4171
                                              3 COMRAM    13     5      8
                        _LCD_PIC_Cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_PIC_Init                                         0     0      0      75
                        _LCD_PIC_Cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_PIC_Home                                         0     0      0      75
                        _LCD_PIC_Cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_PIC_Clear                                        0     0      0      75
                        _LCD_PIC_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_PIC_Cmd                                          2     2      0      75
                                              1 COMRAM     2     2      0
                    _LCD_PIC_DataBus
 ---------------------------------------------------------------------------------
 (3) _LCD_PIC_DataBus                                      1     1      0      60
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigClock                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigClock
   _LCD_PIC_Clear
     _LCD_PIC_Cmd
       _LCD_PIC_DataBus
   _LCD_PIC_Home
     _LCD_PIC_Cmd
   _LCD_PIC_Init
     _LCD_PIC_Cmd
   _LCD_PIC_New_Char
     _LCD_PIC_Cmd
   _LCD_PIC_SetCursor
     _LCD_PIC_Cmd
   _LCD_PIC_String
     _LCD_PIC_Char
       _LCD_PIC_Cmd
   _LCD_PIC_Write_New_Char
     _LCD_PIC_Cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     17      17       1       24.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Aug 13 17:39:34 2022

              LCD_PIC_New_Char@a 000E                LCD_PIC_New_Char@b 0004  
              LCD_PIC_New_Char@c 0005                LCD_PIC_New_Char@d 0006  
              LCD_PIC_New_Char@e 0007                LCD_PIC_New_Char@f 0008  
              LCD_PIC_New_Char@g 0009                LCD_PIC_New_Char@h 000A  
              LCD_PIC_New_Char@i 000B                LCD_PIC_New_Char@m 000F  
              LCD_PIC_New_Char@n 0010                                l5 0F34  
__size_of_LCD_PIC_Write_New_Char 0014                               l41 0DE2  
                             l43 0DF8                               l52 0ED4  
                             l28 0CA0                               l45 0E0E  
                             l47 0E24                               l55 0E78  
                             l64 0DCA                               l49 0E26  
                             l73 0EB6                               l90 0F04  
                             l67 0EF0                               l76 0F24  
                             l79 0F14                               l87 0B2E  
                             u10 0DDC                               u11 0DD8  
                             u20 0DF2                               u21 0DEE  
                             u30 0E08                               u31 0E04  
                             u40 0E1E                               u41 0E1A  
                            l800 0F30                              l810 0E42  
                            l802 0E28                              l820 0E60  
                            l812 0E48                              l804 0E30  
                            l822 0E66                              l814 0E4E  
                            l806 0E36                              l824 0E6C  
                            l816 0E54                              l808 0E3C  
                            l770 0DE4                              l826 0E72  
                            l818 0E5A                              l780 0E1E  
                            l772 0DF2                              l774 0DFA  
                            l766 0DCE                              l782 0EBA  
                            l790 0ED8                              l776 0E08  
                            l768 0DDC                              l784 0EBE  
                            l792 0EDC                              l778 0E10  
                            l786 0EC4                              l794 0EE2  
                            l788 0ED2                              l796 0EE4  
                            l798 0EEA                              u105 0CC8  
                            u115 0D00                              u140 0EB6  
                            u125 0D38                              u141 0EB2  
                            u135 0D70                              u157 0C0C  
                            u167 0C22                              u177 0934  
                            u187 0ECA                     LCD_PIC_Cmd@a 0003  
                            wreg 000FE8                   ??_LCD_PIC_Char 0004  
                           l1200 095A                             l1210 0980  
                           l1202 095E                             l1060 0F16  
                           l1300 0AAE                             l1220 099C  
                           l1212 0986                             l1204 0964  
                           l1140 086A                             l1062 0F18  
                           l1310 0AD4                             l1302 0ABE  
                           l1230 09C2                             l1222 09AC  
                           l1214 098A                             l1206 096A  
                           l1150 0882                             l1142 086C  
                           l1070 0EF6                             l1064 0F06  
                           l1312 0ADA                             l1304 0AC4  
                           l1240 09E8                             l1232 09C8  
                           l1224 09B2                             l1216 0990  
                           l1208 0970                             l1160 08A8  
                           l1152 0888                             l1144 0872  
                           l1320 0AFC                             l1136 085A  
                           l1072 0EFC                             l1400 0C40  
                           l1066 0F08                             l1314 0AEA  
                           l1306 0AC8                             l1250 0A0E  
                           l1242 09EE                             l1234 09D8  
                           l1226 09B6                             l1218 0996  
                           l1170 08CE                             l1162 08AE  
                           l1154 0898                             l1146 0876  
                           l1138 085E                             l1330 0CD8  
                           l1074 0F02                             l1410 0C72  
                           l1402 0C4C                   ??_LCD_PIC_Home 0004  
                           l1308 0ACE                             l1252 0A14  
                           l1244 09F4                             l1236 09DE  
                           l1228 09BC                             l1180 08F6  
                           l1172 08D4                             l1164 08B4  
                           l1156 089E                             l1148 087C  
                           l1340 0D20                             l1332 0CDE  
                           l1068 0EF4                             l1412 0C7E  
                           l1404 0C56                             l1430 0B10  
                           l1270 0A44                             l1262 0A2C  
                           l1254 0A1A                             l1246 0A04  
                           l1238 09E2                             l1190 091C  
                           l1182 08FA                             l1174 08DA  
                           l1166 08C4                             l1158 08A2  
                           l1350 0D86                             l1342 0D48  
                           l1334 0CE8                             l1326 0CAA  
                           l1414 0C84                             l1406 0C62  
                           l1280 0A6C                             l1272 0A4A  
                           l1264 0A38                             l1256 0A1C  
                           l1248 0A0A                             l1192 092A  
                           l1184 0900                             l1176 08E0  
                           l1168 08CA                             l1344 0D4E  
                           l1336 0D10                             l1328 0CB0  
                           l1360 0E7A                             l1416 0C8E  
                           l1408 0C68                             l1290 0A92  
                           l1282 0A70                             l1274 0A50  
                           l1266 0A3A                             l1258 0A22  
                           l1194 0946                             l1186 0906  
                           l1178 08F0                             l1346 0D58  
                           l1338 0D16                             l1354 0D90  
                           l1362 0E86                             l1418 0C9A  
                           l1370 0B34                             l1292 0A98  
                           l1284 0A76                             l1276 0A56  
                           l1268 0A40                             l1196 0952  
                           l1188 090C                             l1428 0DA4  
                           l1348 0D80                             l1364 0E96  
                           l1380 0BB4                             l1372 0B38  
                 ??_LCD_PIC_Init 0004                             l1294 0A9C  
                           l1286 0A7C                             l1278 0A66  
                           l1198 0954                             l1366 0E9A  
                           l1390 0BEC                             l1382 0BC0  
                           l1374 0B5E                             l1296 0AA2  
                           l1288 0A82                             l1392 0BF6  
                           l1384 0BCA                             l1376 0B84  
                           l1368 0B30                             l1298 0AA8  
                           l1394 0C02                             l1386 0BD6  
                           l1378 0BAA                             l1396 0C18  
                           l1388 0BE0                             l1398 0C36  
                           STR_1 0812                             STR_2 083A  
                           STR_3 0846                             STR_4 084F  
                           STR_5 0812                             STR_6 082E  
                           STR_7 0801                             STR_8 0821  
                           _LATD 000F8C                             _main 0B30  
                  LCD_PIC_Char@c 0006                    LCD_PIC_Char@m 0004  
                  LCD_PIC_Char@n 0005                             start 0000  
            __end_of_ConfigClock 0F36                     ___param_bank 000000  
                ??_LCD_PIC_Clear 0004               LCD_PIC_SetCursor@m 0008  
             LCD_PIC_SetCursor@n 0009               LCD_PIC_SetCursor@x 000A  
             LCD_PIC_SetCursor@y 0004                            ?_main 0011  
                          _TRISD 000F95           _LCD_PIC_Write_New_Char 0EF2  
                          tablat 000FF5                            status 000FD8  
              LCD_PIC_String@ptr 0009                  __initialization 0F26  
                   __end_of_main 0CA8                           ??_main 0016  
                  __activetblptr 000002                 _LCD_PIC_New_Char 0858  
       __size_of_LCD_PIC_DataBus 005C                 ??_LCD_PIC_String 0009  
                    _ConfigClock 0F30             __size_of_LCD_PIC_Cmd 001E  
           __end_of_LCD_PIC_Char 0EF2             __end_of_LCD_PIC_Home 0F16  
           __end_of_LCD_PIC_Init 0E7A                           isa$std 000001  
                   __mediumconst 0000                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                     __accesstop 0060          __end_of__initialization 0F26  
                  ___rparam_used 000001                   __pcstackCOMRAM 0001  
                LCD_PIC_String@a 0007                ??_LCD_PIC_DataBus 0001  
        ?_LCD_PIC_Write_New_Char 0001                _LCD_PIC_SetCursor 0CA8  
             ?_LCD_PIC_SetCursor 0004              ??_LCD_PIC_SetCursor 0005  
                        __Hparam 0000            __size_of_LCD_PIC_Char 001C  
                        __Lparam 0000            __size_of_LCD_PIC_Home 0010  
          __size_of_LCD_PIC_Init 0052         __end_of_LCD_PIC_New_Char 0B30  
                   __psmallconst 0800                          __pcinit 0F26  
                        __ramtop 0800        __end_of_LCD_PIC_SetCursor 0DCC  
                        __ptext0 0B30                          __ptext1 0EF2  
                        __ptext2 0E7A                          __ptext3 0ED6  
                        __ptext4 0CA8                          __ptext5 0858  
                        __ptext6 0E28                          __ptext7 0F06  
                        __ptext8 0F16                          __ptext9 0EB8  
 __end_of_LCD_PIC_Write_New_Char 0F06            __end_of_LCD_PIC_Clear 0F26  
           end_of_initialization 0F26                     _LCD_PIC_Char 0ED6  
                   _LCD_PIC_Home 0F06                     _LCD_PIC_Init 0E28  
                   ?_ConfigClock 0001                 LCD_PIC_DataBus@a 0001  
                  __Lmediumconst 0000                    ??_LCD_PIC_Cmd 0002  
     __size_of_LCD_PIC_SetCursor 0124              start_initialization 0F26  
                _LCD_PIC_DataBus 0DCC          __size_of_LCD_PIC_String 003E  
            __end_of_LCD_PIC_Cmd 0ED6             __size_of_ConfigClock 0006  
              ?_LCD_PIC_New_Char 0004               ??_LCD_PIC_New_Char 000C  
        __end_of_LCD_PIC_DataBus 0E28                      __smallconst 0800  
                       _LATDbits 000F8C                      _LCD_PIC_Cmd 0EB8  
         __size_of_LCD_PIC_Clear 0010                         __Hrparam 0000  
                       __Lrparam 0000                   _LCD_PIC_String 0E7A  
               ?_LCD_PIC_DataBus 0001                         __ptext10 0DCC  
                       __ptext11 0F30                    __size_of_main 0178  
         __end_of_LCD_PIC_String 0EB8                         isa$xinst 000000  
       ??_LCD_PIC_Write_New_Char 0004                         main@argc 0011  
                       main@argv 0013                    _LCD_PIC_Clear 0F16  
                ?_LCD_PIC_String 0007                       _OSCCONbits 000FD3  
                 ?_LCD_PIC_Clear 0001        __size_of_LCD_PIC_New_Char 02D8  
                  ?_LCD_PIC_Char 0001                    ?_LCD_PIC_Home 0001  
                  ?_LCD_PIC_Init 0001          LCD_PIC_Write_New_Char@a 0004  
                  ??_ConfigClock 0001                     ?_LCD_PIC_Cmd 0001  
